{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"dotenv","disambiguator":[9450310585670639236,169572483749788833]},"crate_root":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src","external_crates":[{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15457747332785279848,2321850194859987339]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15868474213044323624,2444462643878075336]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8458891086083892067,8748117807113040734]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[767489389527341057,5235531157453730766]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[18110415425518651545,18006836507566872508]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7789913747131704681,15383421434934411168]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13641195905247684855,10390215052031693935]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[6546252056220169788,18379399819183232084]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[18001143091758731311,4733760878430807864]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":10,"id":{"name":"error_chain","disambiguator":[10272688765279677347,15289679175012841635]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[17389833844047997373,12603861125651083263]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":12,"id":{"name":"libc","disambiguator":[9795921507606627722,5163658886396158850]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":13,"id":{"name":"cfg_if","disambiguator":[604583596773021010,10790001770759559766]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[9027924498137030620,7722980228602934984]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":15,"id":{"name":"backtrace_sys","disambiguator":[18297417543081660257,9770758834172113173]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":16,"id":{"name":"derive_error_chain","disambiguator":[10971729688032340423,17280806317005168796]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":17,"id":{"name":"regex","disambiguator":[897616650282213135,8491329166074839660]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":18,"id":{"name":"aho_corasick","disambiguator":[9614652229152978541,1910757170782788063]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":19,"id":{"name":"memchr","disambiguator":[1922966407542116264,10982176376012973570]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":20,"id":{"name":"thread_local","disambiguator":[742887869722723632,16457061494488826588]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":21,"id":{"name":"unreachable","disambiguator":[10120044557901542313,14253108592247652693]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":22,"id":{"name":"void","disambiguator":[5818823682881022901,4190335088847544618]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":23,"id":{"name":"lazy_static","disambiguator":[15885094394357094236,10120972362620738961]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":24,"id":{"name":"regex_syntax","disambiguator":[4665267890868001893,10019355120551086333]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":25,"id":{"name":"ucd_util","disambiguator":[13502744880586320068,16079670112742148409]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","num":26,"id":{"name":"utf8_ranges","disambiguator":[8781510316182638942,5844516805939472892]}}],"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":13002,"line_start":1,"line_end":377,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":13002,"line_start":1,"line_end":377,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":28},{"krate":0,"index":34},{"krate":0,"index":40},{"krate":0,"index":70},{"krate":0,"index":180},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":94},{"krate":0,"index":106},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":146},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"decl_id":null,"docs":" This crate provides a configuration loader in the style of the [ruby dotenv\n gem](https://github.com/bkeepers/dotenv). This library is meant to be used\n on development or testing environments in which setting environment\n variables is not practical. It loads environment variables from a .env\n file, if available, and mashes those with the actual environment variables\n provided by the operating system.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":29},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":919,"byte_end":922,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Msg","qualname":"::ErrorKind::Msg","value":"ErrorKind::Msg(String)","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":33},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1102,"byte_end":1111,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"LineParse","qualname":"::ErrorKind::LineParse","value":"ErrorKind::LineParse(String)","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error_chain(custom)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":936,"byte_end":958,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"error_chain(description = r#\"|_| \"Parsing Error\"\"#)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":963,"byte_end":1017,"line_start":28,"line_end":28,"column_start":5,"column_end":59}},{"value":"error_chain(display = r#\"|l| write!(f, \"Error parsing line: '{}'\", l)\"#)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1022,"byte_end":1097,"line_start":29,"line_end":29,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":37},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1153,"byte_end":1167,"line_start":32,"line_end":32,"column_start":5,"column_end":19},"name":"ParseFormatter","qualname":"::ErrorKind::ParseFormatter","value":"ErrorKind::ParseFormatter(::regex::Error)","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error_chain(foreign)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1125,"byte_end":1148,"line_start":31,"line_end":31,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":41},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1217,"byte_end":1219,"line_start":34,"line_end":34,"column_start":5,"column_end":7},"name":"Io","qualname":"::ErrorKind::Io","value":"ErrorKind::Io(::std::io::Error)","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error_chain(foreign)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1189,"byte_end":1212,"line_start":33,"line_end":33,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":45},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1271,"byte_end":1277,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"name":"EnvVar","qualname":"::ErrorKind::EnvVar","value":"ErrorKind::EnvVar(::std::env::VarError)","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error_chain(foreign)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1243,"byte_end":1266,"line_start":35,"line_end":35,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":843,"byte_end":852,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::ErrorKind","value":"ErrorKind::{Msg, LineParse, ParseFormatter, Io, EnvVar}","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":33},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":45}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1643,"byte_end":1646,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"var","qualname":"::var","value":"fn <K> (key: K) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" After loading the dotenv file, fetches the environment variable key from the current process.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2168,"byte_end":2172,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"vars","qualname":"::vars","value":"fn () -> Vars","parent":null,"children":[],"decl_id":null,"docs":" After loading the dotenv file, returns an iterator of (variable, value) pairs of strings,\n for all the environment variables of the current process.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8422,"byte_end":8431,"line_start":236,"line_end":236,"column_start":8,"column_end":17},"name":"from_path","qualname":"::from_path","value":"fn (path: &Path) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Loads the file at the specified absolute path.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":66},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8900,"byte_end":8913,"line_start":255,"line_end":255,"column_start":8,"column_end":21},"name":"from_filename","qualname":"::from_filename","value":"fn (filename: &str) -> Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Loads the specified file from the environment's current directory or its parents in sequence.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,111,116,101,110,118,45,48,46,49,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9254,"byte_end":9260,"line_start":269,"line_end":269,"column_start":8,"column_end":14},"name":"dotenv","qualname":"::dotenv","value":"fn () -> Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" This is usually what you want.\n It loads the .env file located in the environment's current directory or its parents in sequence.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}