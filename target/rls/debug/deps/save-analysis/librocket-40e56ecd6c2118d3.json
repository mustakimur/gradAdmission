{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"rocket","disambiguator":[10767237327411116333,4831779353608817717]},"crate_root":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src","external_crates":[{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15457747332785279848,2321850194859987339]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15868474213044323624,2444462643878075336]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8458891086083892067,8748117807113040734]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[767489389527341057,5235531157453730766]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[18110415425518651545,18006836507566872508]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7789913747131704681,15383421434934411168]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13641195905247684855,10390215052031693935]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[6546252056220169788,18379399819183232084]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[18001143091758731311,4733760878430807864]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":10,"id":{"name":"log","disambiguator":[18233863749543335204,6599598087968243692]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":11,"id":{"name":"log","disambiguator":[6357824004226743353,16189599257281193726]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":12,"id":{"name":"cfg_if","disambiguator":[2450339140452008276,13179186969211013303]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":13,"id":{"name":"pear","disambiguator":[1468314315072287646,7396596865643181273]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":14,"id":{"name":"yansi","disambiguator":[9298558322797547647,5199655640109764460]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":15,"id":{"name":"hyper","disambiguator":[6660027777046739086,13786385013625942636]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":16,"id":{"name":"base64","disambiguator":[12125975761579849895,16090464707144151732]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":17,"id":{"name":"byteorder","disambiguator":[12397026866447492183,16732257056866357600]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":18,"id":{"name":"safemem","disambiguator":[3203467434994648903,12205534986643079131]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":19,"id":{"name":"time","disambiguator":[8937487737129008131,572587547475426581]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":20,"id":{"name":"libc","disambiguator":[9066865606645231593,8315176671305883117]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":21,"id":{"name":"url","disambiguator":[4818090194820483794,10282519491038026158]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":22,"id":{"name":"matches","disambiguator":[3680616274780198044,405136002864896865]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":23,"id":{"name":"idna","disambiguator":[16570256679804239508,56683107050108389]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":24,"id":{"name":"unicode_bidi","disambiguator":[14267882338406740233,6112751997229038353]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":25,"id":{"name":"unicode_normalization","disambiguator":[4235880954147281384,17670619984009230033]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":26,"id":{"name":"percent_encoding","disambiguator":[10286663350223995712,2689875022396988972]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":27,"id":{"name":"unicase","disambiguator":[13383923454716218809,11098604318624598767]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":28,"id":{"name":"httparse","disambiguator":[11786655077170157725,6830711855557415722]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":29,"id":{"name":"num_cpus","disambiguator":[13285486222312485746,14452635176290258355]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":30,"id":{"name":"traitobject","disambiguator":[8631656307024149771,2630018964916204539]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":31,"id":{"name":"typeable","disambiguator":[2276339735782928917,10845843336822154824]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":32,"id":{"name":"language_tags","disambiguator":[11805575397827933470,8711550112519622602]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":33,"id":{"name":"mime","disambiguator":[2356706262245616085,17904093256547131144]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":34,"id":{"name":"toml","disambiguator":[5802961739252799409,16361707925290363758]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":35,"id":{"name":"serde","disambiguator":[4244852658044408157,15237082481729973014]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":36,"id":{"name":"state","disambiguator":[8812685776302820795,14489019979327139862]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":37,"id":{"name":"cookie","disambiguator":[10030154086774478584,17200005978633062535]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":38,"id":{"name":"ring","disambiguator":[16506104007697095753,2538734764943192754]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":39,"id":{"name":"lazy_static","disambiguator":[16145211306416893025,7673333799055911455]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":40,"id":{"name":"untrusted","disambiguator":[5384149823487196428,3383161627072341833]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":41,"id":{"name":"memchr","disambiguator":[11808125393561057119,321282936880909454]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":42,"id":{"name":"base64","disambiguator":[17771084587507841838,7319495184016404526]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":43,"id":{"name":"smallvec","disambiguator":[16211930794258270167,17255969492260831094]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":44,"id":{"name":"ordermap","disambiguator":[6961545391310538227,16573770178541584559]}},{"file_name":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","num":45,"id":{"name":"isatty","disambiguator":[15783503384178805262,12560758884561254450]}}],"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":4910,"line_start":1,"line_end":159,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,109,111,100,46,114,115],"byte_start":13208,"byte_end":13221,"line_start":107,"line_end":107,"column_start":25,"column_end":38},"name":"LocalResponse","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,109,111,100,46,114,115],"byte_start":13223,"byte_end":13235,"line_start":107,"line_end":107,"column_start":40,"column_end":52},"name":"LocalRequest","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,109,111,100,46,114,115],"byte_start":13260,"byte_end":13266,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"name":"Client","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":15,"index":3836},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,121,112,101,114,46,114,115],"byte_start":36688,"byte_end":36692,"line_start":21,"line_end":21,"column_start":16,"column_end":20},"name":"mime","value":"","parent":{"krate":0,"index":230}},{"kind":"Use","ref_id":{"krate":0,"index":4766},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35561,"byte_end":35571,"line_start":27,"line_end":27,"column_start":37,"column_end":47},"name":"IndexedStr","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4166},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35615,"byte_end":35626,"line_start":28,"line_end":28,"column_start":43,"column_end":54},"name":"MediaParams","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4176},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35628,"byte_end":35634,"line_start":28,"line_end":28,"column_start":56,"column_end":62},"name":"Source","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4132},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35660,"byte_end":35666,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"name":"Method","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4322},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35696,"byte_end":35707,"line_start":31,"line_end":31,"column_start":29,"column_end":40},"name":"ContentType","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4652},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35732,"byte_end":35738,"line_start":32,"line_end":32,"column_start":24,"column_end":30},"name":"Accept","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4626},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35740,"byte_end":35750,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"name":"QMediaType","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4434},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35776,"byte_end":35782,"line_start":33,"line_end":33,"column_start":24,"column_end":30},"name":"Status","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4398},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35784,"byte_end":35795,"line_start":33,"line_end":33,"column_start":32,"column_end":43},"name":"StatusClass","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4582},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35821,"byte_end":35827,"line_start":34,"line_end":34,"column_start":24,"column_end":30},"name":"Header","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4606},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35829,"byte_end":35838,"line_start":34,"line_end":34,"column_start":32,"column_end":41},"name":"HeaderMap","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4724},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35864,"byte_end":35870,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"name":"RawStr","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4196},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35899,"byte_end":35908,"line_start":37,"line_end":37,"column_start":27,"column_end":36},"name":"MediaType","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":37,"index":618},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35934,"byte_end":35940,"line_start":38,"line_end":38,"column_start":25,"column_end":31},"name":"Cookie","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":368},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35942,"byte_end":35949,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"name":"Cookies","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":0,"index":4798},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":176932,"byte_end":176939,"line_start":12,"line_end":12,"column_start":24,"column_end":31},"name":"Request","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":1660},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":176970,"byte_end":176981,"line_start":13,"line_end":13,"column_start":30,"column_end":41},"name":"FromRequest","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":1648},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":176983,"byte_end":176990,"line_start":13,"line_end":13,"column_start":43,"column_end":50},"name":"Outcome","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":1278},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":177015,"byte_end":177024,"line_start":14,"line_end":14,"column_start":23,"column_end":32},"name":"FromParam","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":177026,"byte_end":177038,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"name":"FromSegments","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":1512},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":177062,"byte_end":177066,"line_start":15,"line_end":15,"column_start":22,"column_end":26},"name":"Form","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":1562},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":177068,"byte_end":177079,"line_start":15,"line_end":15,"column_start":28,"column_end":39},"name":"LenientForm","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":177081,"byte_end":177089,"line_start":15,"line_end":15,"column_start":41,"column_end":49},"name":"FromForm","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":1442},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":177091,"byte_end":177104,"line_start":15,"line_end":15,"column_start":51,"column_end":64},"name":"FromFormValue","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":177106,"byte_end":177115,"line_start":15,"line_end":15,"column_start":66,"column_end":75},"name":"FormItems","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":5048},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":177139,"byte_end":177144,"line_start":16,"line_end":16,"column_start":22,"column_end":27},"name":"State","value":"","parent":{"krate":0,"index":1118}},{"kind":"Use","ref_id":{"krate":0,"index":5134},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":270939,"byte_end":270947,"line_start":33,"line_end":33,"column_start":26,"column_end":34},"name":"Response","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":2112},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":270949,"byte_end":270964,"line_start":33,"line_end":33,"column_start":36,"column_end":51},"name":"ResponseBuilder","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":5114},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":270966,"byte_end":270970,"line_start":33,"line_end":33,"column_start":53,"column_end":57},"name":"Body","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":2088},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":270972,"byte_end":270990,"line_start":33,"line_end":33,"column_start":59,"column_end":77},"name":"DEFAULT_CHUNK_SIZE","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":1812},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":271018,"byte_end":271027,"line_start":34,"line_end":34,"column_start":26,"column_end":35},"name":"Responder","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":5090},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":271053,"byte_end":271061,"line_start":35,"line_end":35,"column_start":25,"column_end":33},"name":"Redirect","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":5096},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":271084,"byte_end":271089,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"name":"Flash","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":5108},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":271117,"byte_end":271126,"line_start":37,"line_end":37,"column_start":27,"column_end":36},"name":"NamedFile","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":2046},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":271150,"byte_end":271156,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"name":"Stream","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":5140},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":271181,"byte_end":271188,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"name":"Failure","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":5146},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":271228,"byte_end":271235,"line_start":40,"line_end":40,"column_start":39,"column_end":46},"name":"Content","value":"","parent":{"krate":0,"index":1782}},{"kind":"Use","ref_id":{"krate":0,"index":5556},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376193,"byte_end":376199,"line_start":207,"line_end":207,"column_start":30,"column_end":36},"name":"Limits","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":34,"index":44},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376223,"byte_end":376228,"line_start":208,"line_end":208,"column_start":23,"column_end":28},"name":"Array","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":34,"index":46},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376230,"byte_end":376235,"line_start":208,"line_end":208,"column_start":30,"column_end":35},"name":"Table","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":34,"index":1332},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376237,"byte_end":376242,"line_start":208,"line_end":208,"column_start":37,"column_end":42},"name":"Value","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":34,"index":1438},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376244,"byte_end":376252,"line_start":208,"line_end":208,"column_start":44,"column_end":52},"name":"Datetime","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":0,"index":5450},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376276,"byte_end":376287,"line_start":209,"line_end":209,"column_start":22,"column_end":33},"name":"ConfigError","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":0,"index":5500},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376316,"byte_end":376327,"line_start":210,"line_end":210,"column_start":28,"column_end":39},"name":"Environment","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":0,"index":5524},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376351,"byte_end":376357,"line_start":211,"line_end":211,"column_start":23,"column_end":29},"name":"Config","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":0,"index":5530},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376382,"byte_end":376395,"line_start":212,"line_end":212,"column_start":24,"column_end":37},"name":"ConfigBuilder","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":0,"index":3756},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376413,"byte_end":376425,"line_start":213,"line_end":213,"column_start":17,"column_end":29},"name":"LoggingLevel","value":"","parent":{"krate":0,"index":2416}},{"kind":"Use","ref_id":{"krate":0,"index":2904},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,109,111,100,46,114,115],"byte_start":472470,"byte_end":472474,"line_start":8,"line_end":8,"column_start":21,"column_end":25},"name":"Data","value":"","parent":{"krate":0,"index":2854}},{"kind":"Use","ref_id":{"krate":0,"index":2952},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,109,111,100,46,114,115],"byte_start":472503,"byte_end":472513,"line_start":9,"line_end":9,"column_start":28,"column_end":38},"name":"DataStream","value":"","parent":{"krate":0,"index":2854}},{"kind":"Use","ref_id":{"krate":0,"index":3042},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,109,111,100,46,114,115],"byte_start":472541,"byte_end":472549,"line_start":10,"line_end":10,"column_start":27,"column_end":35},"name":"FromData","value":"","parent":{"krate":0,"index":2854}},{"kind":"Use","ref_id":{"krate":0,"index":3030},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,109,111,100,46,114,115],"byte_start":472551,"byte_end":472558,"line_start":10,"line_end":10,"column_start":37,"column_end":44},"name":"Outcome","value":"","parent":{"krate":0,"index":2854}},{"kind":"Use","ref_id":{"krate":0,"index":3196},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":501698,"byte_end":501703,"line_start":58,"line_end":58,"column_start":23,"column_end":28},"name":"AdHoc","value":"","parent":{"krate":0,"index":3122}},{"kind":"Use","ref_id":{"krate":0,"index":3226},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":501731,"byte_end":501735,"line_start":59,"line_end":59,"column_start":27,"column_end":31},"name":"Info","value":"","parent":{"krate":0,"index":3122}},{"kind":"Use","ref_id":{"krate":0,"index":5618},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":501737,"byte_end":501741,"line_start":59,"line_end":59,"column_start":33,"column_end":37},"name":"Kind","value":"","parent":{"krate":0,"index":3122}},{"kind":"Use","ref_id":{"krate":0,"index":5134},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4110,"byte_end":4118,"line_start":137,"line_end":137,"column_start":34,"column_end":42},"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3110},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4153,"byte_end":4160,"line_start":138,"line_end":138,"column_start":34,"column_end":41},"name":"Handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3112},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4162,"byte_end":4174,"line_start":138,"line_end":138,"column_start":43,"column_end":55},"name":"ErrorHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3614},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4210,"byte_end":4225,"line_start":139,"line_end":139,"column_start":34,"column_end":49},"name":"StaticRouteInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3616},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4227,"byte_end":4242,"line_start":139,"line_end":139,"column_start":51,"column_end":66},"name":"StaticCatchInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5412},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4277,"byte_end":4284,"line_start":140,"line_end":140,"column_start":33,"column_end":40},"name":"Outcome","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2904},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4315,"byte_end":4319,"line_start":141,"line_end":141,"column_start":30,"column_end":34},"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5524},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4352,"byte_end":4358,"line_start":142,"line_end":142,"column_start":32,"column_end":38},"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5630},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4390,"byte_end":4395,"line_start":143,"line_end":143,"column_start":31,"column_end":36},"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3400},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4413,"byte_end":4418,"line_start":144,"line_end":144,"column_start":17,"column_end":22},"name":"Route","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4798},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4438,"byte_end":4445,"line_start":145,"line_end":145,"column_start":19,"column_end":26},"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5048},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4447,"byte_end":4452,"line_start":145,"line_end":145,"column_start":28,"column_end":33},"name":"State","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3634},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4472,"byte_end":4479,"line_start":146,"line_end":146,"column_start":18,"column_end":25},"name":"Catcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3554},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4497,"byte_end":4503,"line_start":147,"line_end":147,"column_start":17,"column_end":23},"name":"Rocket","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":4910,"line_start":1,"line_end":159,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":98},{"krate":0,"index":228},{"krate":0,"index":1118},{"krate":0,"index":1782},{"krate":0,"index":2328},{"krate":0,"index":2416},{"krate":0,"index":2854},{"krate":0,"index":3088},{"krate":0,"index":3122},{"krate":0,"index":3282},{"krate":0,"index":3342},{"krate":0,"index":3458},{"krate":0,"index":3600},{"krate":0,"index":3618},{"krate":0,"index":3682},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3726},{"krate":0,"index":3732},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3740},{"krate":0,"index":3742},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3754}],"decl_id":null,"docs":" # Rocket - Core API Documentation","sig":null,"attributes":[{"value":"feature(specialization)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"feature(const_fn)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"feature(plugin)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":50,"byte_end":69,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"feature(try_trait)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":70,"byte_end":92,"line_start":4,"line_end":4,"column_start":1,"column_end":23}},{"value":"feature(never_type)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":93,"byte_end":116,"line_start":5,"line_end":5,"column_start":1,"column_end":24}},{"value":"plugin(pear_codegen)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":118,"byte_end":142,"line_start":7,"line_end":7,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"logger","qualname":"::logger","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/logger.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":3756},{"krate":0,"index":3772},{"krate":0,"index":3768},{"krate":0,"index":3764},{"krate":0,"index":3760},{"krate":0,"index":3758},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":68},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":94},{"krate":0,"index":96}],"decl_id":null,"docs":" Rocket's logging infrastructure.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3827,"byte_end":3839,"line_start":119,"line_end":119,"column_start":16,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5262,"byte_end":5270,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"Critical","qualname":"::logger::LoggingLevel::Critical","value":"LoggingLevel::Critical","parent":{"krate":0,"index":3756},"children":[],"decl_id":null,"docs":" Only shows errors and warning.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5337,"byte_end":5343,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Normal","qualname":"::logger::LoggingLevel::Normal","value":"LoggingLevel::Normal","parent":{"krate":0,"index":3756},"children":[],"decl_id":null,"docs":" Shows everything except debug and trace information.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5375,"byte_end":5380,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Debug","qualname":"::logger::LoggingLevel::Debug","value":"LoggingLevel::Debug","parent":{"krate":0,"index":3756},"children":[],"decl_id":null,"docs":" Shows everything.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3756},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5204,"byte_end":5216,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"LoggingLevel","qualname":"::logger::LoggingLevel","value":"LoggingLevel::{Critical, Normal, Debug}","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1311}],"decl_id":null,"docs":" Defines the different levels for log messages.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5195,"byte_end":5383,"line_start":13,"line_end":20,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5195,"byte_end":5383,"line_start":13,"line_end":20,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":9394,"byte_end":9402,"line_start":143,"line_end":143,"column_start":8,"column_end":16},"name":"try_init","qualname":"::logger::try_init","value":"fn (level: LoggingLevel, verbose: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":9904,"byte_end":9908,"line_start":163,"line_end":163,"column_start":8,"column_end":12},"name":"init","qualname":"::logger::init","value":"fn (level: LoggingLevel) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"local","qualname":"::local","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/local/mod.rs","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":180},{"krate":0,"index":220},{"krate":0,"index":226}],"decl_id":null,"docs":" Structures for local dispatching of requests, primarily for testing.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":15622,"byte_end":15634,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"LocalRequest","qualname":"::local::request::LocalRequest","value":"LocalRequest {  }","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31}],"decl_id":null,"docs":" A structure representing a local request as created by [`Client`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":16404,"byte_end":16409,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"inner","qualname":"<LocalRequest<'c>>::inner","value":"fn (&self) -> &Request<'c>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inner `Request` as seen by Rocket.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":16383,"byte_end":16392,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":17252,"byte_end":17258,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"header","qualname":"<LocalRequest<'c>>::header","value":"fn <H> (mut self, header: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a header to this request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":17231,"byte_end":17240,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":17808,"byte_end":17818,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"add_header","qualname":"<LocalRequest<'c>>::add_header","value":"fn <H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a header to this request without consuming `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":17787,"byte_end":17796,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":18326,"byte_end":18332,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"remote","qualname":"<LocalRequest<'c>>::remote","value":"fn (mut self, address: SocketAddr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the remote address of this request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":18305,"byte_end":18314,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":18913,"byte_end":18919,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"cookie","qualname":"<LocalRequest<'c>>::cookie","value":"fn (self, cookie: Cookie<'static>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a cookie to this request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":18892,"byte_end":18901,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":19861,"byte_end":19865,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"body","qualname":"<LocalRequest<'c>>::body","value":"fn <S> (mut self, body: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the body (data) of the request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":19840,"byte_end":19849,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":20488,"byte_end":20496,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"set_body","qualname":"<LocalRequest<'c>>::set_body","value":"fn <S> (&mut self, body: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the body (data) of the request without consuming `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":20467,"byte_end":20476,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":20990,"byte_end":20998,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<LocalRequest<'c>>::dispatch","value":"fn (mut self) -> LocalResponse<'c>","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the request, returning the response.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":20961,"byte_end":20978,"line_start":251,"line_end":251,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":21811,"byte_end":21826,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"cloned_dispatch","qualname":"<LocalRequest<'c>>::cloned_dispatch","value":"fn (&self) -> LocalResponse<'c>","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the request, returning the response.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":21782,"byte_end":21799,"line_start":278,"line_end":278,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":23166,"byte_end":23178,"line_start":314,"line_end":314,"column_start":12,"column_end":24},"name":"mut_dispatch","qualname":"<LocalRequest<'c>>::mut_dispatch","value":"fn (&mut self) -> LocalResponse<'c>","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the request, returning the response.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":23137,"byte_end":23154,"line_start":313,"line_end":313,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":24138,"byte_end":24151,"line_start":341,"line_end":341,"column_start":12,"column_end":25},"name":"LocalResponse","qualname":"::local::request::LocalResponse","value":"LocalResponse {  }","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":49}],"decl_id":null,"docs":" A structure representing a response from dispatching a local request.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":27243,"byte_end":27249,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Client","qualname":"::local::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":59}],"decl_id":null,"docs":" A structure to construct requests for local dispatching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":27710,"byte_end":27713,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Client>::new","value":"fn (rocket: Rocket) -> Result<Client, LaunchError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Client` from an instance of `Rocket`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":27689,"byte_end":27698,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":28329,"byte_end":28335,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"rocket","qualname":"<Client>::rocket","value":"fn (&self) -> &Rocket","parent":null,"children":[],"decl_id":null,"docs":" Returns the instance of `Rocket` this client is creating requests for.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":28300,"byte_end":28317,"line_start":80,"line_end":80,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":29016,"byte_end":29019,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"get","qualname":"<Client>::get","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `GET` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":28987,"byte_end":29004,"line_start":101,"line_end":101,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":29764,"byte_end":29767,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"put","qualname":"<Client>::put","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `PUT` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":29735,"byte_end":29752,"line_start":122,"line_end":122,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":30648,"byte_end":30652,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"post","qualname":"<Client>::post","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `POST` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":30619,"byte_end":30636,"line_start":147,"line_end":147,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":31404,"byte_end":31410,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"delete","qualname":"<Client>::delete","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `DELETE` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":31375,"byte_end":31392,"line_start":168,"line_end":168,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":32186,"byte_end":32193,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"options","qualname":"<Client>::options","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `OPTIONS` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":32157,"byte_end":32174,"line_start":191,"line_end":191,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":32964,"byte_end":32968,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"head","qualname":"<Client>::head","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `HEAD` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":32935,"byte_end":32952,"line_start":214,"line_end":214,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":33738,"byte_end":33743,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"patch","qualname":"<Client>::patch","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `PATCH` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":33709,"byte_end":33726,"line_start":237,"line_end":237,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":34572,"byte_end":34575,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"req","qualname":"<Client>::req","value":"fn <'c, 'u, U> (&'c self, method: Method, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local request with method `method` to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":34543,"byte_end":34560,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":228},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"http","qualname":"::http","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/http/mod.rs","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":268},{"krate":0,"index":340},{"krate":0,"index":346},{"krate":0,"index":404},{"krate":0,"index":436},{"krate":0,"index":514},{"krate":0,"index":584},{"krate":0,"index":606},{"krate":0,"index":672},{"krate":0,"index":750},{"krate":0,"index":834},{"krate":0,"index":922},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1090},{"krate":0,"index":1096},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1112}],"decl_id":null,"docs":" Types that map to concepts in HTTP.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":230},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,121,112,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hyper","qualname":"::http::hyper","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/http/hyper.rs","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258}],"decl_id":null,"docs":" Re-exported hyper HTTP library types.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":258},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,121,112,101,114,46,114,115],"byte_start":36873,"byte_end":36879,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"name":"header","qualname":"::http::hyper::header","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/http/hyper.rs","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":3788},{"krate":0,"index":3790},{"krate":0,"index":3792},{"krate":0,"index":3794},{"krate":0,"index":3796},{"krate":0,"index":3798},{"krate":0,"index":3800},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3810},{"krate":0,"index":3812},{"krate":0,"index":3814},{"krate":0,"index":3816},{"krate":0,"index":3818},{"krate":0,"index":3820},{"krate":0,"index":3822},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3828},{"krate":0,"index":3830},{"krate":0,"index":3832},{"krate":0,"index":3834},{"krate":0,"index":3836},{"krate":0,"index":3838},{"krate":0,"index":3840},{"krate":0,"index":3842},{"krate":0,"index":3844},{"krate":0,"index":3846},{"krate":0,"index":3848},{"krate":0,"index":3850},{"krate":0,"index":3852},{"krate":0,"index":3854},{"krate":0,"index":3856},{"krate":0,"index":3858},{"krate":0,"index":3860},{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":3866},{"krate":0,"index":3868},{"krate":0,"index":3870},{"krate":0,"index":3872},{"krate":0,"index":3874},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3880},{"krate":0,"index":3882},{"krate":0,"index":3884},{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3892},{"krate":0,"index":3894},{"krate":0,"index":3896},{"krate":0,"index":3898},{"krate":0,"index":3900},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3906},{"krate":0,"index":3908},{"krate":0,"index":3910},{"krate":0,"index":3912},{"krate":0,"index":3914},{"krate":0,"index":3916},{"krate":0,"index":3920},{"krate":0,"index":3924},{"krate":0,"index":3928},{"krate":0,"index":3932},{"krate":0,"index":3936},{"krate":0,"index":3940},{"krate":0,"index":3944},{"krate":0,"index":3948},{"krate":0,"index":3952},{"krate":0,"index":3956},{"krate":0,"index":3960},{"krate":0,"index":3964},{"krate":0,"index":3968},{"krate":0,"index":3972},{"krate":0,"index":3976},{"krate":0,"index":3980},{"krate":0,"index":3984},{"krate":0,"index":3988},{"krate":0,"index":3992},{"krate":0,"index":3996},{"krate":0,"index":4000},{"krate":0,"index":4004},{"krate":0,"index":4008},{"krate":0,"index":4012},{"krate":0,"index":4016},{"krate":0,"index":4020},{"krate":0,"index":4024},{"krate":0,"index":4028},{"krate":0,"index":4032},{"krate":0,"index":4036},{"krate":0,"index":4040},{"krate":0,"index":4044},{"krate":0,"index":4048},{"krate":0,"index":4052},{"krate":0,"index":4056},{"krate":0,"index":4060},{"krate":0,"index":4064},{"krate":0,"index":4068},{"krate":0,"index":4072},{"krate":0,"index":4076},{"krate":0,"index":4080},{"krate":0,"index":4084},{"krate":0,"index":4088},{"krate":0,"index":4092}],"decl_id":null,"docs":" Reexported Hyper header types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":268},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uri","qualname":"::http::uri","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/http/uri.rs","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":4096},{"krate":0,"index":4098},{"krate":0,"index":290},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":330},{"krate":0,"index":4102},{"krate":0,"index":4108},{"krate":0,"index":4104},{"krate":0,"index":334},{"krate":0,"index":4112},{"krate":0,"index":4128},{"krate":0,"index":4122},{"krate":0,"index":4118},{"krate":0,"index":4114}],"decl_id":null,"docs":" Borrowed and owned string types for absolute URIs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4096},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":39820,"byte_end":39823,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"URI","qualname":"::http::uri::URI","value":"URI {  }","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1321}],"decl_id":null,"docs":" Borrowed string type for absolute URIs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":40183,"byte_end":40186,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<URI<'a>>::new","value":"fn <T> (uri: T) -> URI<'a>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new URI from a given string. The URI is assumed to be an\n absolute, well formed URI.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":41746,"byte_end":41759,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"segment_count","qualname":"<URI<'a>>::segment_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of segments in the URI. Empty segments, which are\n invalid according to RFC#3986, are not counted.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":41717,"byte_end":41734,"line_start":80,"line_end":80,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":43324,"byte_end":43332,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"segments","qualname":"<URI<'a>>::segments","value":"fn (&self) -> Segments","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the segments of the path in this URI. Skips\n empty segments.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":43295,"byte_end":43312,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":43915,"byte_end":43919,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"path","qualname":"<URI<'a>>::path","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the path part of this URI.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":43886,"byte_end":43903,"line_start":158,"line_end":158,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":44589,"byte_end":44594,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"query","qualname":"<URI<'a>>::query","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the query part of this URI without the question mark, if there is\n any.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":44560,"byte_end":44577,"line_start":186,"line_end":186,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":45273,"byte_end":45281,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"fragment","qualname":"<URI<'a>>::fragment","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the fargment part of this URI without the hash mark, if there is\n any.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":45244,"byte_end":45261,"line_start":213,"line_end":213,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":45811,"byte_end":45825,"line_start":230,"line_end":230,"column_start":12,"column_end":26},"name":"percent_decode","qualname":"<URI<'a>>::percent_decode","value":"fn (string: &[u8]) -> Result<Cow<str>, Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a URL-decoded version of the string. If the percent encoded\n values are not valid UTF-8, an `Err` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":46451,"byte_end":46471,"line_start":248,"line_end":248,"column_start":12,"column_end":32},"name":"percent_decode_lossy","qualname":"<URI<'a>>::percent_decode_lossy","value":"fn (string: &[u8]) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a URL-decoded version of the path. Any invalid UTF-8\n percent-encoded byte sequences will be replaced � U+FFFD, the\n replacement character.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":47054,"byte_end":47068,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"percent_encode","qualname":"<URI<'a>>::percent_encode","value":"fn (string: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a URL-encoded version of the string. Any characters outside of\n visible ASCII-range are encoded as well as ' ', '\"', '#', '<', '>', '`',\n '?', '{', '}', '%', and '/'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":47716,"byte_end":47722,"line_start":284,"line_end":284,"column_start":12,"column_end":18},"name":"as_str","qualname":"<URI<'a>>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner string of this URI.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":47687,"byte_end":47704,"line_start":283,"line_end":283,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4102},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":49776,"byte_end":49784,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"Segments","qualname":"::http::uri::Segments","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the segments of an absolute URI path. Skips empty segments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":51279,"byte_end":51283,"line_start":408,"line_end":408,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::http::uri::SegmentError::Utf8","value":"SegmentError::Utf8(Utf8Error)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" The segment contained invalid UTF8 characters when percent decoded.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1341},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":51364,"byte_end":51372,"line_start":410,"line_end":410,"column_start":5,"column_end":13},"name":"BadStart","qualname":"::http::uri::SegmentError::BadStart","value":"SegmentError::BadStart(char)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" The segment started with the wrapped invalid character.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":51445,"byte_end":51452,"line_start":412,"line_end":412,"column_start":5,"column_end":12},"name":"BadChar","qualname":"::http::uri::SegmentError::BadChar","value":"SegmentError::BadChar(char)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" The segment contained the wrapped invalid character.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1349},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":51526,"byte_end":51532,"line_start":414,"line_end":414,"column_start":5,"column_end":11},"name":"BadEnd","qualname":"::http::uri::SegmentError::BadEnd","value":"SegmentError::BadEnd(char)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" The segment ended with the wrapped invalid character.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4112},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":51184,"byte_end":51196,"line_start":406,"line_end":406,"column_start":10,"column_end":22},"name":"SegmentError","qualname":"::http::uri::SegmentError","value":"SegmentError::{Utf8, BadStart, BadChar, BadEnd}","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1341},{"krate":0,"index":1345},{"krate":0,"index":1349}],"decl_id":null,"docs":" Errors which can occur when attempting to interpret a segment string as a\n valid path segment.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":51175,"byte_end":51541,"line_start":406,"line_end":415,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":137},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":64722,"byte_end":64728,"line_start":114,"line_end":114,"column_start":5,"column_end":11},"name":"Jarred","qualname":"::http::cookies::Cookies::Jarred","value":"Cookies::Jarred(RefMut<'a, CookieJar>, &'a Key)","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":143},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":64785,"byte_end":64790,"line_start":116,"line_end":116,"column_start":5,"column_end":10},"name":"Empty","qualname":"::http::cookies::Cookies::Empty","value":"Cookies::Empty(CookieJar)","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":368},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":64685,"byte_end":64692,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"Cookies","qualname":"::http::cookies::Cookies","value":"Cookies::{Jarred, Empty}","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":143}],"decl_id":null,"docs":" Collection of one or more HTTP cookies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":65835,"byte_end":65838,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"get","qualname":"<Cookies<'a>>::get","value":"fn (&self, name: &str) -> Option<&Cookie<'static>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the `Cookie` inside this container with the name\n `name`. If no such cookie exists, returns `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":66555,"byte_end":66566,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"get_private","qualname":"<Cookies<'a>>::get_private","value":"fn (&mut self, name: &str) -> Option<Cookie<'static>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the `Cookie` inside this collection with the name\n `name` and authenticates and decrypts the cookie's value, returning a\n `Cookie` with the decrypted value. If the cookie cannot be found, or the\n cookie fails to authenticate or decrypt, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":67238,"byte_end":67241,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"add","qualname":"<Cookies<'a>>::add","value":"fn (&mut self, cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `cookie` to this collection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":68447,"byte_end":68458,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"add_private","qualname":"<Cookies<'a>>::add_private","value":"fn (&mut self, mut cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `cookie` to the collection. The cookie's value is encrypted with\n authenticated encryption assuring confidentiality, integrity, and\n authenticity. The cookie can later be retrieved using\n [`get_private`](#method.get_private) and removed using\n [`remove_private`](#method.remove_private).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":69606,"byte_end":69612,"line_start":264,"line_end":264,"column_start":12,"column_end":18},"name":"remove","qualname":"<Cookies<'a>>::remove","value":"fn (&mut self, cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes `cookie` from this collection and generates a \"removal\" cookies\n to send to the client on response. For correctness, `cookie` must\n contain the same `path` and `domain` as the cookie that was initially\n set. Failure to provide the initual `path` and `domain` will result in\n cookies that are not properly removed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":70284,"byte_end":70298,"line_start":285,"line_end":285,"column_start":12,"column_end":26},"name":"remove_private","qualname":"<Cookies<'a>>::remove_private","value":"fn (&mut self, mut cookie: Cookie<'static>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the private `cookie` from the collection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":70926,"byte_end":70930,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"iter","qualname":"<Cookies<'a>>::iter","value":"fn <'s> (&'s self) -> impl Iterator<Item = &'s Cookie<'static>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all of the cookies present in this collection.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1353},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72067,"byte_end":72070,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Get","qualname":"::http::method::Method::Get","value":"Method::Get","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1355},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72076,"byte_end":72079,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"Put","qualname":"::http::method::Method::Put","value":"Method::Put","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72085,"byte_end":72089,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Post","qualname":"::http::method::Method::Post","value":"Method::Post","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72095,"byte_end":72101,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Delete","qualname":"::http::method::Method::Delete","value":"Method::Delete","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1361},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72107,"byte_end":72114,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Options","qualname":"::http::method::Method::Options","value":"Method::Options","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72120,"byte_end":72124,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Head","qualname":"::http::method::Method::Head","value":"Method::Head","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72130,"byte_end":72135,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Trace","qualname":"::http::method::Method::Trace","value":"Method::Trace","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72141,"byte_end":72148,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Connect","qualname":"::http::method::Method::Connect","value":"Method::Connect","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1369},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72154,"byte_end":72159,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"Patch","qualname":"::http::method::Method::Patch","value":"Method::Patch","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4132},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72054,"byte_end":72060,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Method","qualname":"::http::method::Method","value":"Method::{Get, Put, Post, Delete, Options, Head, Trace, Connect, Patch}","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369}],"decl_id":null,"docs":" Representation of HTTP methods.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72045,"byte_end":72161,"line_start":14,"line_end":24,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72045,"byte_end":72161,"line_start":14,"line_end":24,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":73132,"byte_end":73148,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"supports_payload","qualname":"<Method>::supports_payload","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if an HTTP request with the method represented by `self`\n supports a payload.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":73111,"byte_end":73120,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":73546,"byte_end":73552,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Method>::as_str","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the string representation of `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":73525,"byte_end":73534,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1377},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75380,"byte_end":75386,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Static","qualname":"::http::media_type::MediaParams::Static","value":"MediaParams::Static(&'static [(IndexedStr, IndexedStr)])","parent":{"krate":0,"index":4166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1381},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75429,"byte_end":75436,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::http::media_type::MediaParams::Dynamic","value":"MediaParams::Dynamic(SmallVec<[(IndexedStr, IndexedStr); 2]>)","parent":{"krate":0,"index":4166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4166},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75362,"byte_end":75373,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"MediaParams","qualname":"::http::media_type::MediaParams","value":"MediaParams::{Static, Dynamic}","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1381}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1387},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75542,"byte_end":75547,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Known","qualname":"::http::media_type::Source::Known","value":"Source::Known(&'static str)","parent":{"krate":0,"index":4176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1391},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75567,"byte_end":75573,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Custom","qualname":"::http::media_type::Source::Custom","value":"Source::Custom(Cow<'static, str>)","parent":{"krate":0,"index":4176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75598,"byte_end":75602,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"None","qualname":"::http::media_type::Source::None","value":"Source::None","parent":{"krate":0,"index":4176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4176},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75529,"byte_end":75535,"line_start":26,"line_end":26,"column_start":10,"column_end":16},"name":"Source","qualname":"::http::media_type::Source","value":"Source::{Known, Custom, None}","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1391},{"krate":0,"index":1395}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75520,"byte_end":75604,"line_start":26,"line_end":30,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":4196},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":77522,"byte_end":77531,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"MediaType","qualname":"::http::media_type::MediaType","value":"MediaType { source, top, sub, params }","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403}],"decl_id":null,"docs":" An HTTP media type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1397},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":77611,"byte_end":77617,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"name":"source","qualname":"::http::media_type::MediaType::source","value":"http::media_type::Source","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":" Storage for the entire media type string.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1399},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":77682,"byte_end":77685,"line_start":93,"line_end":93,"column_start":9,"column_end":12},"name":"top","qualname":"::http::media_type::MediaType::top","value":"http::parse::indexed_str::IndexedStr","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":" The top-level type.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1401},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":77747,"byte_end":77750,"line_start":96,"line_end":96,"column_start":9,"column_end":12},"name":"sub","qualname":"::http::media_type::MediaType::sub","value":"http::parse::indexed_str::IndexedStr","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":" The subtype.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1403},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":77823,"byte_end":77829,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"params","qualname":"::http::media_type::MediaType::params","value":"http::media_type::MediaParams","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":" The parameters, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":81092,"byte_end":81095,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"new","qualname":"<MediaType>::new","value":"fn <T, S> (top: T, sub: S) -> MediaType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MediaType` with top-level type `top` and subtype `sub`.\n This should _only_ be used to construct uncommon or custom media types.\n Use an associated constant for everything else.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":81071,"byte_end":81080,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":82382,"byte_end":82393,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"with_params","qualname":"<MediaType>::with_params","value":"fn <T, S, K, V, P> (top: T, sub: S, ps: P) -> MediaType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MediaType` with top-level type `top`, subtype `sub`, and\n parameters `ps`. This should _only_ be used to construct uncommon or\n custom media types. Use an associated constant for everything else.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":82361,"byte_end":82370,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":83478,"byte_end":83481,"line_start":268,"line_end":268,"column_start":12,"column_end":15},"name":"top","qualname":"<MediaType>::top","value":"fn (&self) -> &UncasedStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the top-level type for this media type. The return type,\n `UncasedStr`, has caseless equality comparison and hashing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":83457,"byte_end":83466,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":83996,"byte_end":83999,"line_start":286,"line_end":286,"column_start":12,"column_end":15},"name":"sub","qualname":"<MediaType>::sub","value":"fn (&self) -> &UncasedStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the subtype for this media type. The return type,\n `UncasedStr`, has caseless equality comparison and hashing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":83975,"byte_end":83984,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":84909,"byte_end":84920,"line_start":314,"line_end":314,"column_start":12,"column_end":23},"name":"specificity","qualname":"<MediaType>::specificity","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a `u8` representing how specific the top-level type and subtype\n of this media type are.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":84888,"byte_end":84897,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":86222,"byte_end":86230,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"exact_eq","qualname":"<MediaType>::exact_eq","value":"fn (&self, other: &MediaType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares `self` with `other` and returns `true` if `self` and `other`\n are exactly equal to eachother, including with respect to their\n parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":87539,"byte_end":87545,"line_start":387,"line_end":387,"column_start":12,"column_end":18},"name":"params","qualname":"<MediaType>::params","value":"fn <'a> (&'a self) -> impl Iterator<Item = (&'a str, &'a str)> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the (key, value) pairs of the media type's\n parameter list. The iterator will be empty if the media type has no\n parameters.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":87518,"byte_end":87527,"line_start":386,"line_end":386,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4322},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":90201,"byte_end":90212,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"ContentType","qualname":"::http::content_type::ContentType","value":"","parent":null,"children":[],"decl_id":null,"docs":" Representation of HTTP Content-Types.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":91329,"byte_end":91332,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<ContentType>::new","value":"fn <T, S> (top: T, sub: S) -> ContentType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ContentType` with top-level type `top` and subtype `sub`.\n This should _only_ be used to construct uncommon or custom content\n types. Use an associated constant for everything else.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":91300,"byte_end":91317,"line_start":75,"line_end":75,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":92541,"byte_end":92555,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"from_extension","qualname":"<ContentType>::from_extension","value":"fn (ext: &str) -> Option<ContentType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Content-Type associated with the extension `ext` if the\n extension is recognized. Not all extensions are recognized. If an\n extensions is not recognized, then this method returns `None`. The\n currently recognized extensions are txt, html, htm, xml, csv, js, css,\n json, png, gif, bmp, jpeg, jpg, webp, svg, pdf, ttf, otf, woff, and\n woff2. Extensions are matched case-insensitively.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":92520,"byte_end":92529,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":93628,"byte_end":93639,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"with_params","qualname":"<ContentType>::with_params","value":"fn <T, S, K, V, P> (top: T, sub: S, ps: P) -> ContentType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ContentType` with top-level type `top`, subtype `sub`,\n and parameters `ps`. This should _only_ be used to construct uncommon or\n custom content types. Use an associated constant for everything else.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":93607,"byte_end":93616,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94230,"byte_end":94240,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"media_type","qualname":"<ContentType>::media_type","value":"fn (&self) -> &MediaType","parent":null,"children":[],"decl_id":null,"docs":" Borrows the inner `MediaType` of `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94201,"byte_end":94218,"line_start":159,"line_end":159,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1523},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":97950,"byte_end":97963,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"Informational","qualname":"::http::status::StatusClass::Informational","value":"StatusClass::Informational","parent":{"krate":0,"index":4398},"children":[],"decl_id":null,"docs":" Indicates a provisional response: a status code of 1XX.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1525},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":98039,"byte_end":98046,"line_start":9,"line_end":9,"column_start":5,"column_end":12},"name":"Success","qualname":"::http::status::StatusClass::Success","value":"StatusClass::Success","parent":{"krate":0,"index":4398},"children":[],"decl_id":null,"docs":" Indicates that a request has succeeded: a status code of 2XX.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1527},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":98189,"byte_end":98200,"line_start":12,"line_end":12,"column_start":5,"column_end":16},"name":"Redirection","qualname":"::http::status::StatusClass::Redirection","value":"StatusClass::Redirection","parent":{"krate":0,"index":4398},"children":[],"decl_id":null,"docs":" Indicates that further action needs to be taken by the user agent in\n order to fulfill the request: a status code of 3XX.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1529},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":98304,"byte_end":98315,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"ClientError","qualname":"::http::status::StatusClass::ClientError","value":"StatusClass::ClientError","parent":{"krate":0,"index":4398},"children":[],"decl_id":null,"docs":" Intended for cases in which the client seems to have erred: a status\n code of 4XX.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1531},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":98465,"byte_end":98476,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"name":"ServerError","qualname":"::http::status::StatusClass::ServerError","value":"StatusClass::ServerError","parent":{"krate":0,"index":4398},"children":[],"decl_id":null,"docs":" Indicates cases in which the server is aware that it has erred or is\n incapable of performing the request: a status code of 5XX.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1533},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":98581,"byte_end":98588,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::http::status::StatusClass::Unknown","value":"StatusClass::Unknown","parent":{"krate":0,"index":4398},"children":[],"decl_id":null,"docs":" Indicates that the status code is nonstandard and unknown: all other\n status codes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4398},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":97868,"byte_end":97879,"line_start":5,"line_end":5,"column_start":10,"column_end":21},"name":"StatusClass","qualname":"::http::status::StatusClass","value":"StatusClass::{Informational, Success, Redirection, ClientError, ServerError, Unknown}","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1533}],"decl_id":null,"docs":" Enumeration of HTTP status classes.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":97859,"byte_end":98590,"line_start":5,"line_end":22,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":97859,"byte_end":98590,"line_start":5,"line_end":22,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":4434},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":100434,"byte_end":100440,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"Status","qualname":"::http::status::Status","value":"Status { code, reason }","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1539}],"decl_id":null,"docs":" Structure representing an HTTP status: an integer code and a reason phrase.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":100423,"byte_end":100610,"line_start":85,"line_end":90,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":100423,"byte_end":100610,"line_start":85,"line_end":90,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1537},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":100509,"byte_end":100513,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"name":"code","qualname":"::http::status::Status::code","value":"u16","parent":{"krate":0,"index":4434},"children":[],"decl_id":null,"docs":" The HTTP status code associated with this status.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1539},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":100588,"byte_end":100594,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"reason","qualname":"::http::status::Status::reason","value":"&'static str","parent":{"krate":0,"index":4434},"children":[],"decl_id":null,"docs":" The HTTP reason phrase associated with this status.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":102470,"byte_end":102473,"line_start":152,"line_end":152,"column_start":18,"column_end":21},"name":"new","qualname":"<Status>::new","value":"fn (code: u16, reason: &'static str) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Status` with `code` and `reason`. This should be _only_\n to construct non-standard HTTP statuses. Use an associated constant for\n standard statuses.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":102435,"byte_end":102452,"line_start":151,"line_end":151,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":103465,"byte_end":103470,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"class","qualname":"<Status>::class","value":"fn (&self) -> StatusClass","parent":null,"children":[],"decl_id":null,"docs":" Returns the class of a given status.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":104050,"byte_end":104053,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"raw","qualname":"<Status>::raw","value":"fn (code: u16) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Returns a status from a given status code. If the status code is a\n standard code, then the reason phrase is populated accordingly.\n Otherwise the reason phrase is set to \"<unknown code>\".\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":104010,"byte_end":104019,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4582},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":108091,"byte_end":108097,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Header","qualname":"::http::header::Header","value":"Header { name, value }","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1665}],"decl_id":null,"docs":" Simple representation of an HTTP header.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":108080,"byte_end":108226,"line_start":10,"line_end":15,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1663},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":108144,"byte_end":108148,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"name","qualname":"::http::header::Header::name","value":"http::uncased::Uncased<'h>","parent":{"krate":0,"index":4582},"children":[],"decl_id":null,"docs":" The name of the header.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1665},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":108204,"byte_end":108209,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"value","qualname":"::http::header::Header::value","value":"std::borrow::Cow<'h, str>","parent":{"krate":0,"index":4582},"children":[],"decl_id":null,"docs":" The value of the header.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":109281,"byte_end":109284,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<Header<'h>>::new","value":"fn <'a, 'b, N, V> (name: N, value: V) -> Header<'h>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new header. This method should be used rarely and only for\n non-standard headers. Instead, prefer to use the `Into<Header>`\n implementations of many types, including\n [ContentType](struct.ContentType.html) and all of the headers in\n [http::hyper::header](hyper/header/index.html).","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":109252,"byte_end":109269,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":110361,"byte_end":110365,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"name","qualname":"<Header<'h>>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this header with casing preserved. To do a\n case-insensitive equality check, use `.name` directly.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":110332,"byte_end":110349,"line_start":80,"line_end":80,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":110766,"byte_end":110771,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"value","qualname":"<Header<'h>>::value","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of this header.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":110737,"byte_end":110754,"line_start":97,"line_end":97,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4606},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":111470,"byte_end":111479,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"HeaderMap","qualname":"::http::header::HeaderMap","value":"HeaderMap {  }","parent":null,"children":[{"krate":0,"index":1681}],"decl_id":null,"docs":" A collection of headers, mapping a header name to its many ordered values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":111781,"byte_end":111784,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<HeaderMap<'h>>::new","value":"fn () -> HeaderMap<'h>","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty collection.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":111752,"byte_end":111769,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":112252,"byte_end":112260,"line_start":152,"line_end":152,"column_start":12,"column_end":20},"name":"contains","qualname":"<HeaderMap<'h>>::contains","value":"fn (&self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `self` contains a header with the name `name`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":112231,"byte_end":112240,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":112881,"byte_end":112884,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"len","qualname":"<HeaderMap<'h>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of _values_ stored in the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":112860,"byte_end":112869,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":113286,"byte_end":113294,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HeaderMap<'h>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no headers stored in the map. Otherwise\n returns `false`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":113265,"byte_end":113274,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":114001,"byte_end":114004,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"get","qualname":"<HeaderMap<'h>>::get","value":"fn <'a> (&'a self, name: &str) -> impl Iterator<Item = &'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all of the values stored in `self` for the\n header with name `name`. The headers are returned in FIFO order.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":113980,"byte_end":113989,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":115121,"byte_end":115128,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"get_one","qualname":"<HeaderMap<'h>>::get_one","value":"fn <'a> (&'a self, name: &str) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the _first_ value stored for the header with name `name` if\n there is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":115100,"byte_end":115109,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":116959,"byte_end":116966,"line_start":311,"line_end":311,"column_start":12,"column_end":19},"name":"replace","qualname":"<HeaderMap<'h>>::replace","value":"fn <'p, H> (&mut self, header: H) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Replace any header that matches the name of `header.name` with `header`.\n If there is no such header in `self`, add `header`. If the matching\n header had multiple values, all of the values are removed, and only the\n value in `header` will remain.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":116930,"byte_end":116947,"line_start":310,"line_end":310,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":117745,"byte_end":117756,"line_start":334,"line_end":334,"column_start":12,"column_end":23},"name":"replace_raw","qualname":"<HeaderMap<'h>>::replace_raw","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to replace a header using a raw name and value.\n Aliases `replace(Header::new(name, value))`. Should be used rarely.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":117716,"byte_end":117733,"line_start":333,"line_end":333,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":118693,"byte_end":118704,"line_start":361,"line_end":361,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<HeaderMap<'h>>::replace_all","value":"fn <'n, 'v, H> (&mut self, name: H, values: Vec<Cow<'v, str>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces all of the values for a header with name `name` with `values`.\n This a low-level method and should rarely be used.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":118664,"byte_end":118681,"line_start":360,"line_end":360,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":119386,"byte_end":119389,"line_start":382,"line_end":382,"column_start":12,"column_end":15},"name":"add","qualname":"<HeaderMap<'h>>::add","value":"fn <'p, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `header` into the map. If a header with `header.name` was\n previously added, that header will have one more value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":119357,"byte_end":119374,"line_start":381,"line_end":381,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":120161,"byte_end":120168,"line_start":405,"line_end":405,"column_start":12,"column_end":19},"name":"add_raw","qualname":"<HeaderMap<'h>>::add_raw","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to add a header using a raw name and value.\n Aliases `add(Header::new(name, value))`. Should be used rarely.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":120132,"byte_end":120149,"line_start":404,"line_end":404,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":121259,"byte_end":121266,"line_start":436,"line_end":436,"column_start":12,"column_end":19},"name":"add_all","qualname":"<HeaderMap<'h>>::add_all","value":"fn <'n, H> (&mut self, name: H, values: &mut Vec<Cow<'h, str>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds all of the values to a header with name `name`. This a low-level\n method and should rarely be used. `values` will be empty when this\n method returns.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":121230,"byte_end":121247,"line_start":435,"line_end":435,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":121963,"byte_end":121969,"line_start":461,"line_end":461,"column_start":12,"column_end":18},"name":"remove","qualname":"<HeaderMap<'h>>::remove","value":"fn (&mut self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all of the values for header with name `name`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":121934,"byte_end":121951,"line_start":460,"line_end":460,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":123369,"byte_end":123379,"line_start":501,"line_end":501,"column_start":12,"column_end":22},"name":"remove_all","qualname":"<HeaderMap<'h>>::remove_all","value":"fn (&mut self) -> Vec<Header<'h>>","parent":null,"children":[],"decl_id":null,"docs":" Removes all of the headers stored in this map and returns a vector\n containing them. Header names are returned in no specific order, but all\n values for a given header name are grouped together, and values are in\n FIFO order.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":123340,"byte_end":123357,"line_start":500,"line_end":500,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":124796,"byte_end":124800,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<HeaderMap<'h>>::iter","value":"fn <'s> (&'s self) -> impl Iterator<Item = Header<'s>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all of the `Header`s stored in the map. Header\n names are returned in no specific order, but all values for a given\n header name are grouped together, and values are in FIFO order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":126396,"byte_end":126405,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"into_iter","qualname":"<HeaderMap<'h>>::into_iter","value":"fn (self) -> impl Iterator<Item = Header<'h>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns an iterator over all of the `Header`s stored\n in the map. Header names are returned in no specific order, but all\n values for a given header name are grouped together, and values are in\n FIFO order.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":126367,"byte_end":126384,"line_start":586,"line_end":586,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4626},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":128052,"byte_end":128062,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"QMediaType","qualname":"::http::accept::QMediaType","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `MediaType` with an associated quality value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":128442,"byte_end":128448,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"weight","qualname":"<QMediaType>::weight","value":"fn (&self) -> Option<f32>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the weight of the media type, if there is any.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":128413,"byte_end":128430,"line_start":26,"line_end":26,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":128942,"byte_end":128951,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"weight_or","qualname":"<QMediaType>::weight_or","value":"fn (&self, default: f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the weight of the media type or a given default value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":128913,"byte_end":128930,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":129338,"byte_end":129348,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"media_type","qualname":"<QMediaType>::media_type","value":"fn (&self) -> &MediaType","parent":null,"children":[],"decl_id":null,"docs":" Borrow the internal `MediaType`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":129309,"byte_end":129326,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4652},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":131740,"byte_end":131746,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"Accept","qualname":"::http::accept::Accept","value":"","parent":null,"children":[],"decl_id":null,"docs":" The HTTP Accept header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":133654,"byte_end":133657,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"new","qualname":"<Accept>::new","value":"fn <T> (items: T) -> Accept","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Accept` header from one or more media types.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":133625,"byte_end":133642,"line_start":196,"line_end":196,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":134666,"byte_end":134675,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"preferred","qualname":"<Accept>::preferred","value":"fn (&self) -> &QMediaType","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the client's preferred media type. This method follows [RFC\n 7231 5.3.2]. If the list of media types is empty, this method returns a\n media type of any with no quality value: (`*/*`).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":136438,"byte_end":136443,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"first","qualname":"<Accept>::first","value":"fn (&self) -> Option<&QMediaType>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the first media type in `self`, if any.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":136409,"byte_end":136426,"line_start":267,"line_end":267,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":137249,"byte_end":137253,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"iter","qualname":"<Accept>::iter","value":"fn <'a> (&'a self) -> impl Iterator<Item = &'a QMediaType> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all of the (quality) media types in `self`.\n Media types are returned in the order in which they appear in the\n header.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":137220,"byte_end":137237,"line_start":293,"line_end":293,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":138253,"byte_end":138264,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"media_types","qualname":"<Accept>::media_types","value":"fn <'a> (&'a self) -> impl Iterator<Item = &'a MediaType> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all of the (bare) media types in `self`. Media\n types are returned in the order in which they appear in the header.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":138224,"byte_end":138241,"line_start":323,"line_end":323,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4724},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":143663,"byte_end":143669,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"RawStr","qualname":"::http::raw_str::RawStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a string inside of a raw HTTP message.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":143586,"byte_end":143596,"line_start":49,"line_end":49,"column_start":1,"column_end":11}},{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":143652,"byte_end":143675,"line_start":51,"line_end":51,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":144080,"byte_end":144088,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"from_str","qualname":"<RawStr>::from_str","value":"fn <'a> (string: &'a str) -> &'a RawStr","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `&RawStr` from an `&str` at no cost.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":144051,"byte_end":144068,"line_start":66,"line_end":66,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":145012,"byte_end":145026,"line_start":100,"line_end":100,"column_start":12,"column_end":26},"name":"percent_decode","qualname":"<RawStr>::percent_decode","value":"fn (&self) -> Result<Cow<str>, Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a percent-decoded version of the string.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":144983,"byte_end":145000,"line_start":99,"line_end":99,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":146024,"byte_end":146044,"line_start":131,"line_end":131,"column_start":12,"column_end":32},"name":"percent_decode_lossy","qualname":"<RawStr>::percent_decode_lossy","value":"fn (&self) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a percent-decoded version of the string. Any invalid UTF-8\n percent-encoded byte sequences will be replaced � U+FFFD, the\n replacement character.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":145995,"byte_end":146012,"line_start":130,"line_end":130,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":146748,"byte_end":146758,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"url_decode","qualname":"<RawStr>::url_decode","value":"fn (&self) -> Result<String, Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a URL-decoded version of the string. This is identical to\n percent decoding except that `+` characters are converted into spaces.\n This is the encoding used by form values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":148475,"byte_end":148486,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"html_escape","qualname":"<RawStr>::html_escape","value":"fn (&self) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an HTML escaped version of `self`. Allocates only when\n characters need to be escaped.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":150445,"byte_end":150451,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"name":"as_str","qualname":"<RawStr>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `&str`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":150416,"byte_end":150433,"line_start":249,"line_end":249,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":150932,"byte_end":150946,"line_start":268,"line_end":268,"column_start":12,"column_end":26},"name":"as_uncased_str","qualname":"<RawStr>::as_uncased_str","value":"fn (&self) -> &UncasedStr","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `&UncasedStr`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":150903,"byte_end":150920,"line_start":267,"line_end":267,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1791},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,112,97,114,115,101,47,105,110,100,101,120,101,100,95,115,116,114,46,114,115],"byte_start":164140,"byte_end":164147,"line_start":7,"line_end":7,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::http::parse::indexed_str::IndexedStr::Indexed","value":"IndexedStr::Indexed(Index, Index)","parent":{"krate":0,"index":4766},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1797},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,112,97,114,115,101,47,105,110,100,101,120,101,100,95,115,116,114,46,114,115],"byte_start":164167,"byte_end":164175,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"Concrete","qualname":"::http::parse::indexed_str::IndexedStr::Concrete","value":"IndexedStr::Concrete(Cow<'static, str>)","parent":{"krate":0,"index":4766},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4766},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,112,97,114,115,101,47,105,110,100,101,120,101,100,95,115,116,114,46,114,115],"byte_start":164123,"byte_end":164133,"line_start":6,"line_end":6,"column_start":10,"column_end":20},"name":"IndexedStr","qualname":"::http::parse::indexed_str::IndexedStr","value":"IndexedStr::{Indexed, Concrete}","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1797}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,112,97,114,115,101,47,105,110,100,101,120,101,100,95,115,116,114,46,114,115],"byte_start":164287,"byte_end":164297,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"is_indexed","qualname":"<IndexedStr>::is_indexed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this string is derived from indexes or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,112,97,114,115,101,47,105,110,100,101,120,101,100,95,115,116,114,46,114,115],"byte_start":164757,"byte_end":164763,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"to_str","qualname":"<IndexedStr>::to_str","value":"fn <'a> (&'a self, string: Option<&'a str>) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the string `self` corresponds to. If `self` is derived from\n indexes, the corresponding subslice of `string` is returned. Otherwise,\n the concrete string is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,112,97,114,115,101,47,105,110,100,101,120,101,100,95,115,116,114,46,114,115],"byte_start":165146,"byte_end":165150,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"from","qualname":"<IndexedStr>::from","value":"fn (needle: &str, haystack: &str) -> Option<IndexedStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":922},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uncased","qualname":"::http::uncased","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/http/uncased.rs","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":940},{"krate":0,"index":4776},{"krate":0,"index":4778},{"krate":0,"index":942},{"krate":0,"index":950},{"krate":0,"index":954},{"krate":0,"index":958},{"krate":0,"index":962},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":980},{"krate":0,"index":984},{"krate":0,"index":988},{"krate":0,"index":4782},{"krate":0,"index":4788},{"krate":0,"index":4784},{"krate":0,"index":992},{"krate":0,"index":1002},{"krate":0,"index":1008},{"krate":0,"index":1012},{"krate":0,"index":1016},{"krate":0,"index":1020},{"krate":0,"index":1024},{"krate":0,"index":1028},{"krate":0,"index":1032},{"krate":0,"index":1036},{"krate":0,"index":1040},{"krate":0,"index":1044},{"krate":0,"index":1048},{"krate":0,"index":1052},{"krate":0,"index":1056},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1070}],"decl_id":null,"docs":" Contains types that encapsulate uncased ASCII strings.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4776},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":166635,"byte_end":166645,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"UncasedStr","qualname":"::http::uncased::UncasedStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to an uncased (case-preserving) ASCII string. This is typically\n created from an `&str` as follows:","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":166596,"byte_end":166606,"line_start":21,"line_end":21,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":167066,"byte_end":167069,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<UncasedStr>::new","value":"fn (string: &str) -> &UncasedStr","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an `UncasedStr` from an `&str`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":167037,"byte_end":167054,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":167517,"byte_end":167523,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"as_str","qualname":"<UncasedStr>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` as an `&str`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":167488,"byte_end":167505,"line_start":54,"line_end":54,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":167952,"byte_end":167964,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"into_uncased","qualname":"<UncasedStr>::into_uncased","value":"fn (self: Box<UncasedStr>) -> Uncased<'static>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Box<UncasedStr>` into an `Uncased` without copying or allocating.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":167923,"byte_end":167940,"line_start":70,"line_end":70,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4782},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":170035,"byte_end":170042,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"Uncased","qualname":"::http::uncased::Uncased","value":"Uncased { string }","parent":null,"children":[{"krate":0,"index":1805}],"decl_id":null,"docs":" An uncased (case-preserving), owned _or_ borrowed ASCII string.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1805},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":170076,"byte_end":170082,"line_start":158,"line_end":158,"column_start":9,"column_end":15},"name":"string","qualname":"::http::uncased::Uncased::string","value":"std::borrow::Cow<'s, str>","parent":{"krate":0,"index":4782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":170485,"byte_end":170488,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"new","qualname":"<Uncased<'s>>::new","value":"fn <S> (string: S) -> Uncased<'s>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Uncased` string from `string` without allocating.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":170456,"byte_end":170473,"line_start":173,"line_end":173,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":170961,"byte_end":170972,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Uncased<'s>>::into_string","value":"fn (self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an owned `String`, allocating if necessary.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":170932,"byte_end":170949,"line_start":189,"line_end":189,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":171344,"byte_end":171362,"line_start":205,"line_end":205,"column_start":12,"column_end":30},"name":"into_boxed_uncased","qualname":"<Uncased<'s>>::into_boxed_uncased","value":"fn (self) -> Box<UncasedStr>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into a `Box<UncasedStr>`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":171315,"byte_end":171332,"line_start":204,"line_end":204,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":171647,"byte_end":171655,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"into_cow","qualname":"<Uncased<'s>>::into_cow","value":"fn (self) -> Cow<'s, str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner `Cow`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":171618,"byte_end":171635,"line_start":214,"line_end":214,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":1070},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":174488,"byte_end":174498,"line_start":340,"line_end":340,"column_start":8,"column_end":18},"name":"uncased_eq","qualname":"::http::uncased::uncased_eq","value":"fn <S1, S2> (s1: S1, s2: S2) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `s1` and `s2` are equal without considering case.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":174463,"byte_end":174480,"line_start":339,"line_end":339,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1118},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"request","qualname":"::request","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/request/mod.rs","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1258},{"krate":0,"index":1360},{"krate":0,"index":1616},{"krate":0,"index":1720},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1760},{"krate":0,"index":1766},{"krate":0,"index":1778},{"krate":0,"index":1780}],"decl_id":null,"docs":" Types and traits for request parsing and handling.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4798},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":178462,"byte_end":178469,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1839}],"decl_id":null,"docs":" The type of an incoming web request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":179616,"byte_end":179623,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"example","qualname":"<Request<'r>>::example","value":"fn <F> (method: Method, uri: &str, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":180224,"byte_end":180230,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"method","qualname":"<Request<'r>>::method","value":"fn (&self) -> Method","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the method from `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":180195,"byte_end":180212,"line_start":92,"line_end":92,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":180706,"byte_end":180716,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"set_method","qualname":"<Request<'r>>::set_method","value":"fn (&mut self, method: Method) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the method of `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":180677,"byte_end":180694,"line_start":112,"line_end":112,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":181150,"byte_end":181153,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"uri","qualname":"<Request<'r>>::uri","value":"fn (&self) -> &URI","parent":null,"children":[],"decl_id":null,"docs":" Borrow the URI from `self`, which is guaranteed to be an absolute URI.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":181121,"byte_end":181138,"line_start":128,"line_end":128,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":181748,"byte_end":181755,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"set_uri","qualname":"<Request<'r>>::set_uri","value":"fn <'u, U> (&mut self, uri: U) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the URI in `self`. The `uri` parameter can be of any type that\n implements `Into<URI>` including `&str` and `String`; it _must_ be a\n valid, absolute URI.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":181719,"byte_end":181736,"line_start":147,"line_end":147,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":182347,"byte_end":182353,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"remote","qualname":"<Request<'r>>::remote","value":"fn (&self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the remote connection that initiated this\n request if the address is known. If the address is not known, `None` is\n returned.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":182318,"byte_end":182335,"line_start":166,"line_end":166,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":183058,"byte_end":183068,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"set_remote","qualname":"<Request<'r>>::set_remote","value":"fn (&mut self, address: SocketAddr) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the remote address of `self` to `address`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":183029,"byte_end":183046,"line_start":190,"line_end":190,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":183576,"byte_end":183583,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request<'r>>::headers","value":"fn (&self) -> &HeaderMap<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`HeaderMap`](/rocket/http/struct.HeaderMap.html) of all of\n the headers in `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":183547,"byte_end":183564,"line_start":208,"line_end":208,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":184421,"byte_end":184431,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"add_header","qualname":"<Request<'r>>::add_header","value":"fn <'h, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add `header` to `self`'s headers. The type of `header` can be any type\n that implements the `Into<Header>` trait. This includes common types\n such as [`ContentType`](/rocket/http/struct.ContentType.html) and\n [`Accept`](/rocket/http/struct.Accept.html).","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":184392,"byte_end":184409,"line_start":233,"line_end":233,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":185306,"byte_end":185320,"line_start":260,"line_end":260,"column_start":12,"column_end":26},"name":"replace_header","qualname":"<Request<'r>>::replace_header","value":"fn <'h, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the value of the header with name `header.name` with\n `header.value`. If no such header exists, `header` is added as a header\n to `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":185277,"byte_end":185294,"line_start":259,"line_end":259,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":186117,"byte_end":186124,"line_start":284,"line_end":284,"column_start":12,"column_end":19},"name":"cookies","qualname":"<Request<'r>>::cookies","value":"fn (&self) -> Cookies","parent":null,"children":[],"decl_id":null,"docs":" Returns a wrapped borrow to the cookies in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":187563,"byte_end":187575,"line_start":320,"line_end":320,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Request<'r>>::content_type","value":"fn (&self) -> Option<&ContentType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Content-Type header of `self`. If the header is not present,\n returns `None`. The Content-Type header is cached after the first call\n to this function. As a result, subsequent calls will always return the\n same value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":187534,"byte_end":187551,"line_start":319,"line_end":319,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":188582,"byte_end":188588,"line_start":348,"line_end":348,"column_start":12,"column_end":18},"name":"accept","qualname":"<Request<'r>>::accept","value":"fn (&self) -> Option<&Accept>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Accept header of `self`. If the header is not present,\n returns `None`. The Accept header is cached after the first call to this\n function. As a result, subsequent calls will always return the same\n value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":188553,"byte_end":188570,"line_start":347,"line_end":347,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":189821,"byte_end":189827,"line_start":381,"line_end":381,"column_start":12,"column_end":18},"name":"format","qualname":"<Request<'r>>::format","value":"fn (&self) -> Option<&MediaType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the media type \"format\" of the request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":190706,"byte_end":190712,"line_start":406,"line_end":406,"column_start":12,"column_end":18},"name":"limits","qualname":"<Request<'r>>::limits","value":"fn (&self) -> &'r Limits","parent":null,"children":[],"decl_id":null,"docs":" Returns the configured application receive limits.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":191299,"byte_end":191304,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"route","qualname":"<Request<'r>>::route","value":"fn (&self) -> Option<&'r Route>","parent":null,"children":[],"decl_id":null,"docs":" Get the presently matched route, if any.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":191871,"byte_end":191876,"line_start":447,"line_end":447,"column_start":12,"column_end":17},"name":"guard","qualname":"<Request<'r>>::guard","value":"fn <'a, T> (&'a self) -> Outcome<T, T::Error>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the request guard implemention for `T`, returning its outcome.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":191842,"byte_end":191859,"line_start":446,"line_end":446,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":192860,"byte_end":192869,"line_start":473,"line_end":473,"column_start":12,"column_end":21},"name":"get_param","qualname":"<Request<'r>>::get_param","value":"fn <'a, T> (&'a self, n: usize) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves and parses into `T` the 0-indexed `n`th dynamic parameter from\n the request. Returns `Error::NoKey` if `n` is greater than the number of\n params. Returns `Error::BadParse` if the parameter type `T` can't be\n parsed from the parameter.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":193190,"byte_end":193203,"line_start":481,"line_end":481,"column_start":12,"column_end":25},"name":"get_param_str","qualname":"<Request<'r>>::get_param_str","value":"fn (&self, n: usize) -> Option<&RawStr>","parent":null,"children":[],"decl_id":null,"docs":" Get the `n`th path parameter as a string, if it exists. This is used by\n codegen.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":194576,"byte_end":194588,"line_start":517,"line_end":517,"column_start":12,"column_end":24},"name":"get_segments","qualname":"<Request<'r>>::get_segments","value":"fn <'a, T> (&'a self, n: usize) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves and parses into `T` all of the path segments in the request\n URI beginning at the 0-indexed `n`th dynamic parameter. `T` must\n implement [FromSegments](/rocket/request/trait.FromSegments.html), which\n is used to parse the segments.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":194946,"byte_end":194962,"line_start":526,"line_end":526,"column_start":12,"column_end":28},"name":"get_raw_segments","qualname":"<Request<'r>>::get_raw_segments","value":"fn (&self, n: usize) -> Option<Segments>","parent":null,"children":[],"decl_id":null,"docs":" Get the segments beginning at the `n`th dynamic parameter, if they\n exist. Used by codegen.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1278},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":205718,"byte_end":205727,"line_start":196,"line_end":196,"column_start":11,"column_end":20},"name":"FromParam","qualname":"::request::param::FromParam","value":"FromParam<'a>: Sized","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1282}],"decl_id":null,"docs":" Trait to convert a dynamic path segment string to a concrete value.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1280},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":205814,"byte_end":205819,"line_start":198,"line_end":198,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::param::FromParam::Error","value":"type Error: Debug;","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" The associated error to be returned when parsing fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":205965,"byte_end":205975,"line_start":202,"line_end":202,"column_start":8,"column_end":18},"name":"from_param","qualname":"::request::param::FromParam::from_param","value":"fn (param: &'a RawStr) -> Result<Self, Self::Error>","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from a dynamic path parameter string or\n returns an `Error` if one cannot be parsed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1330},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":208895,"byte_end":208907,"line_start":294,"line_end":294,"column_start":11,"column_end":23},"name":"FromSegments","qualname":"::request::param::FromSegments","value":"FromSegments<'a>: Sized","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1334}],"decl_id":null,"docs":" Trait to convert _many_ dynamic path segment strings to a concrete value.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1332},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":208994,"byte_end":208999,"line_start":296,"line_end":296,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::param::FromSegments::Error","value":"type Error: Debug;","parent":{"krate":0,"index":1330},"children":[],"decl_id":null,"docs":" The associated error to be returned when parsing fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":209149,"byte_end":209162,"line_start":300,"line_end":300,"column_start":8,"column_end":21},"name":"from_segments","qualname":"::request::param::FromSegments::from_segments","value":"fn (segments: Segments<'a>) -> Result<Self, Self::Error>","parent":{"krate":0,"index":1330},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from many dynamic path parameter strings or\n returns an `Error` if one cannot be parsed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":219280,"byte_end":219289,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"FormItems","qualname":"::request::form::form_items::FormItems","value":"FormItems {  }","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":483}],"decl_id":null,"docs":" Iterator over the key/value pairs of a given HTTP form string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":220323,"byte_end":220332,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"completed","qualname":"<FormItems<'f>>::completed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the form string was parsed to completion. Returns\n `false` otherwise. All valid form strings will parse to completion,\n while invalid form strings will not.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":220302,"byte_end":220311,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":221402,"byte_end":221409,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"exhaust","qualname":"<FormItems<'f>>::exhaust","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Parses all remaining key/value pairs and returns `true` if parsing ran\n to completion. All valid form strings will parse to completion, while\n invalid form strings will not.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":221381,"byte_end":221390,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":221552,"byte_end":221565,"line_start":154,"line_end":154,"column_start":12,"column_end":25},"name":"mark_complete","qualname":"<FormItems<'f>>::mark_complete","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":221512,"byte_end":221521,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":222390,"byte_end":222399,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"inner_str","qualname":"<FormItems<'f>>::inner_str","value":"fn (&self) -> &'f RawStr","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the original string being parsed by this iterator. The string\n returned by this method does not change, regardless of the status of the\n iterator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":222369,"byte_end":222378,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1398},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,46,114,115],"byte_start":229214,"byte_end":229222,"line_start":99,"line_end":99,"column_start":11,"column_end":19},"name":"FromForm","qualname":"::request::form::from_form::FromForm","value":"FromForm<'f>: Sized","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1402}],"decl_id":null,"docs":" Trait to create an instance of some type from an HTTP form.\n [Form](struct.Form.html) requires its generic type to implement this trait.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1400},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,46,114,115],"byte_start":229309,"byte_end":229314,"line_start":101,"line_end":101,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::form::from_form::FromForm::Error","value":"type Error;","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":" The associated error to be returned when parsing fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,46,114,115],"byte_start":229812,"byte_end":229821,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"from_form","qualname":"::request::form::from_form::FromForm::from_form","value":"fn (it: &mut FormItems<'f>, strict: bool) -> Result<Self, Self::Error>","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from the iterator of form items `it`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1442},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":235422,"byte_end":235435,"line_start":137,"line_end":137,"column_start":11,"column_end":24},"name":"FromFormValue","qualname":"::request::form::from_form_value::FromFormValue","value":"FromFormValue<'v>: Sized","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448}],"decl_id":null,"docs":" Trait to create instance of some type from a form value; expected from field\n types in structs deriving `FromForm`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1444},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":235674,"byte_end":235679,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::form::from_form_value::FromFormValue::Error","value":"type Error;","parent":{"krate":0,"index":1442},"children":[],"decl_id":null,"docs":" The associated error which can be returned from parsing. It is a good\n idea to have the return type be or contain an `&'v str` so that the\n unparseable string can be examined after a bad parse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":235811,"byte_end":235826,"line_start":145,"line_end":145,"column_start":8,"column_end":23},"name":"from_form_value","qualname":"::request::form::from_form_value::FromFormValue::from_form_value","value":"fn (form_value: &'v RawStr) -> Result<Self, Self::Error>","parent":{"krate":0,"index":1442},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from an HTTP form field value or returns an\n `Error` if one cannot be parsed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":236169,"byte_end":236176,"line_start":152,"line_end":152,"column_start":8,"column_end":15},"name":"default","qualname":"::request::form::from_form_value::FromFormValue::default","value":"fn () -> Option<Self>","parent":{"krate":0,"index":1442},"children":[],"decl_id":null,"docs":" Returns a default value to be used when the form field does not exist.\n If this returns `None`, then the field is required. Otherwise, this\n should return `Some(default_value)`. The default implementation simply\n returns `None`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":236144,"byte_end":236161,"line_start":151,"line_end":151,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1512},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":243938,"byte_end":243942,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"Form","qualname":"::request::form::form::Form","value":"Form {  }","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529}],"decl_id":null,"docs":" A `FromData` type for parsing `FromForm` types strictly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":244762,"byte_end":244765,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"get","qualname":"<Form<'f, T>>::get","value":"fn (&'f self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrow the parsed type.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":244733,"byte_end":244750,"line_start":190,"line_end":190,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":245448,"byte_end":245463,"line_start":218,"line_end":218,"column_start":12,"column_end":27},"name":"raw_form_string","qualname":"<Form<'f, T>>::raw_form_string","value":"fn (&'f self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw form string that was used to parse the encapsulated\n object.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":245419,"byte_end":245436,"line_start":217,"line_end":217,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":248272,"byte_end":248282,"line_start":289,"line_end":289,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Form<'f, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the parsed value. For safety reasons, this\n method may only be called when the parsed value contains no\n non-`'static` references.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":248243,"byte_end":248260,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1562},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":251654,"byte_end":251665,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"LenientForm","qualname":"::request::form::lenient::LenientForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `FromData` type for parsing `FromForm` types leniently.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":252360,"byte_end":252363,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"get","qualname":"<LenientForm<'f, T>>::get","value":"fn (&'f self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrow the parsed type.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":252331,"byte_end":252348,"line_start":76,"line_end":76,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":253060,"byte_end":253075,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"raw_form_string","qualname":"<LenientForm<'f, T>>::raw_form_string","value":"fn (&'f self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw form string that was used to parse the encapsulated\n object.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":253031,"byte_end":253048,"line_start":103,"line_end":103,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":253900,"byte_end":253910,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<LenientForm<'f, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the parsed value. For safety reasons, this\n method may only be called when the parsed value contains no\n non-`'static` references.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":253871,"byte_end":253888,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1648},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":255564,"byte_end":255571,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::request::from_request::Outcome","value":"outcome::Outcome<S, (Status, E), ()>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Outcome` of a `FromRequest` conversion.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1660},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":262434,"byte_end":262445,"line_start":211,"line_end":211,"column_start":11,"column_end":22},"name":"FromRequest","qualname":"::request::from_request::FromRequest","value":"FromRequest<'a, 'r>: Sized","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1664}],"decl_id":null,"docs":" Trait implemented by request guards to derive a value from incoming\n requests.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1662},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":262537,"byte_end":262542,"line_start":213,"line_end":213,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::from_request::FromRequest::Error","value":"type Error: Debug;","parent":{"krate":0,"index":1660},"children":[],"decl_id":null,"docs":" The associated error to be returned if derivation fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":262924,"byte_end":262936,"line_start":221,"line_end":221,"column_start":8,"column_end":20},"name":"from_request","qualname":"::request::from_request::FromRequest::from_request","value":"fn (request: &'a Request<'r>) -> Outcome<Self, Self::Error>","parent":{"krate":0,"index":1660},"children":[],"decl_id":null,"docs":" Derives an instance of `Self` from the incoming request metadata.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5048},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":268151,"byte_end":268156,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"State","qualname":"::request::state::State","value":"","parent":null,"children":[],"decl_id":null,"docs":" Request guard to retrieve managed state.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":268140,"byte_end":268194,"line_start":85,"line_end":85,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":269152,"byte_end":269157,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"inner","qualname":"<State<'r, T>>::inner","value":"fn (&self) -> &'r T","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a borrow to the underyling value with a lifetime of `'r`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":269123,"byte_end":269140,"line_start":114,"line_end":114,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1780},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,109,111,100,46,114,115],"byte_start":177256,"byte_end":177268,"line_start":20,"line_end":20,"column_start":10,"column_end":22},"name":"FlashMessage","qualname":"::request::FlashMessage","value":"::response::Flash<()>","parent":null,"children":[],"decl_id":null,"docs":" Type alias to retrieve [Flash](/rocket/response/struct.Flash.html) messages\n from a request.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1782},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"response","qualname":"::response","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/response/mod.rs","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1848},{"krate":0,"index":1878},{"krate":0,"index":1938},{"krate":0,"index":2024},{"krate":0,"index":2064},{"krate":0,"index":2206},{"krate":0,"index":2226},{"krate":0,"index":2248},{"krate":0,"index":2302},{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2326}],"decl_id":null,"docs":" Types and traits to build and send responses.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1812},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":277568,"byte_end":277577,"line_start":175,"line_end":175,"column_start":11,"column_end":20},"name":"Responder","qualname":"::response::responder::Responder","value":"Responder<'r>","parent":null,"children":[{"krate":0,"index":1814}],"decl_id":null,"docs":" Trait implemented by types that generate responses for clients.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":278167,"byte_end":278177,"line_start":187,"line_end":187,"column_start":8,"column_end":18},"name":"respond_to","qualname":"::response::responder::Responder::respond_to","value":"fn (self, request: &Request) -> Result<Response<'r>, Status>","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Returns `Ok` if a `Response` could be generated successfully. Otherwise,\n returns an `Err` with a failing `Status`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5090},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":281624,"byte_end":281632,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Redirect","qualname":"::response::redirect::Redirect","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty redirect response to a given URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":282163,"byte_end":282165,"line_start":26,"line_end":26,"column_start":12,"column_end":14},"name":"to","qualname":"<Redirect>::to","value":"fn (uri: &str) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a temporary \"see other\" (303) redirect response. This is the\n typical response when redirecting a user to another page. This type of\n redirect indicates that the client should look elsewhere, but always via\n a `GET` request, for a given resource.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":282801,"byte_end":282810,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"temporary","qualname":"<Redirect>::temporary","value":"fn (uri: &str) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a \"temporary\" (307) redirect response. This response instructs\n the client to reissue the current request to a different URL,\n maintaining the contents of the request identically. This means that,\n for example, a `POST` request will be resent, contents included, to the\n requested URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":283579,"byte_end":283588,"line_start":63,"line_end":63,"column_start":12,"column_end":21},"name":"permanent","qualname":"<Redirect>::permanent","value":"fn (uri: &str) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a \"permanent\" (308) redirect response. This redirect must only\n be used for permanent redirects as it is cached by clients. This\n response instructs the client to reissue requests for the current URL to\n a different URL, now and in the future, maintaining the contents of the\n request identically. This means that, for example, a `POST` request will\n be resent, contents included, to the requested URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":284294,"byte_end":284299,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"found","qualname":"<Redirect>::found","value":"fn (uri: &str) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a temporary \"found\" (302) redirect response. This response\n instructs the client to reissue the current request to a different URL,\n ideally maintaining the contents of the request identically.\n Unfortunately, different clients may respond differently to this type of\n redirect, so `303` or `307` redirects, which disambiguate, are\n preferred.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":284903,"byte_end":284908,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"moved","qualname":"<Redirect>::moved","value":"fn (uri: &str) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a permanent \"moved\" (301) redirect response. This response\n should only be used for permanent redirects as it can be cached by\n browsers. Because different clients may respond differently to this type\n of redirect, a `308` redirect, which disambiguates, is preferred.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5096},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":288663,"byte_end":288668,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"Flash","qualname":"::response::flash::Flash","value":"Flash {  }","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2037}],"decl_id":null,"docs":" Sets a \"flash\" cookie that will be removed when it is accessed. The\n anologous request type is\n [FlashMessage](/rocket/request/type.FlashMessage.html).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":289237,"byte_end":289240,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<Flash<R>>::new","value":"fn <N, M> (res: R, name: N, msg: M) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Flash` message with the given `name`, `msg`, and\n underlying `responder`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":289895,"byte_end":289902,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"success","qualname":"<Flash<R>>::success","value":"fn <S> (responder: R, msg: S) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a \"success\" `Flash` message with the given `responder` and\n `msg`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":290439,"byte_end":290446,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"warning","qualname":"<Flash<R>>::warning","value":"fn <S> (responder: R, msg: S) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a \"warning\" `Flash` message with the given `responder` and\n `msg`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":290973,"byte_end":290978,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"error","qualname":"<Flash<R>>::error","value":"fn <S> (responder: R, msg: S) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an \"error\" `Flash` message with the given `responder` and\n `msg`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":292342,"byte_end":292346,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"name","qualname":"<Flash<()>>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the `name` of this message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":292461,"byte_end":292464,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"msg","qualname":"<Flash<()>>::msg","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the `msg` contents of this message.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5108},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":294206,"byte_end":294215,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"NamedFile","qualname":"::response::named_file::NamedFile","value":"","parent":null,"children":[],"decl_id":null,"docs":" A file with an associated name; responds with the Content-Type based on the\n file extension.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":294770,"byte_end":294774,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"open","qualname":"<NamedFile>::open","value":"fn <P> (path: P) -> io::Result<NamedFile>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":295011,"byte_end":295015,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"file","qualname":"<NamedFile>::file","value":"fn (&self) -> &File","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying `File`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":294982,"byte_end":294999,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":295126,"byte_end":295135,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"take_file","qualname":"<NamedFile>::take_file","value":"fn (self) -> File","parent":null,"children":[],"decl_id":null,"docs":" Take the underlying `File`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":295097,"byte_end":295114,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":295267,"byte_end":295275,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"file_mut","qualname":"<NamedFile>::file_mut","value":"fn (&mut self) -> &mut File","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a mutable borrow to the underlying `File`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":295238,"byte_end":295255,"line_start":50,"line_end":50,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":295745,"byte_end":295749,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"path","qualname":"<NamedFile>::path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the path of this file.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":295716,"byte_end":295733,"line_start":70,"line_end":70,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2046},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":298552,"byte_end":298558,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Stream","qualname":"::response::stream::Stream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Streams a response to a client from an arbitrary `Read`er type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":299108,"byte_end":299115,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"chunked","qualname":"<Stream<T>>::chunked","value":"fn (reader: T, chunk_size: u64) -> Stream<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new stream from the given `reader` and sets the chunk size for\n each streamed chunk to `chunk_size` bytes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2088},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":300548,"byte_end":300566,"line_start":8,"line_end":8,"column_start":11,"column_end":29},"name":"DEFAULT_CHUNK_SIZE","qualname":"::response::response::DEFAULT_CHUNK_SIZE","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The default size, in bytes, of a chunk for streamed responses.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2049},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":300727,"byte_end":300732,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Sized","qualname":"::response::response::Body::Sized","value":"Body::Sized(T, u64)","parent":{"krate":0,"index":5114},"children":[],"decl_id":null,"docs":" A fixed-size body.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2055},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":300817,"byte_end":300824,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"Chunked","qualname":"::response::response::Body::Chunked","value":"Body::Chunked(T, u64)","parent":{"krate":0,"index":5114},"children":[],"decl_id":null,"docs":" A streamed/chunked body, akin to `Transfer-Encoding: chunked`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5114},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":300686,"byte_end":300690,"line_start":12,"line_end":12,"column_start":10,"column_end":14},"name":"Body","qualname":"::response::response::Body","value":"Body::{Sized, Chunked}","parent":null,"children":[{"krate":0,"index":2049},{"krate":0,"index":2055}],"decl_id":null,"docs":" The body of a response: can be sized or streamed/chunked.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":300940,"byte_end":300946,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Body<T>>::as_mut","value":"fn (&mut self) -> Body<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Body` with a mutable borrow to `self`'s inner type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":301325,"byte_end":301328,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"map","qualname":"<Body<T>>::map","value":"fn <U, F> (self, f: F) -> Body<U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`. Passes the inner type as a parameter to `f` and\n constructs a new body with the size of `self` and the return value of\n the call to `f`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":301590,"byte_end":301600,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Body<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner body.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":301773,"byte_end":301781,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"is_sized","qualname":"<Body<T>>::is_sized","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Body::Sized`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":301981,"byte_end":301991,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"is_chunked","qualname":"<Body<T>>::is_chunked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Body::Chunked`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":302268,"byte_end":302278,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Body<T>>::into_bytes","value":"fn (self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Attepts to read `self` into a `Vec` and returns it. If reading fails,\n returns `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":302788,"byte_end":302799,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Body<T>>::into_string","value":"fn (self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Attepts to read `self` into a `String` and returns it. If reading or\n conversion fails, returns `None`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2112},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":306012,"byte_end":306027,"line_start":161,"line_end":161,"column_start":12,"column_end":27},"name":"ResponseBuilder","qualname":"::response::response::ResponseBuilder","value":"ResponseBuilder {  }","parent":null,"children":[{"krate":0,"index":771}],"decl_id":null,"docs":" Type for easily building `Response`s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":306452,"byte_end":306455,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<ResponseBuilder<'r>>::new","value":"fn (base: Response<'r>) -> ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ResponseBuilder` that will build on top of the `base`\n `Response`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":306423,"byte_end":306440,"line_start":177,"line_end":177,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":306946,"byte_end":306952,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"status","qualname":"<ResponseBuilder<'r>>::status","value":"fn (&mut self, status: Status) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the `Response` being built to `status`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":306917,"byte_end":306934,"line_start":197,"line_end":197,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":307486,"byte_end":307496,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"raw_status","qualname":"<ResponseBuilder<'r>>::raw_status","value":"fn (&mut self, code: u16, reason: &'static str) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the `Response` being built to a custom status\n constructed from the `code` and `reason` phrase.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":307457,"byte_end":307474,"line_start":216,"line_end":216,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":308564,"byte_end":308570,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"header","qualname":"<ResponseBuilder<'r>>::header","value":"fn <'h, H> (&mut self, header: H) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds `header` to the `Response`, replacing any header with the same name\n that already exists in the response. If multiple headers with\n the same name exist, they are all removed, and only the new header and\n value will remain.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":308535,"byte_end":308552,"line_start":246,"line_end":246,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":309686,"byte_end":309699,"line_start":278,"line_end":278,"column_start":12,"column_end":25},"name":"header_adjoin","qualname":"<ResponseBuilder<'r>>::header_adjoin","value":"fn <'h, H> (&mut self, header: H) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds `header` to the `Response` by adjoining the header with any\n existing headers with the same name that already exist in the\n `Response`. This allow for multiple headers with the same name and\n potentially different values to be present in the `Response`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":309657,"byte_end":309674,"line_start":277,"line_end":277,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":310525,"byte_end":310535,"line_start":303,"line_end":303,"column_start":12,"column_end":22},"name":"raw_header","qualname":"<ResponseBuilder<'r>>::raw_header","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds custom a header to the `Response` with the given name and value,\n replacing any header with the same name that already exists in the\n response. If multiple headers with the same name exist, they are all\n removed, and only the new header and value will remain.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":310496,"byte_end":310513,"line_start":302,"line_end":302,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":311472,"byte_end":311489,"line_start":330,"line_end":330,"column_start":12,"column_end":29},"name":"raw_header_adjoin","qualname":"<ResponseBuilder<'r>>::raw_header_adjoin","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds custom header to the `Response` with the given name and value,\n adjoining the header with any existing headers with the same name that\n already exist in the `Response`. This allow for multiple headers with\n the same name and potentially different values to be present in the\n `Response`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":311443,"byte_end":311460,"line_start":329,"line_end":329,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":312225,"byte_end":312235,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"sized_body","qualname":"<ResponseBuilder<'r>>::sized_body","value":"fn <B> (&mut self, body: B) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the `Response` to be the fixed-sized `body`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":312196,"byte_end":312213,"line_start":356,"line_end":356,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":312903,"byte_end":312916,"line_start":383,"line_end":383,"column_start":12,"column_end":25},"name":"streamed_body","qualname":"<ResponseBuilder<'r>>::streamed_body","value":"fn <B> (&mut self, body: B) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the `Response` to be the streamed `body`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":312874,"byte_end":312891,"line_start":382,"line_end":382,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":313624,"byte_end":313636,"line_start":410,"line_end":410,"column_start":12,"column_end":24},"name":"chunked_body","qualname":"<ResponseBuilder<'r>>::chunked_body","value":"fn <B> (&mut self, body: B, chunk_size: u64) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the `Response` to be the streamed `body` with a custom\n chunk size, in bytes.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":313595,"byte_end":313612,"line_start":409,"line_end":409,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":314340,"byte_end":314348,"line_start":433,"line_end":433,"column_start":12,"column_end":20},"name":"raw_body","qualname":"<ResponseBuilder<'r>>::raw_body","value":"fn <T> (&mut self, body: Body<T>) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`. This method should typically not\n be used, opting instead for one of `sized_body`, `streamed_body`, or\n `chunked_body`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":314311,"byte_end":314328,"line_start":432,"line_end":432,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":315870,"byte_end":315875,"line_start":478,"line_end":478,"column_start":12,"column_end":17},"name":"merge","qualname":"<ResponseBuilder<'r>>::merge","value":"fn (&mut self, other: Response<'r>) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Merges the `other` `Response` into `self` by setting any fields in\n `self` to the corresponding value in `other` if they are set in `other`.\n Fields in `self` are unchanged if they are not set in `other`. If a\n header is set in both `self` and `other`, the values in `other` are\n kept. Headers set only in `self` remain.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":315841,"byte_end":315858,"line_start":477,"line_end":477,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":317437,"byte_end":317441,"line_start":522,"line_end":522,"column_start":12,"column_end":16},"name":"join","qualname":"<ResponseBuilder<'r>>::join","value":"fn (&mut self, other: Response<'r>) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Joins the `other` `Response` into `self` by setting any fields in `self`\n to the corresponding value in `other` if they are set in `self`. Fields\n in `self` are unchanged if they are already set. If a header is set in\n both `self` and `other`, the values are adjoined, with the values in\n `self` coming first. Headers only in `self` or `other` are set in\n `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":317408,"byte_end":317425,"line_start":521,"line_end":521,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":317868,"byte_end":317876,"line_start":540,"line_end":540,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ResponseBuilder<'r>>::finalize","value":"fn (&mut self) -> Response<'r>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the built `Response`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":317839,"byte_end":317856,"line_start":539,"line_end":539,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":318325,"byte_end":318327,"line_start":558,"line_end":558,"column_start":12,"column_end":14},"name":"ok","qualname":"<ResponseBuilder<'r>>::ok","value":"fn <T> (&mut self) -> Result<Response<'r>, T>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the built `Response` wrapped in `Ok`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":318296,"byte_end":318313,"line_start":557,"line_end":557,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5134},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":318483,"byte_end":318491,"line_start":565,"line_end":565,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075}],"decl_id":null,"docs":" A response, as returned by `Responder`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":319235,"byte_end":319238,"line_start":590,"line_end":590,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<'r>>::new","value":"fn () -> Response<'r>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `Response` without a status, body, or headers.\n Because all HTTP responses must have a status, if a default `Response`\n is written to the client without a status, the status defaults to `200\n Ok`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":319206,"byte_end":319223,"line_start":589,"line_end":589,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":319665,"byte_end":319670,"line_start":609,"line_end":609,"column_start":12,"column_end":17},"name":"build","qualname":"<Response<'r>>::build","value":"fn () -> ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ResponseBuilder` with a base of `Response::new()`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":319636,"byte_end":319653,"line_start":608,"line_end":608,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":320070,"byte_end":320080,"line_start":625,"line_end":625,"column_start":12,"column_end":22},"name":"build_from","qualname":"<Response<'r>>::build_from","value":"fn (other: Response<'r>) -> ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ResponseBuilder` with a base of `other`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":320041,"byte_end":320058,"line_start":624,"line_end":624,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":320582,"byte_end":320588,"line_start":644,"line_end":644,"column_start":12,"column_end":18},"name":"status","qualname":"<Response<'r>>::status","value":"fn (&self) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Returns the status of `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":320553,"byte_end":320570,"line_start":643,"line_end":643,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":321021,"byte_end":321031,"line_start":661,"line_end":661,"column_start":12,"column_end":22},"name":"set_status","qualname":"<Response<'r>>::set_status","value":"fn (&mut self, status: Status) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of `self` to `status`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":320992,"byte_end":321009,"line_start":660,"line_end":660,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":321559,"byte_end":321571,"line_start":679,"line_end":679,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Response<'r>>::content_type","value":"fn (&self) -> Option<ContentType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Content-Type header of `self`. If the header is not present\n or is malformed, returns `None`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":321530,"byte_end":321547,"line_start":678,"line_end":678,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":322246,"byte_end":322260,"line_start":698,"line_end":698,"column_start":12,"column_end":26},"name":"set_raw_status","qualname":"<Response<'r>>::set_raw_status","value":"fn (&mut self, code: u16, reason: &'static str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of `self` to a custom `status` with status code `code`\n and reason phrase `reason`. This method should be used sparingly; prefer\n to use [set_status](#method.set_status) instead.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":322217,"byte_end":322234,"line_start":697,"line_end":697,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":323070,"byte_end":323077,"line_start":721,"line_end":721,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response<'r>>::headers","value":"fn (&self) -> &HeaderMap<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`HeaderMap`](/rocket/http/struct.HeaderMap.html) of all of\n the headers in `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":323041,"byte_end":323058,"line_start":720,"line_end":720,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":324123,"byte_end":324133,"line_start":748,"line_end":748,"column_start":12,"column_end":22},"name":"set_header","qualname":"<Response<'r>>::set_header","value":"fn <'h, H> (&mut self, header: H) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the header `header` in `self`. Any existing headers with the name\n `header.name` will be lost, and only `header` will remain. The type of\n `header` can be any type that implements `Into<Header>`. This includes\n `Header` itself, [`ContentType`](/rocket/http/struct.ContentType.html)\n and [`hyper::header` types](/rocket/http/hyper/header/index.html).","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":324094,"byte_end":324111,"line_start":747,"line_end":747,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":325096,"byte_end":325110,"line_start":774,"line_end":774,"column_start":12,"column_end":26},"name":"set_raw_header","qualname":"<Response<'r>>::set_raw_header","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the custom header with name `name` and value `value` in `self`. Any\n existing headers with the same `name` will be lost, and the new custom\n header will remain. This method should be used sparingly; prefer to use\n [set_header](#method.set_header) instead.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":325067,"byte_end":325084,"line_start":773,"line_end":773,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":326306,"byte_end":326319,"line_start":803,"line_end":803,"column_start":12,"column_end":25},"name":"adjoin_header","qualname":"<Response<'r>>::adjoin_header","value":"fn <'h, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the header `header` to `self`. If `self` contains headers with the\n name `header.name`, another header with the same name and value\n `header.value` is added. The type of `header` can be any type that\n implements `Into<Header>`. This includes `Header` itself,\n [`ContentType`](/rocket/http/struct.ContentType.html) and\n [`hyper::header` types](/rocket/http/hyper/header/index.html).","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":326277,"byte_end":326294,"line_start":802,"line_end":802,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":327464,"byte_end":327481,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"adjoin_raw_header","qualname":"<Response<'r>>::adjoin_raw_header","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a custom header with name `name` and value `value` to `self`. If\n `self` already contains headers with the name `name`, another header\n with the same `name` and `value` is added. The type of `header` can be\n any type that implements `Into<Header>`. This includes `Header` itself,\n [`ContentType`](/rocket/http/struct.ContentType.html) and\n [`hyper::header` types](/rocket/http/hyper/header/index.html).","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":327435,"byte_end":327452,"line_start":829,"line_end":829,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":328208,"byte_end":328221,"line_start":854,"line_end":854,"column_start":12,"column_end":25},"name":"remove_header","qualname":"<Response<'r>>::remove_header","value":"fn (&mut self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all headers with the name `name`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":328179,"byte_end":328196,"line_start":853,"line_end":853,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":328821,"byte_end":328825,"line_start":874,"line_end":874,"column_start":12,"column_end":16},"name":"body","qualname":"<Response<'r>>::body","value":"fn (&mut self) -> Option<Body<&mut io::Read>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable borrow of the body of `self`, if there is one. The\n body is borrowed mutably to allow for reading.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":328792,"byte_end":328809,"line_start":873,"line_end":873,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":329943,"byte_end":329954,"line_start":904,"line_end":904,"column_start":12,"column_end":23},"name":"body_string","qualname":"<Response<'r>>::body_string","value":"fn (&mut self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self's` body and reads it into a string. If `self` doesn't\n have a body, reading fails, or string conversion (for non-UTF-8 bodies)\n fails, returns `None`. Note that `self`'s `body` is consumed after a\n call to this method.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":329914,"byte_end":329931,"line_start":903,"line_end":903,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":330692,"byte_end":330702,"line_start":926,"line_end":926,"column_start":12,"column_end":22},"name":"body_bytes","qualname":"<Response<'r>>::body_bytes","value":"fn (&mut self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self's` body and reads it into a `Vec` of `u8` bytes. If\n `self` doesn't have a body or reading fails returns `None`. Note that\n `self`'s `body` is consumed after a call to this method.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":330663,"byte_end":330680,"line_start":925,"line_end":925,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":331490,"byte_end":331499,"line_start":951,"line_end":951,"column_start":12,"column_end":21},"name":"take_body","qualname":"<Response<'r>>::take_body","value":"fn (&mut self) -> Option<Body<Box<io::Read + 'r>>>","parent":null,"children":[],"decl_id":null,"docs":" Moves the body of `self` out and returns it, if there is one, leaving no\n body in its place.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":331461,"byte_end":331478,"line_start":950,"line_end":950,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":332764,"byte_end":332778,"line_start":988,"line_end":988,"column_start":12,"column_end":26},"name":"set_sized_body","qualname":"<Response<'r>>::set_sized_body","value":"fn <B> (&mut self, mut body: B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be the fixed-sized `body`. The size of the\n body is obtained by `seek`ing to the end and then `seek`ing back to the\n start.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":332743,"byte_end":332752,"line_start":987,"line_end":987,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":333793,"byte_end":333810,"line_start":1014,"line_end":1014,"column_start":12,"column_end":29},"name":"set_streamed_body","qualname":"<Response<'r>>::set_streamed_body","value":"fn <B> (&mut self, body: B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`, which will be streamed. The chunk\n size of the stream is\n [DEFAULT_CHUNK_SIZE](/rocket/response/constant.DEFAULT_CHUNK_SIZE.html).\n Use [set_chunked_body](#method.set_chunked_body) for custom chunk sizes.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":333764,"byte_end":333781,"line_start":1013,"line_end":1013,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":334374,"byte_end":334390,"line_start":1032,"line_end":1032,"column_start":12,"column_end":28},"name":"set_chunked_body","qualname":"<Response<'r>>::set_chunked_body","value":"fn <B> (&mut self, body: B, chunk_size: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`, which will be streamed with chunk\n size `chunk_size`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":334345,"byte_end":334362,"line_start":1031,"line_end":1031,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":335143,"byte_end":335155,"line_start":1055,"line_end":1055,"column_start":12,"column_end":24},"name":"set_raw_body","qualname":"<Response<'r>>::set_raw_body","value":"fn <T> (&mut self, body: Body<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`. This method should typically not\n be used, opting instead for one of `set_sized_body`,\n `set_streamed_body`, or `set_chunked_body`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":335114,"byte_end":335131,"line_start":1054,"line_end":1054,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":336615,"byte_end":336620,"line_start":1097,"line_end":1097,"column_start":12,"column_end":17},"name":"merge","qualname":"<Response<'r>>::merge","value":"fn (&mut self, other: Response<'r>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces this response's status and body with that of `other`, if they\n exist in `other`. Any headers that exist in `other` replace the ones in\n `self`. Any in `self` that aren't in `other` remain in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":338168,"byte_end":338172,"line_start":1146,"line_end":1146,"column_start":12,"column_end":16},"name":"join","qualname":"<Response<'r>>::join","value":"fn (&mut self, other: Response<'r>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self`'s status and body to that of `other` if they are not already\n set in `self`. Any headers present in both `other` and `self` are\n adjoined.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5140},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,97,105,108,117,114,101,46,114,115],"byte_start":339335,"byte_end":339342,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"name":"Failure","qualname":"::response::failure::Failure","value":"","parent":null,"children":[],"decl_id":null,"docs":" A failing response; simply forwards to the catcher for the given\n `Status`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2226},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,99,111,110,116,101,110,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"content","qualname":"::response::content","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/response/content.rs","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2236},{"krate":0,"index":5146},{"krate":0,"index":5158},{"krate":0,"index":5154},{"krate":0,"index":5148},{"krate":0,"index":2242},{"krate":0,"index":2246},{"krate":0,"index":5190},{"krate":0,"index":5202},{"krate":0,"index":5198},{"krate":0,"index":5192},{"krate":0,"index":5162},{"krate":0,"index":5206},{"krate":0,"index":5218},{"krate":0,"index":5214},{"krate":0,"index":5208},{"krate":0,"index":5166},{"krate":0,"index":5222},{"krate":0,"index":5234},{"krate":0,"index":5230},{"krate":0,"index":5224},{"krate":0,"index":5170},{"krate":0,"index":5238},{"krate":0,"index":5250},{"krate":0,"index":5246},{"krate":0,"index":5240},{"krate":0,"index":5174},{"krate":0,"index":5254},{"krate":0,"index":5266},{"krate":0,"index":5262},{"krate":0,"index":5256},{"krate":0,"index":5178},{"krate":0,"index":5270},{"krate":0,"index":5282},{"krate":0,"index":5278},{"krate":0,"index":5272},{"krate":0,"index":5182},{"krate":0,"index":5286},{"krate":0,"index":5298},{"krate":0,"index":5294},{"krate":0,"index":5288},{"krate":0,"index":5186}],"decl_id":null,"docs":" Contains types that set the Content-Type of a response.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5146},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,99,111,110,116,101,110,116,46,114,115],"byte_start":340977,"byte_end":340984,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Content","qualname":"::response::content::Content","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the Content-Type of a `Responder` to a chosen value.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2248},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"status","qualname":"::response::status","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/response/status.rs","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2266},{"krate":0,"index":2268},{"krate":0,"index":5302},{"krate":0,"index":5314},{"krate":0,"index":5310},{"krate":0,"index":5304},{"krate":0,"index":2270},{"krate":0,"index":2274},{"krate":0,"index":5318},{"krate":0,"index":5330},{"krate":0,"index":5326},{"krate":0,"index":5320},{"krate":0,"index":2278},{"krate":0,"index":5334},{"krate":0,"index":5344},{"krate":0,"index":5340},{"krate":0,"index":5336},{"krate":0,"index":2282},{"krate":0,"index":5348},{"krate":0,"index":5360},{"krate":0,"index":5358},{"krate":0,"index":5354},{"krate":0,"index":5350},{"krate":0,"index":2286},{"krate":0,"index":5364},{"krate":0,"index":5376},{"krate":0,"index":5372},{"krate":0,"index":5366},{"krate":0,"index":2290},{"krate":0,"index":5380},{"krate":0,"index":5392},{"krate":0,"index":5388},{"krate":0,"index":5382},{"krate":0,"index":2294},{"krate":0,"index":5396},{"krate":0,"index":5408},{"krate":0,"index":5404},{"krate":0,"index":5398},{"krate":0,"index":2298}],"decl_id":null,"docs":" Contains types that set the status code and corresponding headers of a\n response.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5302},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":343871,"byte_end":343878,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Created","qualname":"::response::status::Created","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 201 (Created).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5318},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":346213,"byte_end":346221,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"Accepted","qualname":"::response::status::Accepted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 202 (Accepted).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5334},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":347006,"byte_end":347015,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"NoContent","qualname":"::response::status::NoContent","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 204 (No Content).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5348},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":347558,"byte_end":347563,"line_start":148,"line_end":148,"column_start":12,"column_end":17},"name":"Reset","qualname":"::response::status::Reset","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 205 (Reset Content).","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":347547,"byte_end":347564,"line_start":148,"line_end":148,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":5364},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":348537,"byte_end":348547,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"BadRequest","qualname":"::response::status::BadRequest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 400 (Bad Request).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5380},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":349397,"byte_end":349405,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"NotFound","qualname":"::response::status::NotFound","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 404 (Not Found).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5396},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":350054,"byte_end":350060,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"Custom","qualname":"::response::status::Custom","value":"","parent":null,"children":[],"decl_id":null,"docs":" Creates a response with the given status code and underyling responder.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2326},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":271311,"byte_end":271317,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Result","qualname":"::response::Result","value":"::std::result::Result<self::Response<'r>, ::http::Status>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Result` of a `Responder::respond` call.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2328},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"outcome","qualname":"::outcome","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/outcome.rs","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2340},{"krate":0,"index":5412},{"krate":0,"index":5446},{"krate":0,"index":5444},{"krate":0,"index":5438},{"krate":0,"index":5426},{"krate":0,"index":5422},{"krate":0,"index":5418},{"krate":0,"index":5414},{"krate":0,"index":2342},{"krate":0,"index":2352},{"krate":0,"index":2362},{"krate":0,"index":2396},{"krate":0,"index":2408},{"krate":0,"index":2412}],"decl_id":null,"docs":" Success, failure, and forward handling.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2279},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":354704,"byte_end":354711,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Success","qualname":"::outcome::Outcome::Success","value":"Outcome::Success(S)","parent":{"krate":0,"index":5412},"children":[],"decl_id":null,"docs":" Contains the success value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2283},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":354762,"byte_end":354769,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Failure","qualname":"::outcome::Outcome::Failure","value":"Outcome::Failure(E)","parent":{"krate":0,"index":5412},"children":[],"decl_id":null,"docs":" Contains the failure error value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2287},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":354820,"byte_end":354827,"line_start":102,"line_end":102,"column_start":5,"column_end":12},"name":"Forward","qualname":"::outcome::Outcome::Forward","value":"Outcome::Forward(F)","parent":{"krate":0,"index":5412},"children":[],"decl_id":null,"docs":" Contains the value to forward on.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5412},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":354645,"byte_end":354652,"line_start":96,"line_end":96,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::outcome::Outcome","value":"Outcome::{Success, Failure, Forward}","parent":null,"children":[{"krate":0,"index":2279},{"krate":0,"index":2283},{"krate":0,"index":2287}],"decl_id":null,"docs":" An enum representing success (`Success`), failure (`Failure`), or\n forwarding (`Forward`).","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":354563,"byte_end":354574,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":354636,"byte_end":354833,"line_start":96,"line_end":103,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":354636,"byte_end":354833,"line_start":96,"line_end":103,"column_start":1,"column_end":2}}]},{"kind":"Trait","id":{"krate":0,"index":2342},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":354903,"byte_end":354914,"line_start":106,"line_end":106,"column_start":11,"column_end":22},"name":"IntoOutcome","qualname":"::outcome::IntoOutcome","value":"IntoOutcome<S, E, F>","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2346},{"krate":0,"index":2348},{"krate":0,"index":2350}],"decl_id":null,"docs":" Conversion trait from some type into an Outcome type.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2344},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":354997,"byte_end":355004,"line_start":108,"line_end":108,"column_start":10,"column_end":17},"name":"Failure","qualname":"::outcome::IntoOutcome::Failure","value":"type Failure: Sized;","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" The type to use when returning an `Outcome::Failure`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2346},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":355085,"byte_end":355092,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"Forward","qualname":"::outcome::IntoOutcome::Forward","value":"type Forward: Sized;","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" The type to use when returning an `Outcome::Forward`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":355315,"byte_end":355327,"line_start":116,"line_end":116,"column_start":8,"column_end":20},"name":"into_outcome","qualname":"::outcome::IntoOutcome::into_outcome","value":"fn (self, failure: Self::Failure) -> Outcome<S, E, F>","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Converts `self` into an `Outcome`. If `self` represents a success, an\n `Outcome::Success` is returned. Otherwise, an `Outcome::Failure` is\n returned with `failure` as the inner value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":355593,"byte_end":355603,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"or_forward","qualname":"::outcome::IntoOutcome::or_forward","value":"fn (self, forward: Self::Forward) -> Outcome<S, E, F>","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Converts `self` into an `Outcome`. If `self` represents a success, an\n `Outcome::Success` is returned. Otherwise, an `Outcome::Forward` is\n returned with `forward` as the inner value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":356580,"byte_end":356586,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Outcome<S, E, F>>::unwrap","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the Outcome, yielding the contents of a Success.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":356559,"byte_end":356568,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":357187,"byte_end":357193,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"expect","qualname":"<Outcome<S, E, F>>::expect","value":"fn (self, message: &str) -> S","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the Outcome, yielding the contents of a Success.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":357166,"byte_end":357175,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":357922,"byte_end":357932,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"is_success","qualname":"<Outcome<S, E, F>>::is_success","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Outcome` is a `Success`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":357901,"byte_end":357910,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":358608,"byte_end":358618,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"is_failure","qualname":"<Outcome<S, E, F>>::is_failure","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Outcome` is a `Failure`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":358587,"byte_end":358596,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":359294,"byte_end":359304,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"is_forward","qualname":"<Outcome<S, E, F>>::is_forward","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Outcome` is a `Forward`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":359273,"byte_end":359282,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":360121,"byte_end":360130,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"succeeded","qualname":"<Outcome<S, E, F>>::succeeded","value":"fn (self) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Option<S>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":360100,"byte_end":360109,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":360964,"byte_end":360970,"line_start":312,"line_end":312,"column_start":12,"column_end":18},"name":"failed","qualname":"<Outcome<S, E, F>>::failed","value":"fn (self) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Option<E>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":360943,"byte_end":360952,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":361796,"byte_end":361805,"line_start":338,"line_end":338,"column_start":12,"column_end":21},"name":"forwarded","qualname":"<Outcome<S, E, F>>::forwarded","value":"fn (self) -> Option<F>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Option<F>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":361775,"byte_end":361784,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":362720,"byte_end":362730,"line_start":365,"line_end":365,"column_start":12,"column_end":22},"name":"success_or","qualname":"<Outcome<S, E, F>>::success_or","value":"fn <T> (self, value: T) -> Result<S, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Result<S, T>` for a given `T`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":362699,"byte_end":362708,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":363749,"byte_end":363764,"line_start":393,"line_end":393,"column_start":12,"column_end":27},"name":"success_or_else","qualname":"<Outcome<S, E, F>>::success_or_else","value":"fn <T, V> (self, f: V) -> Result<S, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Result<S, T>` for a given `T`\n produced from a supplied function or closure.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":363728,"byte_end":363737,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":364384,"byte_end":364390,"line_start":413,"line_end":413,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Outcome<S, E, F>>::as_ref","value":"fn (&self) -> Outcome<&S, &E, &F>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Outcome<&S, &E, &F>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":364363,"byte_end":364372,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":365108,"byte_end":365111,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"map","qualname":"<Outcome<S, E, F>>::map","value":"fn <T, M> (self, f: M) -> Outcome<T, E, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<T, E, F>` by applying the\n function `f` to the value of type `S` in `self` if `self` is an\n `Outcome::Success`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":365087,"byte_end":365096,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":365844,"byte_end":365855,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"map_failure","qualname":"<Outcome<S, E, F>>::map_failure","value":"fn <T, M> (self, f: M) -> Outcome<S, T, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, T, F>` by applying the\n function `f` to the value of type `E` in `self` if `self` is an\n `Outcome::Failure`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":365823,"byte_end":365832,"line_start":456,"line_end":456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":366586,"byte_end":366597,"line_start":479,"line_end":479,"column_start":12,"column_end":23},"name":"map_forward","qualname":"<Outcome<S, E, F>>::map_forward","value":"fn <T, M> (self, f: M) -> Outcome<S, E, T>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, E, T>` by applying the\n function `f` to the value of type `F` in `self` if `self` is an\n `Outcome::Forward`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":366565,"byte_end":366574,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":367234,"byte_end":367240,"line_start":501,"line_end":501,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Outcome<S, E, F>>::as_mut","value":"fn (&mut self) -> Outcome<&mut S, &mut E, &mut F>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Outcome<&mut S, &mut E, &mut F>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":367213,"byte_end":367222,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":2416},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/config/mod.rs","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2454},{"krate":0,"index":2494},{"krate":0,"index":2614},{"krate":0,"index":2668},{"krate":0,"index":2702},{"krate":0,"index":2760},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":5566},{"krate":0,"index":5574},{"krate":0,"index":5568},{"krate":0,"index":2826},{"krate":0,"index":2850}],"decl_id":null,"docs":" Application configuration and configuration parameter retrieval.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2341},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":409606,"byte_end":409612,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"BadCWD","qualname":"::config::error::ConfigError::BadCWD","value":"ConfigError::BadCWD","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" The current working directory could not be determined.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2343},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":409664,"byte_end":409672,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::config::error::ConfigError::NotFound","value":"ConfigError::NotFound","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" The configuration file was not found.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2345},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":409747,"byte_end":409754,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"IoError","qualname":"::config::error::ConfigError::IoError","value":"ConfigError::IoError","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" There was an I/O error while reading the configuration file.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2347},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":409890,"byte_end":409892,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"Io","qualname":"::config::error::ConfigError::Io","value":"ConfigError::Io(io::Error, &'static str)","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" There was an I/O error while setting a configuration parameter.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2353},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":410038,"byte_end":410049,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"name":"BadFilePath","qualname":"::config::error::ConfigError::BadFilePath","value":"ConfigError::BadFilePath(PathBuf, &'static str)","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" The path at which the configuration file was found was invalid.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2359},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":410186,"byte_end":410192,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"BadEnv","qualname":"::config::error::ConfigError::BadEnv","value":"ConfigError::BadEnv(String)","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" An environment specified in `ROCKET_ENV` is invalid.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2363},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":410335,"byte_end":410343,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"BadEntry","qualname":"::config::error::ConfigError::BadEntry","value":"ConfigError::BadEntry(String, PathBuf)","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" An environment specified as a table `[environment]` is invalid.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2369},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":410512,"byte_end":410519,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"BadType","qualname":"::config::error::ConfigError::BadType","value":"ConfigError::BadType(String, &'static str, &'static str, PathBuf)","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" A config key was specified with a value of the wrong type.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2379},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":410698,"byte_end":410708,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::config::error::ConfigError::ParseError","value":"ConfigError::ParseError(String, PathBuf, String, Option<(usize, usize)>)","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" There was a TOML parsing error.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2389},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":410892,"byte_end":410901,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"BadEnvVal","qualname":"::config::error::ConfigError::BadEnvVal","value":"ConfigError::BadEnvVal(String, String, String)","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" There was a TOML parsing error in a config environment variable.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2397},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":411001,"byte_end":411011,"line_start":50,"line_end":50,"column_start":5,"column_end":15},"name":"UnknownKey","qualname":"::config::error::ConfigError::UnknownKey","value":"ConfigError::UnknownKey(String)","parent":{"krate":0,"index":5450},"children":[],"decl_id":null,"docs":" The entry (key) is unknown.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5450},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":409525,"byte_end":409536,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"ConfigError","qualname":"::config::error::ConfigError","value":"ConfigError::{BadCWD, NotFound, IoError, Io, BadFilePath, BadEnv, BadEntry, BadType, ParseError, BadEnvVal, UnknownKey}","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2345},{"krate":0,"index":2347},{"krate":0,"index":2353},{"krate":0,"index":2359},{"krate":0,"index":2363},{"krate":0,"index":2369},{"krate":0,"index":2379},{"krate":0,"index":2389},{"krate":0,"index":2397}],"decl_id":null,"docs":" The type of a configuration error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":411118,"byte_end":411130,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"pretty_print","qualname":"<ConfigError>::pretty_print","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints this configuration error with Rocket formatting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":413895,"byte_end":413907,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"is_not_found","qualname":"<ConfigError>::is_not_found","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is of `NotFound` variant.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":413866,"byte_end":413883,"line_start":117,"line_end":117,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2401},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":417656,"byte_end":417667,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"Development","qualname":"::config::environment::Environment::Development","value":"Environment::Development","parent":{"krate":0,"index":5500},"children":[],"decl_id":null,"docs":" The development environment.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2403},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":417706,"byte_end":417713,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"name":"Staging","qualname":"::config::environment::Environment::Staging","value":"Environment::Staging","parent":{"krate":0,"index":5500},"children":[],"decl_id":null,"docs":" The staging environment.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2405},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":417755,"byte_end":417765,"line_start":19,"line_end":19,"column_start":5,"column_end":15},"name":"Production","qualname":"::config::environment::Environment::Production","value":"Environment::Production","parent":{"krate":0,"index":5500},"children":[],"decl_id":null,"docs":" The production environment.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5500},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":417601,"byte_end":417612,"line_start":13,"line_end":13,"column_start":10,"column_end":21},"name":"Environment","qualname":"::config::environment::Environment","value":"Environment::{Development, Staging, Production}","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":2403},{"krate":0,"index":2405}],"decl_id":null,"docs":" An enum corresponding to the valid configuration environments.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":417592,"byte_end":417768,"line_start":13,"line_end":20,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":417592,"byte_end":417768,"line_start":13,"line_end":20,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":418093,"byte_end":418099,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"is_dev","qualname":"<Environment>::is_dev","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `Environment::Development`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":418072,"byte_end":418081,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":418510,"byte_end":418518,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_stage","qualname":"<Environment>::is_stage","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `Environment::Staging`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":418489,"byte_end":418498,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":418926,"byte_end":418933,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"is_prod","qualname":"<Environment>::is_prod","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `Environment::Production`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":418905,"byte_end":418914,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":419369,"byte_end":419375,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"active","qualname":"<Environment>::active","value":"fn () -> Result<Environment, ConfigError>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"active\" environment as determined by the `ROCKET_ENV`\n environment variable. If `ROCKET_ENV` is not set, returns `Development`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5524},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":422964,"byte_end":422970,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::config::Config","value":"Config { environment, address, port, workers, log_level, limits, extras, config_path }","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2415},{"krate":0,"index":2417},{"krate":0,"index":2419},{"krate":0,"index":2421},{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2427}],"decl_id":null,"docs":" Structure for Rocket application configuration.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2409},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":423045,"byte_end":423056,"line_start":43,"line_end":43,"column_start":9,"column_end":20},"name":"environment","qualname":"::config::config::Config::environment","value":"config::environment::Environment","parent":{"krate":0,"index":5524},"children":[],"decl_id":null,"docs":" The environment that this configuration corresponds to.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2411},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":423112,"byte_end":423119,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"name":"address","qualname":"::config::config::Config::address","value":"std::string::String","parent":{"krate":0,"index":5524},"children":[],"decl_id":null,"docs":" The address to serve on.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2413},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":423167,"byte_end":423171,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"port","qualname":"::config::config::Config::port","value":"u16","parent":{"krate":0,"index":5524},"children":[],"decl_id":null,"docs":" The port to serve on.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2415},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":423237,"byte_end":423244,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"workers","qualname":"::config::config::Config::workers","value":"u16","parent":{"krate":0,"index":5524},"children":[],"decl_id":null,"docs":" The number of workers to run concurrently.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2417},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":423296,"byte_end":423305,"line_start":51,"line_end":51,"column_start":9,"column_end":18},"name":"log_level","qualname":"::config::config::Config::log_level","value":"logger::LoggingLevel","parent":{"krate":0,"index":5524},"children":[],"decl_id":null,"docs":" How much information to log.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2423},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":423493,"byte_end":423499,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"name":"limits","qualname":"::config::config::Config::limits","value":"config::custom_values::Limits","parent":{"krate":0,"index":5524},"children":[],"decl_id":null,"docs":" Streaming read size limits.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2425},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":423584,"byte_end":423590,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"name":"extras","qualname":"::config::config::Config::extras","value":"std::collections::HashMap<std::string::String, toml::Value>","parent":{"krate":0,"index":5524},"children":[],"decl_id":null,"docs":" Extra parameters that aren't part of Rocket's core config.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2427},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":423691,"byte_end":423702,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"name":"config_path","qualname":"::config::config::Config::config_path","value":"std::path::PathBuf","parent":{"krate":0,"index":5524},"children":[],"decl_id":null,"docs":" The path to the configuration file this config belongs to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":424764,"byte_end":424769,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"build","qualname":"<Config>::build","value":"fn (env: Environment) -> ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for `Config` structure where the default parameters\n are set to those of `env`. The root configuration directory is set to\n the current working directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":425399,"byte_end":425402,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (env: Environment) -> Result<Config>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configuration using the default parameters for the\n environment `env`. The root configuration directory is set to the\n current working directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":426159,"byte_end":426170,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"development","qualname":"<Config>::development","value":"fn () -> Result<Config>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for `Config` structure where the default parameters\n are set to those of the development environment. The root configuration\n directory is set to the current working directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":426783,"byte_end":426790,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"staging","qualname":"<Config>::staging","value":"fn () -> Result<Config>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configuration using the default parameters from the\n staging environment. The root configuration directory is set to the\n current working directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":427405,"byte_end":427415,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"production","qualname":"<Config>::production","value":"fn () -> Result<Config>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configuration using the default parameters from the\n production environment. The root configuration directory is set to the\n current working directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":432428,"byte_end":432436,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"set_root","qualname":"<Config>::set_root","value":"fn <P> (&mut self, path: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the root directory of this configuration to `root`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":433208,"byte_end":433219,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"set_address","qualname":"<Config>::set_address","value":"fn <A> (&mut self, address: A) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the address of `self` to `address`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":433941,"byte_end":433949,"line_start":365,"line_end":365,"column_start":12,"column_end":20},"name":"set_port","qualname":"<Config>::set_port","value":"fn (&mut self, port: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `port` of `self` to `port`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":433920,"byte_end":433929,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":434435,"byte_end":434446,"line_start":384,"line_end":384,"column_start":12,"column_end":23},"name":"set_workers","qualname":"<Config>::set_workers","value":"fn (&mut self, workers: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of `workers` in `self` to `workers`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":434414,"byte_end":434423,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":435261,"byte_end":435275,"line_start":410,"line_end":410,"column_start":12,"column_end":26},"name":"set_secret_key","qualname":"<Config>::set_secret_key","value":"fn <K> (&mut self, key: K) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `secret_key` in `self` to `key` which must be a 256-bit base64\n encoded string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":436247,"byte_end":436260,"line_start":443,"line_end":443,"column_start":12,"column_end":25},"name":"set_log_level","qualname":"<Config>::set_log_level","value":"fn (&mut self, log_level: LoggingLevel) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the logging level for `self` to `log_level`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":436226,"byte_end":436235,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":436789,"byte_end":436799,"line_start":462,"line_end":462,"column_start":12,"column_end":22},"name":"set_limits","qualname":"<Config>::set_limits","value":"fn (&mut self, limits: Limits) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the receive limits in `self` to `limits`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":436768,"byte_end":436777,"line_start":461,"line_end":461,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":438711,"byte_end":438718,"line_start":517,"line_end":517,"column_start":12,"column_end":19},"name":"set_tls","qualname":"<Config>::set_tls","value":"fn (&mut self, _: &str, _: &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"tls\"))","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":438671,"byte_end":438699,"line_start":516,"line_end":516,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":439810,"byte_end":439820,"line_start":556,"line_end":556,"column_start":12,"column_end":22},"name":"set_extras","qualname":"<Config>::set_extras","value":"fn (&mut self, extras: HashMap<String, Value>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the extras for `self` to be the key/value pairs in `extras`.\n encoded string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":439789,"byte_end":439798,"line_start":555,"line_end":555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":440737,"byte_end":440743,"line_start":585,"line_end":585,"column_start":12,"column_end":18},"name":"extras","qualname":"<Config>::extras","value":"fn <'a> (&'a self) -> impl Iterator<Item = (&'a str, &'a Value)>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names and values of all of the extras in\n `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":440716,"byte_end":440725,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":441624,"byte_end":441631,"line_start":614,"line_end":614,"column_start":12,"column_end":19},"name":"get_str","qualname":"<Config>::get_str","value":"fn <'a> (&'a self, name: &str) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":442446,"byte_end":442453,"line_start":638,"line_end":638,"column_start":12,"column_end":19},"name":"get_int","qualname":"<Config>::get_int","value":"fn (&self, name: &str) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as an integer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":443262,"byte_end":443270,"line_start":662,"line_end":662,"column_start":12,"column_end":20},"name":"get_bool","qualname":"<Config>::get_bool","value":"fn (&self, name: &str) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a boolean.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":444067,"byte_end":444076,"line_start":686,"line_end":686,"column_start":12,"column_end":21},"name":"get_float","qualname":"<Config>::get_float","value":"fn (&self, name: &str) -> Result<f64>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a float.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":444892,"byte_end":444901,"line_start":710,"line_end":710,"column_start":12,"column_end":21},"name":"get_slice","qualname":"<Config>::get_slice","value":"fn (&self, name: &str) -> Result<&Array>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a slice of an array.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":445840,"byte_end":445849,"line_start":738,"line_end":738,"column_start":12,"column_end":21},"name":"get_table","qualname":"<Config>::get_table","value":"fn (&self, name: &str) -> Result<&Table>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a table.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":446794,"byte_end":446806,"line_start":764,"line_end":764,"column_start":12,"column_end":24},"name":"get_datetime","qualname":"<Config>::get_datetime","value":"fn (&self, name: &str) -> Result<&Datetime>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a datetime value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":447554,"byte_end":447558,"line_start":784,"line_end":784,"column_start":12,"column_end":16},"name":"root","qualname":"<Config>::root","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path at which the configuration file for `self` is stored.\n For instance, if the configuration file is at `/tmp/Rocket.toml`, the\n path `/tmp` is returned.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5530},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":448869,"byte_end":448882,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"ConfigBuilder","qualname":"::config::builder::ConfigBuilder","value":"ConfigBuilder { environment, address, port, workers, log_level, secret_key, tls, limits, extras, root }","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2447},{"krate":0,"index":2449},{"krate":0,"index":2451},{"krate":0,"index":2453},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2461}],"decl_id":null,"docs":" Structure following the builder pattern for building `Config` structures.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2443},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":448957,"byte_end":448968,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"name":"environment","qualname":"::config::builder::ConfigBuilder::environment","value":"config::environment::Environment","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" The environment that this configuration corresponds to.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2445},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449024,"byte_end":449031,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"address","qualname":"::config::builder::ConfigBuilder::address","value":"std::string::String","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" The address to serve on.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2447},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449079,"byte_end":449083,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"port","qualname":"::config::builder::ConfigBuilder::port","value":"u16","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" The port to serve on.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2449},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449148,"byte_end":449155,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"workers","qualname":"::config::builder::ConfigBuilder::workers","value":"u16","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" The number of workers to run in parallel.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2451},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449207,"byte_end":449216,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"name":"log_level","qualname":"::config::builder::ConfigBuilder::log_level","value":"logger::LoggingLevel","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" How much information to log.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2453},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449264,"byte_end":449274,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"secret_key","qualname":"::config::builder::ConfigBuilder::secret_key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" The secret key.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2455},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449381,"byte_end":449384,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"tls","qualname":"::config::builder::ConfigBuilder::tls","value":"std::option::Option<(std::string::String, std::string::String)>","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" TLS configuration (path to certificates file, path to private key file).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2457},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449441,"byte_end":449447,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"limits","qualname":"::config::builder::ConfigBuilder::limits","value":"config::custom_values::Limits","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" Size limits.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2459},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449531,"byte_end":449537,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"extras","qualname":"::config::builder::ConfigBuilder::extras","value":"std::collections::HashMap<std::string::String, toml::Value>","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" Any extra parameters that aren't part of Rocket's config.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2461},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449614,"byte_end":449618,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"root","qualname":"::config::builder::ConfigBuilder::root","value":"std::path::PathBuf","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":" The root directory of this config.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":450417,"byte_end":450420,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<ConfigBuilder>::new","value":"fn (environment: Environment) -> ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ConfigBuilder` instance using the default parameters from\n the given `environment`. The root configuration directory is set to the\n current working directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":451400,"byte_end":451407,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"address","qualname":"<ConfigBuilder>::address","value":"fn <A> (mut self, address: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `address` in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":451871,"byte_end":451875,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"port","qualname":"<ConfigBuilder>::port","value":"fn (mut self, port: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `port` in the configuration being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":451850,"byte_end":451859,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":452309,"byte_end":452316,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"workers","qualname":"<ConfigBuilder>::workers","value":"fn (mut self, workers: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets `workers` in the configuration being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":452288,"byte_end":452297,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":452823,"byte_end":452832,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"log_level","qualname":"<ConfigBuilder>::log_level","value":"fn (mut self, log_level: LoggingLevel) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `log_level` in the configuration being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":452802,"byte_end":452811,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":453323,"byte_end":453333,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"secret_key","qualname":"<ConfigBuilder>::secret_key","value":"fn <K> (mut self, key: K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `secret_key` in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":453791,"byte_end":453797,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"limits","qualname":"<ConfigBuilder>::limits","value":"fn (mut self, limits: Limits) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `limits` in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":454495,"byte_end":454498,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"tls","qualname":"<ConfigBuilder>::tls","value":"fn <C, K> (mut self, certs_path: C, key_path: K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the TLS configuration in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":455101,"byte_end":455112,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"environment","qualname":"<ConfigBuilder>::environment","value":"fn (mut self, env: Environment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `environment` in the configuration being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":455080,"byte_end":455089,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":455606,"byte_end":455610,"line_start":240,"line_end":240,"column_start":12,"column_end":16},"name":"root","qualname":"<ConfigBuilder>::root","value":"fn <P> (mut self, path: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `root` in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":456458,"byte_end":456463,"line_start":264,"line_end":264,"column_start":12,"column_end":17},"name":"extra","qualname":"<ConfigBuilder>::extra","value":"fn <V> (mut self, name: &str, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra configuration parameter with `name` and `value` to the\n configuration being built. The value can be any type that implements\n `Into<Value>` including `&str`, `String`, `Vec<V: Into<Value>>`,\n `HashMap<S: Into<String>, V: Into<Value>>`, and most integer and float\n types.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":457402,"byte_end":457410,"line_start":296,"line_end":296,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ConfigBuilder>::finalize","value":"fn (self) -> Result<Config>","parent":null,"children":[],"decl_id":null,"docs":" Return the `Config` structure that was being built by this builder.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":458617,"byte_end":458623,"line_start":336,"line_end":336,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ConfigBuilder>::unwrap","value":"fn (self) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Return the `Config` structure that was being built by this builder.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":458588,"byte_end":458605,"line_start":335,"line_end":335,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":459400,"byte_end":459406,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"expect","qualname":"<ConfigBuilder>::expect","value":"fn (self, msg: &str) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Config` structure that was being built by this builder.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":459371,"byte_end":459388,"line_start":359,"line_end":359,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5556},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":466817,"byte_end":466823,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"Limits","qualname":"::config::custom_values::Limits","value":"Limits {  }","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2485}],"decl_id":null,"docs":" Mapping from data type to size limits.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":467431,"byte_end":467434,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<Limits>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Limits` structure with the default limits set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":467410,"byte_end":467419,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":468089,"byte_end":468094,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limits>::limit","value":"fn <S> (mut self, name: S, limit: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds or replaces a limit in `self`, consuming `self` and returning a new\n `Limits` structure with the added or replaced limit.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":469157,"byte_end":469160,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"get","qualname":"<Limits>::get","value":"fn (&self, name: &str) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the set limit, if any, for the data type with name `name`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2824},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":376951,"byte_end":376957,"line_start":229,"line_end":229,"column_start":10,"column_end":16},"name":"Result","qualname":"::config::Result","value":"::std::result::Result<T, ConfigError>","parent":null,"children":[],"decl_id":null,"docs":" Wraps `std::result` with the error type of\n [ConfigError](enum.ConfigError.html).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5566},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":377057,"byte_end":377069,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"RocketConfig","qualname":"::config::RocketConfig","value":"RocketConfig { active_env }","parent":null,"children":[{"krate":0,"index":2487},{"krate":0,"index":2489}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2487},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":377080,"byte_end":377090,"line_start":234,"line_end":234,"column_start":9,"column_end":19},"name":"active_env","qualname":"::config::RocketConfig::active_env","value":"config::environment::Environment","parent":{"krate":0,"index":5566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":377470,"byte_end":377473,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<RocketConfig>::new","value":"fn (config: Config) -> RocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Create a new configuration using the passed in `config` for all\n environments. The Rocket.toml file is ignored, as are environment\n variables.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":378280,"byte_end":378284,"line_start":267,"line_end":267,"column_start":12,"column_end":16},"name":"read","qualname":"<RocketConfig>::read","value":"fn () -> Result<RocketConfig>","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration from the `Rocket.toml` file. The file is search\n for recursively up the tree, starting from the CWD.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":379010,"byte_end":379024,"line_start":284,"line_end":284,"column_start":12,"column_end":26},"name":"active_default","qualname":"<RocketConfig>::active_default","value":"fn <P> (filename: P) -> Result<RocketConfig>","parent":null,"children":[],"decl_id":null,"docs":" Return the default configuration for all environments and marks the\n active environment (via the CONFIG_ENV variable) as active.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":381174,"byte_end":381177,"line_start":344,"line_end":344,"column_start":12,"column_end":15},"name":"get","qualname":"<RocketConfig>::get","value":"fn (&self, env: Environment) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the `Config` for the environment `env`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":381456,"byte_end":381462,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"active","qualname":"<RocketConfig>::active","value":"fn (&self) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the `Config` for the active environment.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":381435,"byte_end":381444,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":2854},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"data","qualname":"::data","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/data/mod.rs","parent":null,"children":[{"krate":0,"index":2856},{"krate":0,"index":2930},{"krate":0,"index":2968},{"krate":0,"index":3008},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3082}],"decl_id":null,"docs":" Types and traits for handling incoming body data.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2904},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":474521,"byte_end":474525,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"Data","qualname":"::data::data::Data","value":"Data {  }","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057}],"decl_id":null,"docs":" Type representing the data in the body of an incoming request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":475102,"byte_end":475106,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"open","qualname":"<Data>::open","value":"fn (mut self) -> DataStream","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw data stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":478331,"byte_end":478335,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"peek","qualname":"<Data>::peek","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `peek` buffer.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":478302,"byte_end":478319,"line_start":157,"line_end":157,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":478960,"byte_end":478973,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"peek_complete","qualname":"<Data>::peek_complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `peek` buffer contains all of the data in the body\n of the request. Returns `false` if it does not or if it is not known if\n it does.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":478931,"byte_end":478948,"line_start":181,"line_end":181,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":479551,"byte_end":479560,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"stream_to","qualname":"<Data>::stream_to","value":"fn <W> (self, writer: &mut W) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" A helper method to write the body of the request to any `Write` type.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":479522,"byte_end":479539,"line_start":202,"line_end":202,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":480219,"byte_end":480233,"line_start":225,"line_end":225,"column_start":12,"column_end":26},"name":"stream_to_file","qualname":"<Data>::stream_to_file","value":"fn <P> (self, path: P) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" A helper method to write the body of the request to a file at the path\n determined by `path`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":480190,"byte_end":480207,"line_start":224,"line_end":224,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2952},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,95,115,116,114,101,97,109,46,114,115],"byte_start":482730,"byte_end":482740,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"DataStream","qualname":"::data::data_stream::DataStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw data stream of a request body.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3030},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":487154,"byte_end":487161,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::data::from_data::Outcome","value":"outcome::Outcome<S, (Status, E), Data>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Outcome` of a `FromData` conversion.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3042},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":494384,"byte_end":494392,"line_start":214,"line_end":214,"column_start":11,"column_end":19},"name":"FromData","qualname":"::data::from_data::FromData","value":"FromData: Sized","parent":null,"children":[{"krate":0,"index":3044},{"krate":0,"index":3046}],"decl_id":null,"docs":" Trait implemented by data guards to derive a value from request body data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3044},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":494477,"byte_end":494482,"line_start":216,"line_end":216,"column_start":10,"column_end":15},"name":"Error","qualname":"::data::from_data::FromData::Error","value":"type Error;","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" The associated error to be returned when the guard fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":494825,"byte_end":494834,"line_start":224,"line_end":224,"column_start":8,"column_end":17},"name":"from_data","qualname":"::data::from_data::FromData::from_data","value":"fn (request: &Request, data: Data) -> Outcome<Self, Self::Error>","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" Validates, parses, and converts an instance of `Self` from the incoming\n request body data.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3088},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handler","qualname":"::handler","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/handler.rs","parent":null,"children":[{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3094},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3112},{"krate":0,"index":3114}],"decl_id":null,"docs":" The types of request and error handlers and their return values.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3108},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":496721,"byte_end":496728,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::handler::Outcome","value":"outcome::Outcome<Response<'r>, Status, Data>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Outcome` of a `Handler`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3110},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":496826,"byte_end":496833,"line_start":14,"line_end":14,"column_start":10,"column_end":17},"name":"Handler","qualname":"::handler::Handler","value":"for<'r>fn(&'r Request, Data) -> Outcome<'r>","parent":null,"children":[],"decl_id":null,"docs":" The type of a request handler.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3112},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":496926,"byte_end":496938,"line_start":17,"line_end":17,"column_start":10,"column_end":22},"name":"ErrorHandler","qualname":"::handler::ErrorHandler","value":"for<'r>fn(Error, &'r Request) -> response::Result<'r>","parent":null,"children":[],"decl_id":null,"docs":" The type of an error handler.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":497601,"byte_end":497605,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"from","qualname":"<Outcome<'r>>::from","value":"fn <T> (req: &Request, responder: T) -> Outcome<'r>","parent":null,"children":[],"decl_id":null,"docs":" Return the `Outcome` of response to `req` from `responder`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":497580,"byte_end":497589,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":498472,"byte_end":498479,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"failure","qualname":"<Outcome<'r>>::failure","value":"fn (code: Status) -> Outcome<'static>","parent":null,"children":[],"decl_id":null,"docs":" Return an `Outcome` of `Failure` with the status code `code`. This is\n equivalent to `Outcome::Failure(code)`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":498443,"byte_end":498460,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":499129,"byte_end":499136,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"forward","qualname":"<Outcome<'r>>::forward","value":"fn (data: Data) -> Outcome<'static>","parent":null,"children":[],"decl_id":null,"docs":" Return an `Outcome` of `Forward` with the data `data`. This is\n equivalent to `Outcome::Forward(data)`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":499100,"byte_end":499117,"line_start":82,"line_end":82,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":3122},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fairing","qualname":"::fairing","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/fairing/mod.rs","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3134},{"krate":0,"index":3176},{"krate":0,"index":3222},{"krate":0,"index":3248},{"krate":0,"index":3250},{"krate":0,"index":3252},{"krate":0,"index":3258},{"krate":0,"index":3270}],"decl_id":null,"docs":" Fairings: callbacks at attach, launch, request, and response time.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1097},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":520764,"byte_end":520770,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Attach","qualname":"::fairing::ad_hoc::AdHoc::Attach","value":"AdHoc::Attach(Box<Fn(Rocket) -> Result<Rocket, Rocket> + Send + Sync + 'static>)","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":" An ad-hoc **attach** fairing. Called when the fairing is attached.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1101},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":520936,"byte_end":520942,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Launch","qualname":"::fairing::ad_hoc::AdHoc::Launch","value":"AdHoc::Launch(Box<Fn(&Rocket) + Send + Sync + 'static>)","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":" An ad-hoc **launch** fairing. Called just before Rocket launches.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1105},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":521083,"byte_end":521090,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"Request","qualname":"::fairing::ad_hoc::AdHoc::Request","value":"AdHoc::Request(Box<Fn(&mut Request, &Data) + Send + Sync + 'static>)","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":" An ad-hoc **request** fairing. Called when a request is received.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1109},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":521273,"byte_end":521281,"line_start":48,"line_end":48,"column_start":5,"column_end":13},"name":"Response","qualname":"::fairing::ad_hoc::AdHoc::Response","value":"AdHoc::Response(Box<Fn(&Request, &mut Response) + Send + Sync + 'static>)","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":" An ad-hoc **response** fairing. Called when a response is ready to be\n sent to a client.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3196},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":520658,"byte_end":520663,"line_start":35,"line_end":35,"column_start":10,"column_end":15},"name":"AdHoc","qualname":"::fairing::ad_hoc::AdHoc","value":"AdHoc::{Attach, Launch, Request, Response}","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1101},{"krate":0,"index":1105},{"krate":0,"index":1109}],"decl_id":null,"docs":" A ad-hoc fairing that can be created from a function or closure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":521699,"byte_end":521708,"line_start":63,"line_end":63,"column_start":12,"column_end":21},"name":"on_attach","qualname":"<AdHoc>::on_attach","value":"fn <F> (f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` attach fairing. The function `f` will be called by\n Rocket when this fairing is attached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":522269,"byte_end":522278,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"on_launch","qualname":"<AdHoc>::on_launch","value":"fn <F> (f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` launch fairing. The function `f` will be called by\n Rocket just prior to launching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":522843,"byte_end":522853,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"on_request","qualname":"<AdHoc>::on_request","value":"fn <F> (f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` request fairing. The function `f` will be called\n by Rocket when a new request is received.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":523451,"byte_end":523462,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"on_response","qualname":"<AdHoc>::on_response","value":"fn <F> (f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` response fairing. The function `f` will be called\n by Rocket when a response is ready to be sent.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3226},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":525830,"byte_end":525834,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Info","qualname":"::fairing::info_kind::Info","value":"Info { name, kind }","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1123}],"decl_id":null,"docs":" Information about a [`Fairing`](/rocket/fairing/trait.Fairing.html).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1121},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":525878,"byte_end":525882,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"name":"name","qualname":"::fairing::info_kind::Info::name","value":"&'static str","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" The name of the fairing.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1123},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":525978,"byte_end":525982,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"kind","qualname":"::fairing::info_kind::Info::kind","value":"fairing::info_kind::Kind","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" A set representing the callbacks the fairing wishes to receive.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5618},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":526610,"byte_end":526614,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Kind","qualname":"::fairing::info_kind::Kind","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bitset representing the kinds of callbacks a\n [`Fairing`](/rocket/fairing/trait.Fairing.html) wishes to receive.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":526599,"byte_end":526622,"line_start":48,"line_end":48,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":3230},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":526752,"byte_end":526758,"line_start":53,"line_end":53,"column_start":15,"column_end":21},"name":"Attach","qualname":"::fairing::info_kind::Kind::Attach","value":"Kind","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for an 'attach' callback.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3232},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":526863,"byte_end":526869,"line_start":55,"line_end":55,"column_start":15,"column_end":21},"name":"Launch","qualname":"::fairing::info_kind::Kind::Launch","value":"Kind","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for a 'launch' callback.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3234},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":526975,"byte_end":526982,"line_start":57,"line_end":57,"column_start":15,"column_end":22},"name":"Request","qualname":"::fairing::info_kind::Kind::Request","value":"Kind","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for a 'request' callback.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3236},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":527089,"byte_end":527097,"line_start":59,"line_end":59,"column_start":15,"column_end":23},"name":"Response","qualname":"::fairing::info_kind::Kind::Response","value":"Kind","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for a 'response' callback.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":527847,"byte_end":527849,"line_start":80,"line_end":80,"column_start":12,"column_end":14},"name":"is","qualname":"<Kind>::is","value":"fn (self, other: Kind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a superset of `other`. In other words,\n returns `true` if all of the kinds in `other` are also in `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":527826,"byte_end":527835,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":528504,"byte_end":528514,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"is_exactly","qualname":"<Kind>::is_exactly","value":"fn (self, other: Kind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is exactly `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":528483,"byte_end":528492,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3258},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":511143,"byte_end":511150,"line_start":256,"line_end":256,"column_start":11,"column_end":18},"name":"Fairing","qualname":"::fairing::Fairing","value":"Fairing: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3262},{"krate":0,"index":3264},{"krate":0,"index":3266},{"krate":0,"index":3268}],"decl_id":null,"docs":" Trait implemented by fairings: Rocket's structured middleware.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":512545,"byte_end":512549,"line_start":291,"line_end":291,"column_start":8,"column_end":12},"name":"info","qualname":"::fairing::Fairing::info","value":"fn (&self) -> Info","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Returns an [`Info`](/rocket/fairing/struct.Info.html) structure\n containing the `name` and [`Kind`](/rocket/fairing/struct.Kind.html) of\n this fairing. The `name` can be any arbitrary string. `Kind` must be an\n `or`d set of `Kind` variants.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":513089,"byte_end":513098,"line_start":304,"line_end":304,"column_start":8,"column_end":17},"name":"on_attach","qualname":"::fairing::Fairing::on_attach","value":"fn (&self, rocket: Rocket) -> Result<Rocket, Rocket>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" The attach callback. Returns `Ok` if launch should proceed and `Err` if\n launch should be aborted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":513608,"byte_end":513617,"line_start":317,"line_end":317,"column_start":8,"column_end":17},"name":"on_launch","qualname":"::fairing::Fairing::on_launch","value":"fn (&self, rocket: &Rocket) -> ()","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" The launch callback.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":513574,"byte_end":513600,"line_start":316,"line_end":316,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":514122,"byte_end":514132,"line_start":330,"line_end":330,"column_start":8,"column_end":18},"name":"on_request","qualname":"::fairing::Fairing::on_request","value":"fn (&self, request: &mut Request, data: &Data) -> ()","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" The request callback.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":514088,"byte_end":514114,"line_start":329,"line_end":329,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":514678,"byte_end":514689,"line_start":343,"line_end":343,"column_start":8,"column_end":19},"name":"on_response","qualname":"::fairing::Fairing::on_response","value":"fn (&self, request: &Request, response: &mut Response) -> ()","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" The response callback.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":514644,"byte_end":514670,"line_start":342,"line_end":342,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":3282},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/zhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.3.11/src/error.rs","parent":null,"children":[{"krate":0,"index":3284},{"krate":0,"index":3290},{"krate":0,"index":3296},{"krate":0,"index":5630},{"krate":0,"index":5650},{"krate":0,"index":5648},{"krate":0,"index":5644},{"krate":0,"index":5640},{"krate":0,"index":5636},{"krate":0,"index":5632},{"krate":0,"index":5654},{"krate":0,"index":5656},{"krate":0,"index":3298},{"krate":0,"index":3300},{"krate":0,"index":3310},{"krate":0,"index":3314},{"krate":0,"index":3318},{"krate":0,"index":3322},{"krate":0,"index":3326},{"krate":0,"index":3330},{"krate":0,"index":3334},{"krate":0,"index":3338}],"decl_id":null,"docs":" Types representing various errors that can occur in a Rocket application.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2511},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529055,"byte_end":529064,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"BadMethod","qualname":"::error::Error::BadMethod","value":"Error::BadMethod","parent":{"krate":0,"index":5630},"children":[],"decl_id":null,"docs":" The request method was bad.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2513},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529109,"byte_end":529117,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"name":"BadParse","qualname":"::error::Error::BadParse","value":"Error::BadParse","parent":{"krate":0,"index":5630},"children":[],"decl_id":null,"docs":" The value could not be parsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2515},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529156,"byte_end":529163,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"NoRoute","qualname":"::error::Error::NoRoute","value":"Error::NoRoute","parent":{"krate":0,"index":5630},"children":[],"decl_id":null,"docs":" There was no such route.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2517},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529243,"byte_end":529251,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Internal","qualname":"::error::Error::Internal","value":"Error::Internal","parent":{"krate":0,"index":5630},"children":[],"decl_id":null,"docs":" The error was internal.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2519},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529305,"byte_end":529310,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"NoKey","qualname":"::error::Error::NoKey","value":"Error::NoKey","parent":{"krate":0,"index":5630},"children":[],"decl_id":null,"docs":" The requested key/index does not exist.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5630},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529007,"byte_end":529012,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{BadMethod, BadParse, NoRoute, Internal, NoKey}","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2513},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2519}],"decl_id":null,"docs":" [unstable] Error type for Rocket. Likely to change.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":528998,"byte_end":529313,"line_start":10,"line_end":21,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":528998,"byte_end":529313,"line_start":10,"line_end":21,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2523},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529825,"byte_end":529827,"line_start":33,"line_end":33,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::LaunchErrorKind::Io","value":"LaunchErrorKind::Io(io::Error)","parent":{"krate":0,"index":5654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2527},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529844,"byte_end":529853,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"Collision","qualname":"::error::LaunchErrorKind::Collision","value":"LaunchErrorKind::Collision","parent":{"krate":0,"index":5654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2529},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529859,"byte_end":529872,"line_start":35,"line_end":35,"column_start":5,"column_end":18},"name":"FailedFairing","qualname":"::error::LaunchErrorKind::FailedFairing","value":"LaunchErrorKind::FailedFairing","parent":{"krate":0,"index":5654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2531},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529878,"byte_end":529885,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::LaunchErrorKind::Unknown","value":"LaunchErrorKind::Unknown(Box<::std::error::Error + Send + Sync>)","parent":{"krate":0,"index":5654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5654},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":529803,"byte_end":529818,"line_start":32,"line_end":32,"column_start":10,"column_end":25},"name":"LaunchErrorKind","qualname":"::error::LaunchErrorKind","value":"LaunchErrorKind::{Io, Collision, FailedFairing, Unknown}","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2527},{"krate":0,"index":2529},{"krate":0,"index":2531}],"decl_id":null,"docs":" The kind of launch error that occured.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3298},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":531775,"byte_end":531786,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"LaunchError","qualname":"::error::LaunchError","value":"LaunchError {  }","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1137}],"decl_id":null,"docs":" An error that occurs during launch.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":532548,"byte_end":532552,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"kind","qualname":"<LaunchError>::kind","value":"fn (&self) -> &LaunchErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `kind` of the launch error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":532527,"byte_end":532536,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":571285,"byte_end":571290,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Route","qualname":"::router::route::Route","value":"Route { method, handler, base, uri, rank, format }","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167}],"decl_id":null,"docs":" A route: a method, its handler, path, rank, and format/media type.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1157},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":571348,"byte_end":571354,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"method","qualname":"::router::route::Route::method","value":"http::method::Method","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" The method this route matches against.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1159},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":571439,"byte_end":571446,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"handler","qualname":"::router::route::Route::handler","value":"for<'r, 's> fn(&'r request::request::Request<'s>, data::data::Data) -> outcome::Outcome<response::response::Response<'r>, http::status::Status, data::data::Data>","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" The function that should be called when the route matches.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1161},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":571511,"byte_end":571515,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"base","qualname":"::router::route::Route::base","value":"http::uri::URI<'static>","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" The base mount point of this `Route`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1163},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":571662,"byte_end":571665,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"uri","qualname":"::router::route::Route::uri","value":"http::uri::URI<'static>","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" The uri (in Rocket format) that should be matched against. This uri\n already includes the base mount point.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1165},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":571757,"byte_end":571761,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"rank","qualname":"::router::route::Route::rank","value":"isize","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" The rank of this route. Lower ranks have higher priorities.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1167},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":571837,"byte_end":571843,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"format","qualname":"::router::route::Route::format","value":"std::option::Option<http::media_type::MediaType>","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" The media type this route matches against, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":573652,"byte_end":573655,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Route>::new","value":"fn <S> (m: Method, path: S, handler: Handler) -> Route","parent":null,"children":[],"decl_id":null,"docs":" Creates a new route with the given method, path, and handler with a base\n of `/`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3408},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":574575,"byte_end":574581,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"ranked","qualname":"<Route>::ranked","value":"fn <S> (rank: isize, m: Method, uri: S, handler: Handler) -> Route","parent":null,"children":[],"decl_id":null,"docs":" Creates a new route with the given rank, method, path, and handler with\n a base of `/`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":575489,"byte_end":575493,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"base","qualname":"<Route>::base","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the path of the base mount point of this route as an `&str`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":575468,"byte_end":575477,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":576269,"byte_end":576277,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"set_base","qualname":"<Route>::set_base","value":"fn <S> (&mut self, path: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the base mount point of the route. Does not update the rank or any\n other parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":577025,"byte_end":577032,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"set_uri","qualname":"<Route>::set_uri","value":"fn <S> (&mut self, uri: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the path of the route. Does not update the rank or any other\n parameters.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3554},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":580130,"byte_end":580136,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Rocket","qualname":"::rocket::Rocket","value":"Rocket {  }","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207}],"decl_id":null,"docs":" The main `Rocket` type: used to mount routes and catchers and launch the\n application.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":593460,"byte_end":593466,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"ignite","qualname":"<Rocket>::ignite","value":"fn () -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rocket` application using the configuration information in\n `Rocket.toml`. If the file does not exist or if there is an I/O error\n reading the file, the defaults are used. See the\n [config](/rocket/config/index.html) documentation for more information\n on defaults.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":593439,"byte_end":593448,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3578},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":594498,"byte_end":594504,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"custom","qualname":"<Rocket>::custom","value":"fn (config: Config, log: bool) -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rocket` application using the supplied custom\n configuration information. The `Rocket.toml` file, if present, is\n ignored. Any environment variables setting config parameters are\n ignored. If `log` is `true`, logging is enabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":594477,"byte_end":594486,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":597961,"byte_end":597966,"line_start":474,"line_end":474,"column_start":12,"column_end":17},"name":"mount","qualname":"<Rocket>::mount","value":"fn (mut self, base: &str, routes: Vec<Route>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mounts all of the routes in the supplied vector at the given `base`\n path. Mounting a route with path `path` at path `base` makes the route\n available at `base/path`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":597940,"byte_end":597949,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":599452,"byte_end":599457,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"catch","qualname":"<Rocket>::catch","value":"fn (mut self, catchers: Vec<Catcher>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Registers all of the catchers in the supplied vector.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":599431,"byte_end":599440,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":601207,"byte_end":601213,"line_start":585,"line_end":585,"column_start":12,"column_end":18},"name":"manage","qualname":"<Rocket>::manage","value":"fn <T> (self, state: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add `state` to the state managed by this instance of Rocket.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":601186,"byte_end":601195,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":602046,"byte_end":602052,"line_start":614,"line_end":614,"column_start":12,"column_end":18},"name":"attach","qualname":"<Rocket>::attach","value":"fn <F> (mut self, fairing: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Attaches a fairing to this instance of Rocket.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":602025,"byte_end":602034,"line_start":613,"line_end":613,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":603546,"byte_end":603552,"line_start":655,"line_end":655,"column_start":12,"column_end":18},"name":"launch","qualname":"<Rocket>::launch","value":"fn (mut self) -> LaunchError","parent":null,"children":[],"decl_id":null,"docs":" Starts the application server and begins listening for and dispatching\n requests to mounted routes and catchers. Unless there is an error, this\n function does not return and blocks until program termination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":606115,"byte_end":606121,"line_start":731,"line_end":731,"column_start":12,"column_end":18},"name":"routes","qualname":"<Rocket>::routes","value":"fn <'a> (&'a self) -> impl Iterator<Item = &'a Route> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all of the routes mounted on this instance of\n Rocket.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":606086,"byte_end":606103,"line_start":730,"line_end":730,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":606833,"byte_end":606838,"line_start":751,"line_end":751,"column_start":12,"column_end":17},"name":"state","qualname":"<Rocket>::state","value":"fn <T> (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` of the managed state value for the type `T` if it is\n being managed by `self`. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":606804,"byte_end":606821,"line_start":750,"line_end":750,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":607561,"byte_end":607567,"line_start":777,"line_end":777,"column_start":12,"column_end":18},"name":"config","qualname":"<Rocket>::config","value":"fn (&self) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Returns the active configuration.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":607532,"byte_end":607549,"line_start":776,"line_end":776,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3614},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,100,101,103,101,110,46,114,115],"byte_start":607699,"byte_end":607714,"line_start":4,"line_end":4,"column_start":12,"column_end":27},"name":"StaticRouteInfo","qualname":"::codegen::StaticRouteInfo","value":"StaticRouteInfo { method, path, format, handler, rank }","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1249},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,100,101,103,101,110,46,114,115],"byte_start":607725,"byte_end":607731,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"name":"method","qualname":"::codegen::StaticRouteInfo::method","value":"http::method::Method","parent":{"krate":0,"index":3614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1251},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,100,101,103,101,110,46,114,115],"byte_start":607749,"byte_end":607753,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"name":"path","qualname":"::codegen::StaticRouteInfo::path","value":"&'static str","parent":{"krate":0,"index":3614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1253},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,100,101,103,101,110,46,114,115],"byte_start":607777,"byte_end":607783,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"name":"format","qualname":"::codegen::StaticRouteInfo::format","value":"std::option::Option<http::media_type::MediaType>","parent":{"krate":0,"index":3614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1255},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,100,101,103,101,110,46,114,115],"byte_start":607812,"byte_end":607819,"line_start":8,"line_end":8,"column_start":9,"column_end":16},"name":"handler","qualname":"::codegen::StaticRouteInfo::handler","value":"for<'r, 's> fn(&'r request::request::Request<'s>, data::data::Data) -> outcome::Outcome<response::response::Response<'r>, http::status::Status, data::data::Data>","parent":{"krate":0,"index":3614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1257},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,100,101,103,101,110,46,114,115],"byte_start":607838,"byte_end":607842,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"name":"rank","qualname":"::codegen::StaticRouteInfo::rank","value":"std::option::Option<isize>","parent":{"krate":0,"index":3614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3616},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,100,101,103,101,110,46,114,115],"byte_start":607873,"byte_end":607888,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"StaticCatchInfo","qualname":"::codegen::StaticCatchInfo","value":"StaticCatchInfo { code, handler }","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1261}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1259},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,100,101,103,101,110,46,114,115],"byte_start":607899,"byte_end":607903,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"code","qualname":"::codegen::StaticCatchInfo::code","value":"u16","parent":{"krate":0,"index":3616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1261},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,100,101,103,101,110,46,114,115],"byte_start":607918,"byte_end":607925,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"handler","qualname":"::codegen::StaticCatchInfo::handler","value":"for<'r, 's> fn(error::Error, &'r request::request::Request<'s>) -> std::result::Result<response::response::Response<'r>, http::status::Status>","parent":{"krate":0,"index":3616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3634},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":610052,"byte_end":610059,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"Catcher","qualname":"::catcher::Catcher","value":"Catcher { code }","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1267}],"decl_id":null,"docs":" An error catching route.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1263},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":610117,"byte_end":610121,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"name":"code","qualname":"::catcher::Catcher::code","value":"u16","parent":{"krate":0,"index":3634},"children":[],"decl_id":null,"docs":" The HTTP status code to match against.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":611131,"byte_end":611134,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<Catcher>::new","value":"fn (code: u16, handler: ErrorHandler) -> Catcher","parent":null,"children":[],"decl_id":null,"docs":" Creates a catcher for the given status code using the given error\n handler. This should only be used when routing manually.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":611102,"byte_end":611119,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3698},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":618371,"byte_end":618385,"line_start":24,"line_end":24,"column_start":11,"column_end":25},"name":"IntoCollection","qualname":"::ext::IntoCollection","value":"IntoCollection<T>","parent":null,"children":[{"krate":0,"index":3700},{"krate":0,"index":3702}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":618398,"byte_end":618413,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"into_collection","qualname":"::ext::IntoCollection::into_collection","value":"fn <A> (self) -> SmallVec<A>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":618461,"byte_end":618467,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"mapped","qualname":"::ext::IntoCollection::mapped","value":"fn <U, F, A> (self, f: F) -> SmallVec<A>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3752},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4628,"byte_end":4634,"line_start":151,"line_end":151,"column_start":8,"column_end":14},"name":"ignite","qualname":"::ignite","value":"fn () -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Alias to [Rocket::ignite()](/rocket/struct.Rocket.html#method.ignite).\n Creates a new instance of `Rocket`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3754},"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4823,"byte_end":4829,"line_start":157,"line_end":157,"column_start":8,"column_end":14},"name":"custom","qualname":"::custom","value":"fn (config: config::Config, log: bool) -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Alias to [Rocket::custom()](/rocket/struct.Rocket.html#method.custom).\n Creates a new instance of `Rocket` with a custom configuration.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5390,"byte_end":5402,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5685,"byte_end":5697,"line_start":33,"line_end":33,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":6084,"byte_end":6096,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":7321,"byte_end":7333,"line_start":86,"line_end":86,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":15752,"byte_end":15764,"line_start":77,"line_end":77,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":23545,"byte_end":23557,"line_start":326,"line_end":326,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":24239,"byte_end":24252,"line_start":346,"line_end":346,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":24407,"byte_end":24420,"line_start":355,"line_end":355,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":24560,"byte_end":24573,"line_start":362,"line_end":362,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":27280,"byte_end":27286,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":40049,"byte_end":40052,"line_start":29,"line_end":29,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":47786,"byte_end":47789,"line_start":289,"line_end":289,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48104,"byte_end":48107,"line_start":302,"line_end":302,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48329,"byte_end":48332,"line_start":311,"line_end":311,"column_start":17,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48368,"byte_end":48371,"line_start":313,"line_end":313,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48492,"byte_end":48495,"line_start":320,"line_end":320,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48629,"byte_end":48632,"line_start":327,"line_end":327,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":49826,"byte_end":49834,"line_start":372,"line_end":372,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":64814,"byte_end":64821,"line_start":119,"line_end":119,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":71348,"byte_end":71355,"line_start":323,"line_end":323,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":71629,"byte_end":71635,"line_start":332,"line_end":332,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72168,"byte_end":72174,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":73904,"byte_end":73910,"line_start":86,"line_end":86,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":74788,"byte_end":74794,"line_start":107,"line_end":107,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75611,"byte_end":75617,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":80507,"byte_end":80516,"line_start":180,"line_end":180,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":4206},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":4208},{"krate":0,"index":4210},{"krate":0,"index":4212},{"krate":0,"index":4214},{"krate":0,"index":4216},{"krate":0,"index":4218},{"krate":0,"index":4220},{"krate":0,"index":4222},{"krate":0,"index":4224},{"krate":0,"index":4226},{"krate":0,"index":4228},{"krate":0,"index":4230},{"krate":0,"index":4232},{"krate":0,"index":4234},{"krate":0,"index":4236},{"krate":0,"index":4238},{"krate":0,"index":4240},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":4246},{"krate":0,"index":4248},{"krate":0,"index":4250},{"krate":0,"index":4252},{"krate":0,"index":4254},{"krate":0,"index":4256},{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4262},{"krate":0,"index":4264},{"krate":0,"index":4266},{"krate":0,"index":4268},{"krate":0,"index":4270},{"krate":0,"index":4272},{"krate":0,"index":4274},{"krate":0,"index":4276},{"krate":0,"index":4278},{"krate":0,"index":4280},{"krate":0,"index":4282},{"krate":0,"index":4284},{"krate":0,"index":4286},{"krate":0,"index":4288},{"krate":0,"index":4290},{"krate":0,"index":4292},{"krate":0,"index":4294},{"krate":0,"index":4296},{"krate":0,"index":4298},{"krate":0,"index":4300},{"krate":0,"index":4302},{"krate":0,"index":4304},{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4316},{"krate":0,"index":4318},{"krate":0,"index":4320}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":88043,"byte_end":88052,"line_start":403,"line_end":403,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":88309,"byte_end":88318,"line_start":413,"line_end":413,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":88475,"byte_end":88484,"line_start":420,"line_end":420,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":88754,"byte_end":88763,"line_start":433,"line_end":433,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":90724,"byte_end":90735,"line_start":59,"line_end":59,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":4342},{"krate":0,"index":4344},{"krate":0,"index":4346},{"krate":0,"index":4348},{"krate":0,"index":4350},{"krate":0,"index":4352},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4358},{"krate":0,"index":4360},{"krate":0,"index":4362},{"krate":0,"index":4364},{"krate":0,"index":4366},{"krate":0,"index":4368},{"krate":0,"index":4370},{"krate":0,"index":4372},{"krate":0,"index":4374},{"krate":0,"index":4376},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4382},{"krate":0,"index":4384},{"krate":0,"index":4386},{"krate":0,"index":4388},{"krate":0,"index":4390},{"krate":0,"index":4392},{"krate":0,"index":4394},{"krate":0,"index":4396}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94346,"byte_end":94357,"line_start":167,"line_end":167,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94515,"byte_end":94526,"line_start":175,"line_end":175,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94691,"byte_end":94702,"line_start":185,"line_end":185,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94897,"byte_end":94908,"line_start":194,"line_end":194,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":95250,"byte_end":95261,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":96514,"byte_end":96525,"line_start":251,"line_end":251,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":97066,"byte_end":97077,"line_start":270,"line_end":270,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":98923,"byte_end":98934,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4422},{"krate":0,"index":4424},{"krate":0,"index":4426},{"krate":0,"index":4428},{"krate":0,"index":4430},{"krate":0,"index":4432}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":101925,"byte_end":101931,"line_start":136,"line_end":136,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":4460},{"krate":0,"index":4462},{"krate":0,"index":4464},{"krate":0,"index":4466},{"krate":0,"index":4468},{"krate":0,"index":4470},{"krate":0,"index":4472},{"krate":0,"index":4474},{"krate":0,"index":4476},{"krate":0,"index":4478},{"krate":0,"index":4480},{"krate":0,"index":4482},{"krate":0,"index":4484},{"krate":0,"index":4486},{"krate":0,"index":4488},{"krate":0,"index":4490},{"krate":0,"index":4492},{"krate":0,"index":4494},{"krate":0,"index":4496},{"krate":0,"index":4498},{"krate":0,"index":4500},{"krate":0,"index":4502},{"krate":0,"index":4504},{"krate":0,"index":4506},{"krate":0,"index":4508},{"krate":0,"index":4510},{"krate":0,"index":4512},{"krate":0,"index":4514},{"krate":0,"index":4516},{"krate":0,"index":4518},{"krate":0,"index":4520},{"krate":0,"index":4522},{"krate":0,"index":4524},{"krate":0,"index":4526},{"krate":0,"index":4528},{"krate":0,"index":4530},{"krate":0,"index":4532},{"krate":0,"index":4534},{"krate":0,"index":4536},{"krate":0,"index":4538},{"krate":0,"index":4540},{"krate":0,"index":4542},{"krate":0,"index":4544},{"krate":0,"index":4546},{"krate":0,"index":4548},{"krate":0,"index":4550},{"krate":0,"index":4552},{"krate":0,"index":4554},{"krate":0,"index":4556},{"krate":0,"index":4558},{"krate":0,"index":4560},{"krate":0,"index":4562},{"krate":0,"index":4564},{"krate":0,"index":4566},{"krate":0,"index":4568},{"krate":0,"index":4570},{"krate":0,"index":4572},{"krate":0,"index":4574},{"krate":0,"index":4576},{"krate":0,"index":4578},{"krate":0,"index":4580}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":107725,"byte_end":107731,"line_start":271,"line_end":271,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":108237,"byte_end":108243,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":110844,"byte_end":110850,"line_start":103,"line_end":103,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":111552,"byte_end":111561,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":128102,"byte_end":128112,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":129422,"byte_end":129432,"line_start":65,"line_end":65,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":129569,"byte_end":129579,"line_start":72,"line_end":72,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":129915,"byte_end":129927,"line_start":88,"line_end":88,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":132351,"byte_end":132357,"line_start":164,"line_end":164,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":132502,"byte_end":132508,"line_start":171,"line_end":171,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":4668},{"krate":0,"index":4670},{"krate":0,"index":4672},{"krate":0,"index":4674},{"krate":0,"index":4676},{"krate":0,"index":4678},{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4686},{"krate":0,"index":4688},{"krate":0,"index":4690},{"krate":0,"index":4692},{"krate":0,"index":4694},{"krate":0,"index":4696},{"krate":0,"index":4698},{"krate":0,"index":4700},{"krate":0,"index":4702},{"krate":0,"index":4704},{"krate":0,"index":4706},{"krate":0,"index":4708},{"krate":0,"index":4710},{"krate":0,"index":4712},{"krate":0,"index":4714},{"krate":0,"index":4716},{"krate":0,"index":4718},{"krate":0,"index":4720},{"krate":0,"index":4722}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":138463,"byte_end":138469,"line_start":331,"line_end":331,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":138797,"byte_end":138803,"line_start":345,"line_end":345,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":139180,"byte_end":139186,"line_start":357,"line_end":357,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":143682,"byte_end":143688,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151210,"byte_end":151216,"line_start":280,"line_end":280,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151348,"byte_end":151354,"line_start":287,"line_end":287,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151654,"byte_end":151660,"line_start":301,"line_end":301,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151817,"byte_end":151823,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151922,"byte_end":151928,"line_start":315,"line_end":315,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":152036,"byte_end":152042,"line_start":322,"line_end":322,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":152163,"byte_end":152169,"line_start":329,"line_end":329,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":152291,"byte_end":152297,"line_start":338,"line_end":338,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":152415,"byte_end":152421,"line_start":345,"line_end":345,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,112,97,114,115,101,47,105,110,100,101,120,101,100,95,115,116,114,46,114,115],"byte_start":164203,"byte_end":164213,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":166658,"byte_end":166668,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":168188,"byte_end":168198,"line_start":79,"line_end":79,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":168349,"byte_end":168359,"line_start":86,"line_end":86,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":168666,"byte_end":168676,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169132,"byte_end":169142,"line_start":121,"line_end":121,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169163,"byte_end":169173,"line_start":123,"line_end":123,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169378,"byte_end":169388,"line_start":132,"line_end":132,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169533,"byte_end":169543,"line_start":139,"line_end":139,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169807,"byte_end":169817,"line_start":147,"line_end":147,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":170109,"byte_end":170116,"line_start":161,"line_end":161,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":171728,"byte_end":171735,"line_start":220,"line_end":220,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":171918,"byte_end":171925,"line_start":229,"line_end":229,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172078,"byte_end":172085,"line_start":236,"line_end":236,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172225,"byte_end":172232,"line_start":243,"line_end":243,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172360,"byte_end":172367,"line_start":250,"line_end":250,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172517,"byte_end":172524,"line_start":257,"line_end":257,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172687,"byte_end":172694,"line_start":264,"line_end":264,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172843,"byte_end":172850,"line_start":271,"line_end":271,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173024,"byte_end":173031,"line_start":278,"line_end":278,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173161,"byte_end":173168,"line_start":284,"line_end":284,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173332,"byte_end":173339,"line_start":291,"line_end":291,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173494,"byte_end":173501,"line_start":298,"line_end":298,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173800,"byte_end":173807,"line_start":312,"line_end":312,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":174099,"byte_end":174106,"line_start":326,"line_end":326,"column_start":17,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":174135,"byte_end":174142,"line_start":328,"line_end":328,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":178614,"byte_end":178621,"line_start":47,"line_end":47,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":198572,"byte_end":198579,"line_start":623,"line_end":623,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":198912,"byte_end":198919,"line_start":634,"line_end":634,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":206240,"byte_end":206246,"line_start":214,"line_end":214,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":206485,"byte_end":206488,"line_start":223,"line_end":223,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207222,"byte_end":207228,"line_start":249,"line_end":249,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4898},{"krate":0,"index":4900}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207230,"byte_end":207238,"line_start":249,"line_end":249,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4904},{"krate":0,"index":4906}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207240,"byte_end":207248,"line_start":249,"line_end":249,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4910},{"krate":0,"index":4912}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207250,"byte_end":207262,"line_start":249,"line_end":249,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4916},{"krate":0,"index":4918}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207264,"byte_end":207276,"line_start":249,"line_end":249,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4922},{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207278,"byte_end":207288,"line_start":249,"line_end":249,"column_start":61,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4928},{"krate":0,"index":4930}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207337,"byte_end":207343,"line_start":252,"line_end":252,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207633,"byte_end":207639,"line_start":264,"line_end":264,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":209250,"byte_end":209258,"line_start":303,"line_end":303,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":210221,"byte_end":210228,"line_start":328,"line_end":328,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":211488,"byte_end":211494,"line_start":362,"line_end":362,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":211809,"byte_end":211815,"line_start":374,"line_end":374,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":219354,"byte_end":219363,"line_start":80,"line_end":80,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":222482,"byte_end":222491,"line_start":186,"line_end":186,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":222798,"byte_end":222807,"line_start":198,"line_end":198,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":223113,"byte_end":223122,"line_start":210,"line_end":210,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,46,114,115],"byte_start":230199,"byte_end":230205,"line_start":128,"line_end":128,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,46,114,115],"byte_start":230427,"byte_end":230433,"line_start":137,"line_end":137,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":236468,"byte_end":236474,"line_start":167,"line_end":167,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":237631,"byte_end":237637,"line_start":210,"line_end":210,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":238085,"byte_end":238091,"line_start":228,"line_end":228,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":244161,"byte_end":244165,"line_start":167,"line_end":167,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":247567,"byte_end":247571,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":248374,"byte_end":248378,"line_start":294,"line_end":294,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":248575,"byte_end":248579,"line_start":300,"line_end":300,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":251738,"byte_end":251749,"line_start":53,"line_end":53,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":253174,"byte_end":253185,"line_start":109,"line_end":109,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":254010,"byte_end":254021,"line_start":139,"line_end":139,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":254160,"byte_end":254171,"line_start":145,"line_end":145,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":255666,"byte_end":255672,"line_start":15,"line_end":15,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":263034,"byte_end":263040,"line_start":224,"line_end":224,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":263689,"byte_end":263696,"line_start":251,"line_end":251,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":264465,"byte_end":264475,"line_start":281,"line_end":281,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":264764,"byte_end":264770,"line_start":292,"line_end":292,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":265140,"byte_end":265146,"line_start":304,"line_end":304,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":268231,"byte_end":268236,"line_start":87,"line_end":87,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":269277,"byte_end":269282,"line_start":121,"line_end":121,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":269749,"byte_end":269754,"line_start":136,"line_end":136,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":278772,"byte_end":278778,"line_start":203,"line_end":203,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":279161,"byte_end":279164,"line_start":214,"line_end":214,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":279474,"byte_end":279478,"line_start":224,"line_end":224,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":280204,"byte_end":280210,"line_start":243,"line_end":243,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":280676,"byte_end":280682,"line_start":255,"line_end":255,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":281131,"byte_end":281137,"line_start":266,"line_end":266,"column_start":77,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":281656,"byte_end":281664,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":285215,"byte_end":285223,"line_start":107,"line_end":107,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":288761,"byte_end":288766,"line_start":93,"line_end":93,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":291699,"byte_end":291704,"line_start":183,"line_end":183,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":292024,"byte_end":292029,"line_start":193,"line_end":193,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":292824,"byte_end":292829,"line_start":219,"line_end":219,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":294238,"byte_end":294247,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1974},{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":296248,"byte_end":296257,"line_start":82,"line_end":82,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":296620,"byte_end":296629,"line_start":95,"line_end":95,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":296731,"byte_end":296740,"line_start":103,"line_end":103,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":296833,"byte_end":296842,"line_start":109,"line_end":109,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":297081,"byte_end":297090,"line_start":119,"line_end":119,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":297289,"byte_end":297298,"line_start":129,"line_end":129,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":298592,"byte_end":298598,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2050}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":299235,"byte_end":299241,"line_start":37,"line_end":37,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":299705,"byte_end":299711,"line_start":57,"line_end":57,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":300193,"byte_end":300199,"line_start":71,"line_end":71,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":300844,"byte_end":300848,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":302145,"byte_end":302149,"line_start":62,"line_end":62,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":303138,"byte_end":303142,"line_start":93,"line_end":93,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":306073,"byte_end":306088,"line_start":165,"line_end":165,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2116},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2144}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":318610,"byte_end":318618,"line_start":571,"line_end":571,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":338546,"byte_end":338554,"line_start":1161,"line_end":1161,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":338959,"byte_end":338967,"line_start":1178,"line_end":1178,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,97,105,108,117,114,101,46,114,115],"byte_start":339385,"byte_end":339392,"line_start":10,"line_end":10,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,97,105,108,117,114,101,46,114,115],"byte_start":339522,"byte_end":339529,"line_start":16,"line_end":16,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,99,111,110,116,101,110,116,46,114,115],"byte_start":341210,"byte_end":341217,"line_start":49,"line_end":49,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":344352,"byte_end":344359,"line_start":43,"line_end":43,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":345008,"byte_end":345015,"line_start":58,"line_end":58,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":346414,"byte_end":346422,"line_start":103,"line_end":103,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":347149,"byte_end":347158,"line_start":130,"line_end":130,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":347701,"byte_end":347706,"line_start":152,"line_end":152,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":348743,"byte_end":348753,"line_start":187,"line_end":187,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":349522,"byte_end":349530,"line_start":214,"line_end":214,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":350250,"byte_end":350256,"line_start":238,"line_end":238,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":355697,"byte_end":355703,"line_start":124,"line_end":124,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2354},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":356144,"byte_end":356151,"line_start":145,"line_end":145,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2376},{"krate":0,"index":2378},{"krate":0,"index":2380},{"krate":0,"index":2382},{"krate":0,"index":2384},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":367768,"byte_end":367775,"line_start":519,"line_end":519,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2404},{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":368313,"byte_end":368320,"line_start":543,"line_end":543,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":368485,"byte_end":368492,"line_start":549,"line_end":549,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":411029,"byte_end":411040,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":414041,"byte_end":414052,"line_start":126,"line_end":126,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":415198,"byte_end":415209,"line_start":150,"line_end":150,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":416149,"byte_end":416160,"line_start":168,"line_end":168,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":417775,"byte_end":417786,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":419050,"byte_end":419061,"line_start":78,"line_end":78,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":419927,"byte_end":419938,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2486},{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":421640,"byte_end":421651,"line_start":161,"line_end":161,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":424135,"byte_end":424141,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":447774,"byte_end":447780,"line_start":792,"line_end":792,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2608}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":448298,"byte_end":448304,"line_start":810,"line_end":810,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449637,"byte_end":449650,"line_start":31,"line_end":31,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2662},{"krate":0,"index":2664},{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,116,111,109,108,95,101,120,116,46,114,115],"byte_start":462010,"byte_end":462021,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":465142,"byte_end":465151,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":465521,"byte_end":465530,"line_start":31,"line_end":31,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":466973,"byte_end":466979,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":467125,"byte_end":467131,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2740}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":469451,"byte_end":469457,"line_start":177,"line_end":177,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":377155,"byte_end":377167,"line_start":238,"line_end":238,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2842},{"krate":0,"index":2844},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":474604,"byte_end":474608,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2908},{"krate":0,"index":2910},{"krate":0,"index":2914},{"krate":0,"index":2916},{"krate":0,"index":2918},{"krate":0,"index":2920},{"krate":0,"index":2922},{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":482055,"byte_end":482059,"line_start":276,"line_end":276,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,95,115,116,114,101,97,109,46,114,115],"byte_start":482924,"byte_end":482934,"line_start":21,"line_end":21,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,95,115,116,114,101,97,109,46,114,115],"byte_start":483942,"byte_end":483952,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,110,101,116,95,115,116,114,101,97,109,46,114,115],"byte_start":484632,"byte_end":484641,"line_start":22,"line_end":22,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,110,101,116,95,115,116,114,101,97,109,46,114,115],"byte_start":485061,"byte_end":485070,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2996}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,110,101,116,95,115,116,114,101,97,109,46,114,115],"byte_start":485683,"byte_end":485692,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":487264,"byte_end":487270,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3036},{"krate":0,"index":3038},{"krate":0,"index":3040}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":494991,"byte_end":494995,"line_start":228,"line_end":228,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3050},{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":495155,"byte_end":495161,"line_start":235,"line_end":235,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":495515,"byte_end":495521,"line_start":247,"line_end":247,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3062},{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":495812,"byte_end":495818,"line_start":258,"line_end":258,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3068},{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":496150,"byte_end":496153,"line_start":270,"line_end":270,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":3076}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":497007,"byte_end":497014,"line_start":19,"line_end":19,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3120}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,102,97,105,114,105,110,103,115,46,114,115],"byte_start":515675,"byte_end":515683,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3154},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":521349,"byte_end":521354,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3200},{"krate":0,"index":3202},{"krate":0,"index":3204},{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":523619,"byte_end":523624,"line_start":129,"line_end":129,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3210},{"krate":0,"index":3214},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":526662,"byte_end":526666,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3230},{"krate":0,"index":3232},{"krate":0,"index":3234},{"krate":0,"index":3236},{"krate":0,"index":3238},{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":528594,"byte_end":528598,"line_start":105,"line_end":105,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3244},{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":514789,"byte_end":514792,"line_start":346,"line_end":346,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3272},{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3280}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":531848,"byte_end":531859,"line_start":95,"line_end":95,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3302},{"krate":0,"index":3304},{"krate":0,"index":3306},{"krate":0,"index":3308}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":532670,"byte_end":532681,"line_start":130,"line_end":130,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":532818,"byte_end":532829,"line_start":137,"line_end":137,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":533112,"byte_end":533123,"line_start":147,"line_end":147,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":533271,"byte_end":533286,"line_start":154,"line_end":154,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":533743,"byte_end":533754,"line_start":166,"line_end":166,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3328}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":533929,"byte_end":533940,"line_start":174,"line_end":174,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":534120,"byte_end":534131,"line_start":182,"line_end":182,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3336}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":534595,"byte_end":534606,"line_start":195,"line_end":195,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,99,111,108,108,105,100,101,114,46,114,115],"byte_start":553090,"byte_end":553093,"line_start":41,"line_end":41,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,99,111,108,108,105,100,101,114,46,114,115],"byte_start":553571,"byte_end":553580,"line_start":61,"line_end":61,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,99,111,108,108,105,100,101,114,46,114,115],"byte_start":554435,"byte_end":554440,"line_start":78,"line_end":78,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,99,111,108,108,105,100,101,114,46,114,115],"byte_start":555390,"byte_end":555395,"line_start":99,"line_end":99,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3378}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":572237,"byte_end":572242,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3406},{"krate":0,"index":3408},{"krate":0,"index":3410},{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":578199,"byte_end":578204,"line_start":220,"line_end":220,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":578505,"byte_end":578510,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3424}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":578904,"byte_end":578909,"line_start":249,"line_end":249,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3428}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":579080,"byte_end":579085,"line_start":256,"line_end":256,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,109,111,100,46,114,115],"byte_start":535804,"byte_end":535810,"line_start":20,"line_end":20,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3452},{"krate":0,"index":3454},{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":580371,"byte_end":580377,"line_start":40,"line_end":40,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3558}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":583347,"byte_end":583353,"line_start":109,"line_end":109,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3564},{"krate":0,"index":3566},{"krate":0,"index":3568},{"krate":0,"index":3570},{"krate":0,"index":3572},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":3578},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3594},{"krate":0,"index":3596},{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":610185,"byte_end":610192,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3638},{"krate":0,"index":3640},{"krate":0,"index":3642},{"krate":0,"index":3644}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":611741,"byte_end":611748,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":611880,"byte_end":611887,"line_start":125,"line_end":125,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":618246,"byte_end":618247,"line_start":20,"line_end":20,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":618568,"byte_end":618569,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3706},{"krate":0,"index":3708}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":618913,"byte_end":618916,"line_start":43,"line_end":43,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3848,"byte_end":3854,"line_start":119,"line_end":119,"column_start":37,"column_end":43},"ref_id":{"krate":0,"index":36}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3864,"byte_end":3869,"line_start":120,"line_end":120,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3879,"byte_end":3883,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":228}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35171,"byte_end":35176,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":230}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35186,"byte_end":35189,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":268}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,111,100,46,114,115],"byte_start":35516,"byte_end":35523,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":922}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3893,"byte_end":3900,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1118}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3910,"byte_end":3918,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1782}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":270888,"byte_end":270895,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2226}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,109,111,100,46,114,115],"byte_start":270905,"byte_end":270911,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2248}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3928,"byte_end":3935,"line_start":124,"line_end":124,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2328}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3945,"byte_end":3951,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2416}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3961,"byte_end":3965,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2854}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3975,"byte_end":3982,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3088}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3992,"byte_end":3999,"line_start":128,"line_end":128,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3122}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4009,"byte_end":4014,"line_start":129,"line_end":129,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3282}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5390,"byte_end":5402,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":3756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":5685,"byte_end":5697,"line_start":33,"line_end":33,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":3756},"to":{"krate":2,"index":6602}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":6084,"byte_end":6096,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":3756},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":7321,"byte_end":7333,"line_start":86,"line_end":86,"column_start":14,"column_end":26},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":56},"to":{"krate":10,"index":176}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":15752,"byte_end":15764,"line_start":77,"line_end":77,"column_start":10,"column_end":22},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":23545,"byte_end":23557,"line_start":326,"line_end":326,"column_start":25,"column_end":37},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":132},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":24239,"byte_end":24252,"line_start":346,"line_end":346,"column_start":20,"column_end":33},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":24407,"byte_end":24420,"line_start":355,"line_end":355,"column_start":23,"column_end":36},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2030}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,114,101,113,117,101,115,116,46,114,115],"byte_start":24560,"byte_end":24573,"line_start":362,"line_end":362,"column_start":25,"column_end":38},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":164},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,108,111,99,97,108,47,99,108,105,101,110,116,46,114,115],"byte_start":27280,"byte_end":27286,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":40049,"byte_end":40052,"line_start":29,"line_end":29,"column_start":10,"column_end":13},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":4096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":47786,"byte_end":47789,"line_start":289,"line_end":289,"column_start":20,"column_end":23},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":4096},"to":{"krate":2,"index":2606}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48104,"byte_end":48107,"line_start":302,"line_end":302,"column_start":37,"column_end":40},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":4096},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48329,"byte_end":48332,"line_start":311,"line_end":311,"column_start":17,"column_end":20},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":4096},"to":{"krate":2,"index":2424}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48368,"byte_end":48371,"line_start":313,"line_end":313,"column_start":28,"column_end":31},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":4096},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48492,"byte_end":48495,"line_start":320,"line_end":320,"column_start":23,"column_end":26},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":4096},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":48629,"byte_end":48632,"line_start":327,"line_end":327,"column_start":27,"column_end":30},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":4096},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,114,105,46,114,115],"byte_start":49826,"byte_end":49834,"line_start":372,"line_end":372,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":4102},"to":{"krate":2,"index":3842}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":64814,"byte_end":64821,"line_start":119,"line_end":119,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":71348,"byte_end":71355,"line_start":323,"line_end":323,"column_start":25,"column_end":32},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":368},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,111,107,105,101,115,46,114,115],"byte_start":71629,"byte_end":71635,"line_start":332,"line_end":332,"column_start":39,"column_end":45},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":4582},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":72168,"byte_end":72174,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":4132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":73904,"byte_end":73910,"line_start":86,"line_end":86,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":4132},"to":{"krate":2,"index":6602}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,116,104,111,100,46,114,115],"byte_start":74788,"byte_end":74794,"line_start":107,"line_end":107,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":4132},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":75611,"byte_end":75617,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":4176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":80507,"byte_end":80516,"line_start":180,"line_end":180,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":88043,"byte_end":88052,"line_start":403,"line_end":403,"column_start":18,"column_end":27},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":4196},"to":{"krate":2,"index":6602}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":88309,"byte_end":88318,"line_start":413,"line_end":413,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":4196},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":88475,"byte_end":88484,"line_start":420,"line_end":420,"column_start":15,"column_end":24},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":4196},"to":{"krate":2,"index":7292}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,109,101,100,105,97,95,116,121,112,101,46,114,115],"byte_start":88754,"byte_end":88763,"line_start":433,"line_end":433,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":4196},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":90724,"byte_end":90735,"line_start":59,"line_end":59,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":4322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94346,"byte_end":94357,"line_start":167,"line_end":167,"column_start":18,"column_end":29},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":4322},"to":{"krate":2,"index":2640}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94515,"byte_end":94526,"line_start":175,"line_end":175,"column_start":16,"column_end":27},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":4322},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94691,"byte_end":94702,"line_start":185,"line_end":185,"column_start":35,"column_end":46},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":4322},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":94897,"byte_end":94908,"line_start":194,"line_end":194,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":4322},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":95250,"byte_end":95261,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":4322},"to":{"krate":2,"index":6602}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":96514,"byte_end":96525,"line_start":251,"line_end":251,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":4322},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,99,111,110,116,101,110,116,95,116,121,112,101,46,114,115],"byte_start":97066,"byte_end":97077,"line_start":270,"line_end":270,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":4322},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":98923,"byte_end":98934,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":4398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":101925,"byte_end":101931,"line_start":136,"line_end":136,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":4434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,115,116,97,116,117,115,46,114,115],"byte_start":107725,"byte_end":107731,"line_start":271,"line_end":271,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":4434},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":108237,"byte_end":108243,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":4582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":110844,"byte_end":110850,"line_start":103,"line_end":103,"column_start":27,"column_end":33},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":4582},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,104,101,97,100,101,114,46,114,115],"byte_start":111552,"byte_end":111561,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":4606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":128102,"byte_end":128112,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":4626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":129422,"byte_end":129432,"line_start":65,"line_end":65,"column_start":26,"column_end":36},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":4626},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":129569,"byte_end":129579,"line_start":72,"line_end":72,"column_start":16,"column_end":26},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":4626},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":129915,"byte_end":129927,"line_start":88,"line_end":88,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":4642},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":132351,"byte_end":132357,"line_start":164,"line_end":164,"column_start":48,"column_end":54},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":4652},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":132502,"byte_end":132508,"line_start":171,"line_end":171,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":4652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":138463,"byte_end":138469,"line_start":331,"line_end":331,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":4652},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":138797,"byte_end":138803,"line_start":345,"line_end":345,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":4652},"to":{"krate":2,"index":6602}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,97,99,99,101,112,116,46,114,115],"byte_start":139180,"byte_end":139186,"line_start":357,"line_end":357,"column_start":32,"column_end":38},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":4652},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":143682,"byte_end":143688,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":4724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151210,"byte_end":151216,"line_start":280,"line_end":280,"column_start":25,"column_end":31},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":4724},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151348,"byte_end":151354,"line_start":287,"line_end":287,"column_start":28,"column_end":34},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":4724},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151654,"byte_end":151660,"line_start":301,"line_end":301,"column_start":26,"column_end":32},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":4724},"to":{"krate":2,"index":2472}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151817,"byte_end":151823,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":4724},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":151922,"byte_end":151928,"line_start":315,"line_end":315,"column_start":22,"column_end":28},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":4724},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":152036,"byte_end":152042,"line_start":322,"line_end":322,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":4724},"to":{"krate":4,"index":3716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":152163,"byte_end":152169,"line_start":329,"line_end":329,"column_start":16,"column_end":22},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":4724},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":152291,"byte_end":152297,"line_start":338,"line_end":338,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":4724},"to":{"krate":2,"index":2030}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,114,97,119,95,115,116,114,46,114,115],"byte_start":152415,"byte_end":152421,"line_start":345,"line_end":345,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":0,"index":4724},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,112,97,114,115,101,47,105,110,100,101,120,101,100,95,115,116,114,46,114,115],"byte_start":164203,"byte_end":164213,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":4766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":166658,"byte_end":166668,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":4776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":168188,"byte_end":168198,"line_start":79,"line_end":79,"column_start":20,"column_end":30},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":168349,"byte_end":168359,"line_start":86,"line_end":86,"column_start":25,"column_end":35},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":168666,"byte_end":168676,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169132,"byte_end":169142,"line_start":121,"line_end":121,"column_start":13,"column_end":23},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":2424}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169163,"byte_end":169173,"line_start":123,"line_end":123,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":7292}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169378,"byte_end":169388,"line_start":132,"line_end":132,"column_start":21,"column_end":31},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":2472}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169533,"byte_end":169543,"line_start":139,"line_end":139,"column_start":14,"column_end":24},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":2454}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":169807,"byte_end":169817,"line_start":147,"line_end":147,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":170109,"byte_end":170116,"line_start":161,"line_end":161,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":171728,"byte_end":171735,"line_start":220,"line_end":220,"column_start":20,"column_end":27},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":171918,"byte_end":171925,"line_start":229,"line_end":229,"column_start":32,"column_end":39},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172078,"byte_end":172085,"line_start":236,"line_end":236,"column_start":33,"column_end":40},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2722}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172225,"byte_end":172232,"line_start":243,"line_end":243,"column_start":36,"column_end":43},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172360,"byte_end":172367,"line_start":250,"line_end":250,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172517,"byte_end":172524,"line_start":257,"line_end":257,"column_start":41,"column_end":48},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172687,"byte_end":172694,"line_start":264,"line_end":264,"column_start":53,"column_end":60},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":172843,"byte_end":172850,"line_start":271,"line_end":271,"column_start":42,"column_end":49},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2472}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173024,"byte_end":173031,"line_start":278,"line_end":278,"column_start":18,"column_end":25},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2454}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173161,"byte_end":173168,"line_start":284,"line_end":284,"column_start":27,"column_end":34},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173332,"byte_end":173339,"line_start":291,"line_end":291,"column_start":41,"column_end":48},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173494,"byte_end":173501,"line_start":298,"line_end":298,"column_start":29,"column_end":36},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":173800,"byte_end":173807,"line_start":312,"line_end":312,"column_start":37,"column_end":44},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":174099,"byte_end":174106,"line_start":326,"line_end":326,"column_start":17,"column_end":24},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2424}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,116,116,112,47,117,110,99,97,115,101,100,46,114,115],"byte_start":174135,"byte_end":174142,"line_start":328,"line_end":328,"column_start":19,"column_end":26},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":7292}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":178614,"byte_end":178621,"line_start":47,"line_end":47,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":4798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":198572,"byte_end":198579,"line_start":623,"line_end":623,"column_start":25,"column_end":32},"kind":{"variant":"Impl","fields":[92]},"from":{"krate":0,"index":4798},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,114,101,113,117,101,115,116,46,114,115],"byte_start":198912,"byte_end":198919,"line_start":634,"line_end":634,"column_start":27,"column_end":34},"kind":{"variant":"Impl","fields":[93]},"from":{"krate":0,"index":4798},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":205733,"byte_end":205738,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1780},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":206240,"byte_end":206246,"line_start":214,"line_end":214,"column_start":28,"column_end":34},"kind":{"variant":"Impl","fields":[94]},"from":{"krate":4,"index":4884},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":206485,"byte_end":206488,"line_start":223,"line_end":223,"column_start":28,"column_end":31},"kind":{"variant":"Impl","fields":[95]},"from":{"krate":4,"index":2592},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207222,"byte_end":207228,"line_start":249,"line_end":249,"column_start":5,"column_end":11},"kind":{"variant":"Impl","fields":[109]},"from":{"krate":1,"index":9550},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207230,"byte_end":207238,"line_start":249,"line_end":249,"column_start":13,"column_end":21},"kind":{"variant":"Impl","fields":[110]},"from":{"krate":1,"index":9592},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207240,"byte_end":207248,"line_start":249,"line_end":249,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[111]},"from":{"krate":1,"index":9596},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207250,"byte_end":207262,"line_start":249,"line_end":249,"column_start":33,"column_end":45},"kind":{"variant":"Impl","fields":[112]},"from":{"krate":1,"index":9650},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207264,"byte_end":207276,"line_start":249,"line_end":249,"column_start":47,"column_end":59},"kind":{"variant":"Impl","fields":[113]},"from":{"krate":1,"index":9654},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207278,"byte_end":207288,"line_start":249,"line_end":249,"column_start":61,"column_end":71},"kind":{"variant":"Impl","fields":[114]},"from":{"krate":1,"index":9624},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207337,"byte_end":207343,"line_start":252,"line_end":252,"column_start":46,"column_end":52},"kind":{"variant":"Impl","fields":[115]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":207633,"byte_end":207639,"line_start":264,"line_end":264,"column_start":46,"column_end":52},"kind":{"variant":"Impl","fields":[116]},"from":{"krate":2,"index":40964},"to":{"krate":0,"index":1278}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":208913,"byte_end":208918,"line_start":294,"line_end":294,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1780},"to":{"krate":0,"index":1330}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":209250,"byte_end":209258,"line_start":303,"line_end":303,"column_start":31,"column_end":39},"kind":{"variant":"Impl","fields":[117]},"from":{"krate":0,"index":4102},"to":{"krate":0,"index":1330}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":210221,"byte_end":210228,"line_start":328,"line_end":328,"column_start":31,"column_end":38},"kind":{"variant":"Impl","fields":[118]},"from":{"krate":1,"index":10046},"to":{"krate":0,"index":1330}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":211488,"byte_end":211494,"line_start":362,"line_end":362,"column_start":52,"column_end":58},"kind":{"variant":"Impl","fields":[119]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":1330}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,112,97,114,97,109,46,114,115],"byte_start":211809,"byte_end":211815,"line_start":374,"line_end":374,"column_start":52,"column_end":58},"kind":{"variant":"Impl","fields":[120]},"from":{"krate":2,"index":40964},"to":{"krate":0,"index":1330}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":219354,"byte_end":219363,"line_start":80,"line_end":80,"column_start":10,"column_end":19},"kind":{"variant":"Impl","fields":[121]},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":222482,"byte_end":222491,"line_start":186,"line_end":186,"column_start":31,"column_end":40},"kind":{"variant":"Impl","fields":[122]},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":222798,"byte_end":222807,"line_start":198,"line_end":198,"column_start":28,"column_end":37},"kind":{"variant":"Impl","fields":[123]},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,95,105,116,101,109,115,46,114,115],"byte_start":223113,"byte_end":223122,"line_start":210,"line_end":210,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[124]},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":3842}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,46,114,115],"byte_start":229228,"byte_end":229233,"line_start":99,"line_end":99,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1780},"to":{"krate":0,"index":1398}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,46,114,115],"byte_start":230199,"byte_end":230205,"line_start":128,"line_end":128,"column_start":44,"column_end":50},"kind":{"variant":"Impl","fields":[125]},"from":{"krate":2,"index":40964},"to":{"krate":0,"index":1398}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,46,114,115],"byte_start":230427,"byte_end":230433,"line_start":137,"line_end":137,"column_start":44,"column_end":50},"kind":{"variant":"Impl","fields":[126]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":1398}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":235441,"byte_end":235446,"line_start":137,"line_end":137,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1780},"to":{"krate":0,"index":1442}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":236468,"byte_end":236474,"line_start":167,"line_end":167,"column_start":32,"column_end":38},"kind":{"variant":"Impl","fields":[127]},"from":{"krate":4,"index":4884},"to":{"krate":0,"index":1442}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":237631,"byte_end":237637,"line_start":210,"line_end":210,"column_start":54,"column_end":60},"kind":{"variant":"Impl","fields":[129]},"from":{"krate":2,"index":40964},"to":{"krate":0,"index":1442}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,114,111,109,95,102,111,114,109,95,118,97,108,117,101,46,114,115],"byte_start":238085,"byte_end":238091,"line_start":228,"line_end":228,"column_start":54,"column_end":60},"kind":{"variant":"Impl","fields":[130]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":1442}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":244161,"byte_end":244165,"line_start":167,"line_end":167,"column_start":32,"column_end":36},"kind":{"variant":"Impl","fields":[131]},"from":{"krate":0,"index":1512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":247567,"byte_end":247571,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"kind":{"variant":"Impl","fields":[132]},"from":{"krate":0,"index":1512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":248374,"byte_end":248378,"line_start":294,"line_end":294,"column_start":50,"column_end":54},"kind":{"variant":"Impl","fields":[133]},"from":{"krate":0,"index":1512},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,102,111,114,109,46,114,115],"byte_start":248575,"byte_end":248579,"line_start":300,"line_end":300,"column_start":40,"column_end":44},"kind":{"variant":"Impl","fields":[134]},"from":{"krate":0,"index":1512},"to":{"krate":0,"index":3042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":251738,"byte_end":251749,"line_start":53,"line_end":53,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[135]},"from":{"krate":0,"index":1562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":253174,"byte_end":253185,"line_start":109,"line_end":109,"column_start":37,"column_end":48},"kind":{"variant":"Impl","fields":[136]},"from":{"krate":0,"index":1562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":254010,"byte_end":254021,"line_start":139,"line_end":139,"column_start":50,"column_end":61},"kind":{"variant":"Impl","fields":[137]},"from":{"krate":0,"index":1562},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,111,114,109,47,108,101,110,105,101,110,116,46,114,115],"byte_start":254160,"byte_end":254171,"line_start":145,"line_end":145,"column_start":40,"column_end":51},"kind":{"variant":"Impl","fields":[138]},"from":{"krate":0,"index":1562},"to":{"krate":0,"index":3042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":255666,"byte_end":255672,"line_start":15,"line_end":15,"column_start":48,"column_end":54},"kind":{"variant":"Impl","fields":[139]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":2342}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":262455,"byte_end":262460,"line_start":211,"line_end":211,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1780},"to":{"krate":0,"index":1660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":263034,"byte_end":263040,"line_start":224,"line_end":224,"column_start":38,"column_end":44},"kind":{"variant":"Impl","fields":[140]},"from":{"krate":0,"index":4132},"to":{"krate":0,"index":1660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":263689,"byte_end":263696,"line_start":251,"line_end":251,"column_start":38,"column_end":45},"kind":{"variant":"Impl","fields":[141]},"from":{"krate":0,"index":368},"to":{"krate":0,"index":1660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":264465,"byte_end":264475,"line_start":281,"line_end":281,"column_start":38,"column_end":48},"kind":{"variant":"Impl","fields":[142]},"from":{"krate":1,"index":9624},"to":{"krate":0,"index":1660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":264764,"byte_end":264770,"line_start":292,"line_end":292,"column_start":62,"column_end":68},"kind":{"variant":"Impl","fields":[143]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":1660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,102,114,111,109,95,114,101,113,117,101,115,116,46,114,115],"byte_start":265140,"byte_end":265146,"line_start":304,"line_end":304,"column_start":62,"column_end":68},"kind":{"variant":"Impl","fields":[144]},"from":{"krate":2,"index":40964},"to":{"krate":0,"index":1660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":268231,"byte_end":268236,"line_start":87,"line_end":87,"column_start":36,"column_end":41},"kind":{"variant":"Impl","fields":[145]},"from":{"krate":0,"index":5048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":269277,"byte_end":269282,"line_start":121,"line_end":121,"column_start":64,"column_end":69},"kind":{"variant":"Impl","fields":[146]},"from":{"krate":0,"index":5048},"to":{"krate":0,"index":1660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,113,117,101,115,116,47,115,116,97,116,101,46,114,115],"byte_start":269749,"byte_end":269754,"line_start":136,"line_end":136,"column_start":46,"column_end":51},"kind":{"variant":"Impl","fields":[147]},"from":{"krate":0,"index":5048},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":278772,"byte_end":278778,"line_start":203,"line_end":203,"column_start":28,"column_end":34},"kind":{"variant":"Impl","fields":[148]},"from":{"krate":4,"index":4884},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":279161,"byte_end":279164,"line_start":214,"line_end":214,"column_start":28,"column_end":31},"kind":{"variant":"Impl","fields":[149]},"from":{"krate":4,"index":3888},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":279474,"byte_end":279478,"line_start":224,"line_end":224,"column_start":28,"column_end":32},"kind":{"variant":"Impl","fields":[150]},"from":{"krate":1,"index":3140},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":280204,"byte_end":280210,"line_start":243,"line_end":243,"column_start":46,"column_end":52},"kind":{"variant":"Impl","fields":[151]},"from":{"krate":2,"index":40964},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":280676,"byte_end":280682,"line_start":255,"line_end":255,"column_start":61,"column_end":67},"kind":{"variant":"Impl","fields":[152]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,100,101,114,46,114,115],"byte_start":281131,"byte_end":281137,"line_start":266,"line_end":266,"column_start":77,"column_end":83},"kind":{"variant":"Impl","fields":[153]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":281656,"byte_end":281664,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[154]},"from":{"krate":0,"index":5090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,100,105,114,101,99,116,46,114,115],"byte_start":285215,"byte_end":285223,"line_start":107,"line_end":107,"column_start":29,"column_end":37},"kind":{"variant":"Impl","fields":[155]},"from":{"krate":0,"index":5090},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":288761,"byte_end":288766,"line_start":93,"line_end":93,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[156]},"from":{"krate":0,"index":5096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":291699,"byte_end":291704,"line_start":183,"line_end":183,"column_start":46,"column_end":51},"kind":{"variant":"Impl","fields":[157]},"from":{"krate":0,"index":5096},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":292024,"byte_end":292029,"line_start":193,"line_end":193,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[158]},"from":{"krate":0,"index":5096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,108,97,115,104,46,114,115],"byte_start":292824,"byte_end":292829,"line_start":219,"line_end":219,"column_start":38,"column_end":43},"kind":{"variant":"Impl","fields":[159]},"from":{"krate":0,"index":5096},"to":{"krate":0,"index":1660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":294238,"byte_end":294247,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[160]},"from":{"krate":0,"index":5108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":296248,"byte_end":296257,"line_start":82,"line_end":82,"column_start":28,"column_end":37},"kind":{"variant":"Impl","fields":[161]},"from":{"krate":0,"index":5108},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":296620,"byte_end":296629,"line_start":95,"line_end":95,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[162]},"from":{"krate":0,"index":5108},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":296731,"byte_end":296740,"line_start":103,"line_end":103,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[163]},"from":{"krate":0,"index":5108},"to":{"krate":2,"index":2030}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":296833,"byte_end":296842,"line_start":109,"line_end":109,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[164]},"from":{"krate":0,"index":5108},"to":{"krate":1,"index":4218}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":297081,"byte_end":297090,"line_start":119,"line_end":119,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[165]},"from":{"krate":0,"index":5108},"to":{"krate":1,"index":4250}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,110,97,109,101,100,95,102,105,108,101,46,114,115],"byte_start":297289,"byte_end":297298,"line_start":129,"line_end":129,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[166]},"from":{"krate":0,"index":5108},"to":{"krate":1,"index":4268}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":298592,"byte_end":298598,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"kind":{"variant":"Impl","fields":[167]},"from":{"krate":0,"index":2046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":299235,"byte_end":299241,"line_start":37,"line_end":37,"column_start":33,"column_end":39},"kind":{"variant":"Impl","fields":[168]},"from":{"krate":0,"index":2046},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":299705,"byte_end":299711,"line_start":57,"line_end":57,"column_start":27,"column_end":33},"kind":{"variant":"Impl","fields":[169]},"from":{"krate":0,"index":2046},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,114,101,97,109,46,114,115],"byte_start":300193,"byte_end":300199,"line_start":71,"line_end":71,"column_start":42,"column_end":48},"kind":{"variant":"Impl","fields":[170]},"from":{"krate":0,"index":2046},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":300844,"byte_end":300848,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"kind":{"variant":"Impl","fields":[171]},"from":{"krate":0,"index":5114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":302145,"byte_end":302149,"line_start":62,"line_end":62,"column_start":19,"column_end":23},"kind":{"variant":"Impl","fields":[172]},"from":{"krate":0,"index":5114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":303138,"byte_end":303142,"line_start":93,"line_end":93,"column_start":24,"column_end":28},"kind":{"variant":"Impl","fields":[173]},"from":{"krate":0,"index":5114},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":306073,"byte_end":306088,"line_start":165,"line_end":165,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[174]},"from":{"krate":0,"index":2112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":318610,"byte_end":318618,"line_start":571,"line_end":571,"column_start":10,"column_end":18},"kind":{"variant":"Impl","fields":[175]},"from":{"krate":0,"index":5134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":338546,"byte_end":338554,"line_start":1161,"line_end":1161,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[176]},"from":{"krate":0,"index":5134},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,114,101,115,112,111,110,115,101,46,114,115],"byte_start":338959,"byte_end":338967,"line_start":1178,"line_end":1178,"column_start":28,"column_end":36},"kind":{"variant":"Impl","fields":[177]},"from":{"krate":0,"index":5134},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,97,105,108,117,114,101,46,114,115],"byte_start":339385,"byte_end":339392,"line_start":10,"line_end":10,"column_start":29,"column_end":36},"kind":{"variant":"Impl","fields":[178]},"from":{"krate":0,"index":5140},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,102,97,105,108,117,114,101,46,114,115],"byte_start":339522,"byte_end":339529,"line_start":16,"line_end":16,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[179]},"from":{"krate":0,"index":5140},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,99,111,110,116,101,110,116,46,114,115],"byte_start":341210,"byte_end":341217,"line_start":49,"line_end":49,"column_start":46,"column_end":53},"kind":{"variant":"Impl","fields":[180]},"from":{"krate":0,"index":5146},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":344352,"byte_end":344359,"line_start":43,"line_end":43,"column_start":46,"column_end":53},"kind":{"variant":"Impl","fields":[181]},"from":{"krate":0,"index":5302},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":345008,"byte_end":345015,"line_start":58,"line_end":58,"column_start":53,"column_end":60},"kind":{"variant":"Impl","fields":[182]},"from":{"krate":0,"index":5302},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":346414,"byte_end":346422,"line_start":103,"line_end":103,"column_start":46,"column_end":54},"kind":{"variant":"Impl","fields":[183]},"from":{"krate":0,"index":5318},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":347149,"byte_end":347158,"line_start":130,"line_end":130,"column_start":28,"column_end":37},"kind":{"variant":"Impl","fields":[184]},"from":{"krate":0,"index":5334},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":347701,"byte_end":347706,"line_start":152,"line_end":152,"column_start":29,"column_end":34},"kind":{"variant":"Impl","fields":[185]},"from":{"krate":0,"index":5348},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":348743,"byte_end":348753,"line_start":187,"line_end":187,"column_start":46,"column_end":56},"kind":{"variant":"Impl","fields":[186]},"from":{"krate":0,"index":5364},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":349522,"byte_end":349530,"line_start":214,"line_end":214,"column_start":46,"column_end":54},"kind":{"variant":"Impl","fields":[187]},"from":{"krate":0,"index":5380},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,101,115,112,111,110,115,101,47,115,116,97,116,117,115,46,114,115],"byte_start":350250,"byte_end":350256,"line_start":238,"line_end":238,"column_start":46,"column_end":52},"kind":{"variant":"Impl","fields":[188]},"from":{"krate":0,"index":5396},"to":{"krate":0,"index":1812}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":355697,"byte_end":355703,"line_start":124,"line_end":124,"column_start":40,"column_end":46},"kind":{"variant":"Impl","fields":[189]},"from":{"krate":2,"index":40964},"to":{"krate":0,"index":2342}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":356144,"byte_end":356151,"line_start":145,"line_end":145,"column_start":15,"column_end":22},"kind":{"variant":"Impl","fields":[190]},"from":{"krate":0,"index":5412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":367768,"byte_end":367775,"line_start":519,"line_end":519,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[191]},"from":{"krate":0,"index":5412},"to":{"krate":2,"index":2274}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":368313,"byte_end":368320,"line_start":543,"line_end":543,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[192]},"from":{"krate":0,"index":5412},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,111,117,116,99,111,109,101,46,114,115],"byte_start":368485,"byte_end":368492,"line_start":549,"line_end":549,"column_start":32,"column_end":39},"kind":{"variant":"Impl","fields":[193]},"from":{"krate":0,"index":5412},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":411029,"byte_end":411040,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[194]},"from":{"krate":0,"index":5450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":414041,"byte_end":414052,"line_start":126,"line_end":126,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[195]},"from":{"krate":0,"index":5450},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":415198,"byte_end":415209,"line_start":150,"line_end":150,"column_start":16,"column_end":27},"kind":{"variant":"Impl","fields":[196]},"from":{"krate":0,"index":5450},"to":{"krate":1,"index":2388}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,114,114,111,114,46,114,115],"byte_start":416149,"byte_end":416160,"line_start":168,"line_end":168,"column_start":20,"column_end":31},"kind":{"variant":"Impl","fields":[197]},"from":{"krate":0,"index":5450},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":417775,"byte_end":417786,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[198]},"from":{"krate":0,"index":5500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":419050,"byte_end":419061,"line_start":78,"line_end":78,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[199]},"from":{"krate":0,"index":5500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":419927,"byte_end":419938,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"kind":{"variant":"Impl","fields":[200]},"from":{"krate":0,"index":5500},"to":{"krate":2,"index":6602}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,101,110,118,105,114,111,110,109,101,110,116,46,114,115],"byte_start":421640,"byte_end":421651,"line_start":161,"line_end":161,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[201]},"from":{"krate":0,"index":5500},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":424135,"byte_end":424141,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[202]},"from":{"krate":0,"index":5524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":447774,"byte_end":447780,"line_start":792,"line_end":792,"column_start":21,"column_end":27},"kind":{"variant":"Impl","fields":[203]},"from":{"krate":0,"index":5524},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,111,110,102,105,103,46,114,115],"byte_start":448298,"byte_end":448304,"line_start":810,"line_end":810,"column_start":20,"column_end":26},"kind":{"variant":"Impl","fields":[204]},"from":{"krate":0,"index":5524},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,98,117,105,108,100,101,114,46,114,115],"byte_start":449637,"byte_end":449650,"line_start":31,"line_end":31,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[205]},"from":{"krate":0,"index":5530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,116,111,109,108,95,101,120,116,46,114,115],"byte_start":462010,"byte_end":462021,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"kind":{"variant":"Impl","fields":[206]},"from":{"krate":0,"index":2694},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":465142,"byte_end":465151,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[207]},"from":{"krate":0,"index":5544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":465521,"byte_end":465530,"line_start":31,"line_end":31,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[208]},"from":{"krate":0,"index":5544},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":466973,"byte_end":466979,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[209]},"from":{"krate":0,"index":5556},"to":{"krate":2,"index":2640}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":467125,"byte_end":467131,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[210]},"from":{"krate":0,"index":5556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,99,117,115,116,111,109,95,118,97,108,117,101,115,46,114,115],"byte_start":469451,"byte_end":469457,"line_start":177,"line_end":177,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[211]},"from":{"krate":0,"index":5556},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,111,110,102,105,103,47,109,111,100,46,114,115],"byte_start":377155,"byte_end":377167,"line_start":238,"line_end":238,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[212]},"from":{"krate":0,"index":5566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":474604,"byte_end":474608,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[213]},"from":{"krate":0,"index":2904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,46,114,115],"byte_start":482055,"byte_end":482059,"line_start":276,"line_end":276,"column_start":15,"column_end":19},"kind":{"variant":"Impl","fields":[214]},"from":{"krate":0,"index":2904},"to":{"krate":2,"index":2040}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,95,115,116,114,101,97,109,46,114,115],"byte_start":482924,"byte_end":482934,"line_start":21,"line_end":21,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[215]},"from":{"krate":0,"index":2952},"to":{"krate":1,"index":4218}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,100,97,116,97,95,115,116,114,101,97,109,46,114,115],"byte_start":483942,"byte_end":483952,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[216]},"from":{"krate":0,"index":2952},"to":{"krate":2,"index":2040}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,110,101,116,95,115,116,114,101,97,109,46,114,115],"byte_start":484632,"byte_end":484641,"line_start":22,"line_end":22,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[217]},"from":{"krate":0,"index":5596},"to":{"krate":1,"index":4218}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,110,101,116,95,115,116,114,101,97,109,46,114,115],"byte_start":485061,"byte_end":485070,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[218]},"from":{"krate":0,"index":5596},"to":{"krate":1,"index":4250}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,110,101,116,95,115,116,114,101,97,109,46,114,115],"byte_start":485683,"byte_end":485692,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"kind":{"variant":"Impl","fields":[219]},"from":{"krate":0,"index":5596},"to":{"krate":15,"index":3174}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":487264,"byte_end":487270,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"kind":{"variant":"Impl","fields":[220]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":2342}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":494394,"byte_end":494399,"line_start":214,"line_end":214,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1780},"to":{"krate":0,"index":3042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":494991,"byte_end":494995,"line_start":228,"line_end":228,"column_start":19,"column_end":23},"kind":{"variant":"Impl","fields":[221]},"from":{"krate":0,"index":2904},"to":{"krate":0,"index":3042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":495155,"byte_end":495161,"line_start":235,"line_end":235,"column_start":32,"column_end":38},"kind":{"variant":"Impl","fields":[222]},"from":{"krate":2,"index":41078},"to":{"krate":0,"index":3042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":495515,"byte_end":495521,"line_start":247,"line_end":247,"column_start":32,"column_end":38},"kind":{"variant":"Impl","fields":[223]},"from":{"krate":2,"index":40964},"to":{"krate":0,"index":3042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":495812,"byte_end":495818,"line_start":258,"line_end":258,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[224]},"from":{"krate":4,"index":4884},"to":{"krate":0,"index":3042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,100,97,116,97,47,102,114,111,109,95,100,97,116,97,46,114,115],"byte_start":496150,"byte_end":496153,"line_start":270,"line_end":270,"column_start":19,"column_end":22},"kind":{"variant":"Impl","fields":[225]},"from":{"krate":4,"index":3888},"to":{"krate":0,"index":3042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":497007,"byte_end":497014,"line_start":19,"line_end":19,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[226]},"from":{"krate":0,"index":3108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,102,97,105,114,105,110,103,115,46,114,115],"byte_start":515675,"byte_end":515683,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[227]},"from":{"krate":0,"index":5608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":521349,"byte_end":521354,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[228]},"from":{"krate":0,"index":3196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,97,100,95,104,111,99,46,114,115],"byte_start":523619,"byte_end":523624,"line_start":129,"line_end":129,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[229]},"from":{"krate":0,"index":3196},"to":{"krate":0,"index":3258}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":526662,"byte_end":526666,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[230]},"from":{"krate":0,"index":5618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,105,110,102,111,95,107,105,110,100,46,114,115],"byte_start":528594,"byte_end":528598,"line_start":105,"line_end":105,"column_start":16,"column_end":20},"kind":{"variant":"Impl","fields":[231]},"from":{"krate":0,"index":5618},"to":{"krate":2,"index":1940}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":511152,"byte_end":511156,"line_start":256,"line_end":256,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1774},"to":{"krate":0,"index":3258}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":511159,"byte_end":511163,"line_start":256,"line_end":256,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1786},"to":{"krate":0,"index":3258}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,102,97,105,114,105,110,103,47,109,111,100,46,114,115],"byte_start":514789,"byte_end":514792,"line_start":346,"line_end":346,"column_start":43,"column_end":46},"kind":{"variant":"Impl","fields":[232]},"from":{"krate":4,"index":494},"to":{"krate":0,"index":3258}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":531848,"byte_end":531859,"line_start":95,"line_end":95,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[233]},"from":{"krate":0,"index":3298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":532670,"byte_end":532681,"line_start":130,"line_end":130,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[234]},"from":{"krate":0,"index":3298},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":532818,"byte_end":532829,"line_start":137,"line_end":137,"column_start":29,"column_end":40},"kind":{"variant":"Impl","fields":[235]},"from":{"krate":0,"index":3298},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":533112,"byte_end":533123,"line_start":147,"line_end":147,"column_start":26,"column_end":37},"kind":{"variant":"Impl","fields":[236]},"from":{"krate":0,"index":3298},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":533271,"byte_end":533286,"line_start":154,"line_end":154,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[237]},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":533743,"byte_end":533754,"line_start":166,"line_end":166,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[238]},"from":{"krate":0,"index":3298},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":533929,"byte_end":533940,"line_start":174,"line_end":174,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[239]},"from":{"krate":0,"index":3298},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":534120,"byte_end":534131,"line_start":182,"line_end":182,"column_start":30,"column_end":41},"kind":{"variant":"Impl","fields":[240]},"from":{"krate":0,"index":3298},"to":{"krate":1,"index":2388}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":534595,"byte_end":534606,"line_start":195,"line_end":195,"column_start":15,"column_end":26},"kind":{"variant":"Impl","fields":[241]},"from":{"krate":0,"index":3298},"to":{"krate":2,"index":2040}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,99,111,108,108,105,100,101,114,46,114,115],"byte_start":553090,"byte_end":553093,"line_start":41,"line_end":41,"column_start":36,"column_end":39},"kind":{"variant":"Impl","fields":[242]},"from":{"krate":0,"index":4096},"to":{"krate":0,"index":3354}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,99,111,108,108,105,100,101,114,46,114,115],"byte_start":553571,"byte_end":553580,"line_start":61,"line_end":61,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[243]},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":3354}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,99,111,108,108,105,100,101,114,46,114,115],"byte_start":554435,"byte_end":554440,"line_start":78,"line_end":78,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[244]},"from":{"krate":0,"index":3400},"to":{"krate":0,"index":3354}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,99,111,108,108,105,100,101,114,46,114,115],"byte_start":555390,"byte_end":555395,"line_start":99,"line_end":99,"column_start":36,"column_end":41},"kind":{"variant":"Impl","fields":[245]},"from":{"krate":0,"index":3400},"to":{"krate":0,"index":3354}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":572237,"byte_end":572242,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[246]},"from":{"krate":0,"index":3400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":578199,"byte_end":578204,"line_start":220,"line_end":220,"column_start":16,"column_end":21},"kind":{"variant":"Impl","fields":[247]},"from":{"krate":0,"index":3400},"to":{"krate":2,"index":2606}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":578505,"byte_end":578510,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[248]},"from":{"krate":0,"index":3400},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":578904,"byte_end":578909,"line_start":249,"line_end":249,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[249]},"from":{"krate":0,"index":3400},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,114,111,117,116,101,46,114,115],"byte_start":579080,"byte_end":579085,"line_start":256,"line_end":256,"column_start":40,"column_end":45},"kind":{"variant":"Impl","fields":[250]},"from":{"krate":0,"index":3400},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,117,116,101,114,47,109,111,100,46,114,115],"byte_start":535804,"byte_end":535810,"line_start":20,"line_end":20,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[251]},"from":{"krate":0,"index":5668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":580371,"byte_end":580377,"line_start":40,"line_end":40,"column_start":25,"column_end":31},"kind":{"variant":"Impl","fields":[252]},"from":{"krate":0,"index":3554},"to":{"krate":15,"index":3708}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,114,111,99,107,101,116,46,114,115],"byte_start":583347,"byte_end":583353,"line_start":109,"line_end":109,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[253]},"from":{"krate":0,"index":3554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":610185,"byte_end":610192,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[254]},"from":{"krate":0,"index":3634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":611741,"byte_end":611748,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"kind":{"variant":"Impl","fields":[255]},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,99,97,116,99,104,101,114,46,114,115],"byte_start":611880,"byte_end":611887,"line_start":125,"line_end":125,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[256]},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":617756,"byte_end":617760,"line_start":4,"line_end":4,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":4218},"to":{"krate":0,"index":3692}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":618246,"byte_end":618247,"line_start":20,"line_end":20,"column_start":31,"column_end":32},"kind":{"variant":"Impl","fields":[257]},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":3692}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":618568,"byte_end":618569,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"kind":{"variant":"Impl","fields":[258]},"from":{"krate":0,"index":1285},"to":{"krate":0,"index":3698}},{"span":{"file_name":[47,104,111,109,101,47,122,104,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,111,99,107,101,116,45,48,46,51,46,49,49,47,115,114,99,47,101,120,116,46,114,115],"byte_start":618913,"byte_end":618916,"line_start":43,"line_end":43,"column_start":31,"column_end":34},"kind":{"variant":"Impl","fields":[259]},"from":{"krate":4,"index":3888},"to":{"krate":0,"index":3698}}]}